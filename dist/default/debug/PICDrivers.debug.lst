

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Mar 02 07:33:49 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 05/05/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F46K20 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000000                     
    58                           	psect	smallconst
    59   001000                     __psmallconst:
    60                           	callstack 0
    61   001000  00                 	db	0
    62   001001                     STR_1:
    63   001001  78                 	db	120	;'x'
    64   001002  20                 	db	32
    65   001003  3D                 	db	61	;'='
    66   001004  20                 	db	32
    67   001005  25                 	db	37
    68   001006  69                 	db	105	;'i'
    69   001007  00                 	db	0
    70   001008  00                 	db	0	; dummy byte at the end
    71   000000                     
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75   00146A                     __pcinit:
    76                           	callstack 0
    77   00146A                     start_initialization:
    78                           	callstack 0
    79   00146A                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to COMRAM (37 bytes)
    83   00146A  EE00  F001         	lfsr	0,__pbssCOMRAM
    84   00146E  0E25               	movlw	37
    85   001470                     clear_0:
    86   001470  6AEE               	clrf	postinc0,c
    87   001472  06E8               	decf	wreg,f,c
    88   001474  E1FD               	bnz	clear_0
    89   001476                     end_of_initialization:
    90                           	callstack 0
    91   001476                     __end_of__initialization:
    92                           	callstack 0
    93   001476  0E00               	movlw	low (__Lsmallconst shr (0+16))
    94   001478  6EF8               	movwf	tblptru,c
    95   00147A  0E10               	movlw	high __Lsmallconst
    96   00147C  6EF7               	movwf	tblptrh,c
    97   00147E  0100               	movlb	0
    98   001480  EF4F  F00A         	goto	_main	;jump to C main() function
    99                           
   100                           	psect	bssCOMRAM
   101   000001                     __pbssCOMRAM:
   102                           	callstack 0
   103   000001                     _dbuf:
   104                           	callstack 0
   105   000001                     	ds	32
   106   000021                     _width:
   107                           	callstack 0
   108   000021                     	ds	2
   109   000023                     _prec:
   110                           	callstack 0
   111   000023                     	ds	2
   112   000025                     _flags:
   113                           	callstack 0
   114   000025                     	ds	1
   115                           
   116                           	psect	cstackCOMRAM
   117   000026                     __pcstackCOMRAM:
   118                           	callstack 0
   119   000026                     ?___awdiv:
   120                           	callstack 0
   121   000026                     ?___awmod:
   122                           	callstack 0
   123   000026                     ___awdiv@dividend:
   124                           	callstack 0
   125   000026                     ___awmod@dividend:
   126                           	callstack 0
   127   000026                     fputc@c:
   128                           	callstack 0
   129                           
   130                           ; 2 bytes @ 0x0
   131   000026                     	ds	2
   132   000028                     ___awdiv@divisor:
   133                           	callstack 0
   134   000028                     ___awmod@divisor:
   135                           	callstack 0
   136   000028                     fputc@fp:
   137                           	callstack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140   000028                     	ds	2
   141   00002A                     ??_fputc:
   142   00002A                     ___awdiv@counter:
   143                           	callstack 0
   144   00002A                     ___awmod@counter:
   145                           	callstack 0
   146                           
   147                           ; 1 bytes @ 0x4
   148   00002A                     	ds	1
   149   00002B                     ___awdiv@sign:
   150                           	callstack 0
   151   00002B                     ___awmod@sign:
   152                           	callstack 0
   153                           
   154                           ; 1 bytes @ 0x5
   155   00002B                     	ds	1
   156   00002C                     ?_abs:
   157                           	callstack 0
   158   00002C                     ___awdiv@quotient:
   159                           	callstack 0
   160   00002C                     abs@a:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x6
   164   00002C                     	ds	2
   165   00002E                     ??_abs:
   166                           
   167                           ; 1 bytes @ 0x8
   168   00002E                     	ds	2
   169   000030                     vfpfcnvrt@fp:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0xA
   173   000030                     	ds	2
   174   000032                     vfpfcnvrt@fmt:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0xC
   178   000032                     	ds	1
   179   000033                     vfpfcnvrt@ap:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0xD
   183   000033                     	ds	1
   184   000034                     ??_vfpfcnvrt:
   185                           
   186                           ; 1 bytes @ 0xE
   187   000034                     	ds	1
   188   000035                     vfpfcnvrt@done:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0xF
   192   000035                     	ds	1
   193   000036                     vfpfcnvrt@cp:
   194                           	callstack 0
   195                           
   196                           ; 1 bytes @ 0x10
   197   000036                     	ds	1
   198   000037                     vfpfcnvrt@convarg:
   199                           	callstack 0
   200                           
   201                           ; 4 bytes @ 0x11
   202   000037                     	ds	4
   203   00003B                     vfpfcnvrt@c:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x15
   207   00003B                     	ds	1
   208   00003C                     ?_vfprintf:
   209                           	callstack 0
   210   00003C                     vfprintf@fp:
   211                           	callstack 0
   212                           
   213                           ; 2 bytes @ 0x16
   214   00003C                     	ds	2
   215   00003E                     vfprintf@fmt:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x18
   219   00003E                     	ds	1
   220   00003F                     vfprintf@ap:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x19
   224   00003F                     	ds	1
   225   000040                     vfprintf@cfmt:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x1A
   229   000040                     	ds	1
   230   000041                     ?_printf:
   231                           	callstack 0
   232   000041                     printf@fmt:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x1B
   236   000041                     	ds	3
   237   000044                     printf@ap:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x1E
   241   000044                     	ds	1
   242   000045                     
   243                           ; 1 bytes @ 0x1F
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 3 in file "main.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;  x               8    0        long long 
   254 ;; Return value:  Size  Location     Type
   255 ;;                  2    6[None  ] int 
   256 ;; Registers used:
   257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called: 5
   269 ;; This function calls:
   270 ;;		_printf
   271 ;; This function is called by:
   272 ;;		Startup code after reset
   273 ;; This function uses a non-reentrant model
   274 ;;
   275                           
   276                           	psect	text0
   277   00149E                     __ptext0:
   278                           	callstack 0
   279   00149E                     _main:
   280                           	callstack 26
   281   00149E                     
   282                           ;main.c: 5:     long long x;;main.c: 6:     printf("x = %i", sizeof(x));
   283   00149E  0E01               	movlw	low STR_1
   284   0014A0  6E41               	movwf	printf@fmt^0,c
   285   0014A2  0E00               	movlw	0
   286   0014A4  6E43               	movwf	(?_printf+2)^0,c
   287   0014A6  0E08               	movlw	8
   288   0014A8  6E42               	movwf	(?_printf+1)^0,c
   289   0014AA  EC42  F00A         	call	_printf	;wreg free
   290   0014AE  EF00  F000         	goto	start
   291   0014B2                     __end_of_main:
   292                           	callstack 0
   293                           
   294 ;; *************** function _printf *****************
   295 ;; Defined at:
   296 ;;		line 5 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
   299 ;;		 -> STR_1(7), 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;  ret             2    0        int 
   302 ;;  ap              1   30[COMRAM] PTR void [1]
   303 ;;		 -> ?_printf(2), 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  2   27[COMRAM] int 
   306 ;; Registers used:
   307 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   313 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   317 ;;Total ram usage:        4 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 4
   320 ;; This function calls:
   321 ;;		_vfprintf
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text1
   328   001484                     __ptext1:
   329                           	callstack 0
   330   001484                     _printf:
   331                           	callstack 26
   332   001484  0E42               	movlw	low (?_printf+1)
   333   001486  6E44               	movwf	printf@ap^0,c
   334   001488  0E00               	movlw	0
   335   00148A  6E3C               	movwf	vfprintf@fp^0,c
   336   00148C  0E00               	movlw	0
   337   00148E  6E3D               	movwf	(vfprintf@fp+1)^0,c
   338   001490  C041  F03E         	movff	printf@fmt,vfprintf@fmt
   339   001494  0E44               	movlw	low printf@ap
   340   001496  6E3F               	movwf	vfprintf@ap^0,c
   341   001498  ECFC  F009         	call	_vfprintf	;wreg free
   342   00149C  0012               	return		;funcret
   343   00149E                     __end_of_printf:
   344                           	callstack 0
   345                           
   346 ;; *************** function _vfprintf *****************
   347 ;; Defined at:
   348 ;;		line 1817 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
   351 ;;		 -> NULL(0), 
   352 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
   353 ;;		 -> STR_1(7), 
   354 ;;  ap              1   25[COMRAM] PTR PTR void 
   355 ;;		 -> printf@ap(1), 
   356 ;; Auto vars:     Size  Location     Type
   357 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
   358 ;;		 -> STR_1(7), 
   359 ;; Return value:  Size  Location     Type
   360 ;;                  2   22[COMRAM] int 
   361 ;; Registers used:
   362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   371 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   372 ;;Total ram usage:        5 bytes
   373 ;; Hardware stack levels used: 1
   374 ;; Hardware stack levels required when called: 3
   375 ;; This function calls:
   376 ;;		_vfpfcnvrt
   377 ;; This function is called by:
   378 ;;		_printf
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text2
   383   0013F8                     __ptext2:
   384                           	callstack 0
   385   0013F8                     _vfprintf:
   386                           	callstack 26
   387   0013F8                     
   388                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vf
      +                          printf(FILE *fp, const char *fmt, va_list ap);P:\Programs_installed\Microchip\xc8\v2.46\
      +                          pic\sources\c99\common\doprnt.c: 1818: {;P:\Programs_installed\Microchip\xc8\v2.46\pic\s
      +                          ources\c99\common\doprnt.c: 1820:     char *cfmt;;P:\Programs_installed\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 1822:     cfmt = (char *)fmt;
   389   0013F8  C03E  F040         	movff	vfprintf@fmt,vfprintf@cfmt
   390                           
   391                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     wh
      +                          ile (*cfmt) {
   392   0013FC  EF0A  F00A         	goto	l1084
   393   001400                     l1082:
   394                           
   395                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfp
      +                          fcnvrt(fp, &cfmt, ap);
   396   001400  C03C  F030         	movff	vfprintf@fp,vfpfcnvrt@fp
   397   001404  C03D  F031         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   398   001408  0E40               	movlw	low vfprintf@cfmt
   399   00140A  6E32               	movwf	vfpfcnvrt@fmt^0,c
   400   00140C  C03F  F033         	movff	vfprintf@ap,vfpfcnvrt@ap
   401   001410  EC05  F008         	call	_vfpfcnvrt	;wreg free
   402   001414                     l1084:
   403                           
   404                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     wh
      +                          ile (*cfmt) {
   405   001414  C040  FFF6         	movff	vfprintf@cfmt,tblptrl
   406   001418                     	if	0	;There is only one active tblptr byte
   407   001418                     	endif
   408   001418                     	if	0	;tblptru may be non-zero
   409   001418                     	endif
   410   001418                     	if	0	;tblptru may be non-zero
   411   001418                     	endif
   412   001418  0008               	tblrd		*
   413   00141A  50F5               	movf	tablat,w,c
   414   00141C  0900               	iorlw	0
   415   00141E  A4D8               	btfss	status,2,c
   416   001420  EF14  F00A         	goto	u561
   417   001424  EF16  F00A         	goto	u560
   418   001428                     u561:
   419   001428  EF00  F00A         	goto	l1082
   420   00142C                     u560:
   421   00142C                     
   422                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  retur
      +                          n 0;
   423   00142C  0E00               	movlw	0
   424   00142E  6E3D               	movwf	(?_vfprintf+1)^0,c
   425   001430  0E00               	movlw	0
   426   001432  6E3C               	movwf	?_vfprintf^0,c
   427   001434  0012               	return		;funcret
   428   001436                     __end_of_vfprintf:
   429                           	callstack 0
   430                           
   431 ;; *************** function _vfpfcnvrt *****************
   432 ;; Defined at:
   433 ;;		line 1177 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
   436 ;;		 -> NULL(0), 
   437 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
   438 ;;		 -> vfprintf@cfmt(1), 
   439 ;;  ap              1   13[COMRAM] PTR PTR void 
   440 ;;		 -> printf@ap(1), 
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  convarg         4   17[COMRAM] struct .
   443 ;;  c               1   21[COMRAM] unsigned char 
   444 ;;  cp              1   16[COMRAM] PTR unsigned char 
   445 ;;		 -> STR_1(7), 
   446 ;;  done            1   15[COMRAM] _Bool 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:       12 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 2
   463 ;; This function calls:
   464 ;;		___awdiv
   465 ;;		___awmod
   466 ;;		_abs
   467 ;;		_fputc
   468 ;; This function is called by:
   469 ;;		_vfprintf
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text3
   474   00100A                     __ptext3:
   475                           	callstack 0
   476   00100A                     _vfpfcnvrt:
   477                           	callstack 26
   478   00100A                     
   479                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcn
      +                          vrt(FILE *fp, char *fmt[], va_list ap);P:\Programs_installed\Microchip\xc8\v2.46\pic\sou
      +                          rces\c99\common\doprnt.c: 1178: {;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\
      +                          c99\common\doprnt.c: 1179:     char c, *cp;;P:\Programs_installed\Microchip\xc8\v2.46\pi
      +                          c\sources\c99\common\doprnt.c: 1180:     _Bool done;;P:\Programs_installed\Microchip\xc8
      +                          \v2.46\pic\sources\c99\common\doprnt.c: 1188:  } convarg;;P:\Programs_installed\Microchi
      +                          p\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
   480   00100A  5032               	movf	vfpfcnvrt@fmt^0,w,c
   481   00100C  6ED9               	movwf	fsr2l,c
   482   00100E  6ADA               	clrf	fsr2h,c
   483   001010  CFDF FFF6          	movff	indf2,tblptrl
   484   001014                     	if	0	;There is only one active tblptr byte
   485   001014                     	endif
   486   001014                     	if	0	;tblptru may be non-zero
   487   001014                     	endif
   488   001014                     	if	0	;tblptru may be non-zero
   489   001014                     	endif
   490   001014  0008               	tblrd		*
   491   001016  50F5               	movf	tablat,w,c
   492   001018  0A25               	xorlw	37
   493   00101A  A4D8               	btfss	status,2,c
   494   00101C  EF12  F008         	goto	u461
   495   001020  EF14  F008         	goto	u460
   496   001024                     u461:
   497   001024  EFCB  F008         	goto	l1074
   498   001028                     u460:
   499   001028                     
   500                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:       
      +                            ++*fmt;
   501   001028  5032               	movf	vfpfcnvrt@fmt^0,w,c
   502   00102A  6ED9               	movwf	fsr2l,c
   503   00102C  6ADA               	clrf	fsr2h,c
   504   00102E  2ADF               	incf	indf2,f,c
   505   001030                     
   506                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:       
      +                            flags = width = 0;
   507   001030  0E00               	movlw	0
   508   001032  6E22               	movwf	(_width+1)^0,c
   509   001034  0E00               	movlw	0
   510   001036  6E21               	movwf	_width^0,c
   511   001038  C021  F025         	movff	_width,_flags
   512   00103C                     
   513                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:       
      +                            prec = -1;
   514   00103C  6823               	setf	_prec^0,c
   515   00103E  6824               	setf	(_prec+1)^0,c
   516   001040                     
   517                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp =
      +                           *fmt;
   518   001040  5032               	movf	vfpfcnvrt@fmt^0,w,c
   519   001042  6ED9               	movwf	fsr2l,c
   520   001044  6ADA               	clrf	fsr2h,c
   521   001046  50DF               	movf	indf2,w,c
   522   001048  6E36               	movwf	vfpfcnvrt@cp^0,c
   523   00104A                     
   524                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (
      +                          *cp == 'd' || *cp == 'i') {
   525   00104A  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   526   00104E                     	if	0	;There is only one active tblptr byte
   527   00104E                     	endif
   528   00104E                     	if	0	;tblptru may be non-zero
   529   00104E                     	endif
   530   00104E                     	if	0	;tblptru may be non-zero
   531   00104E                     	endif
   532   00104E  0008               	tblrd		*
   533   001050  50F5               	movf	tablat,w,c
   534   001052  0A64               	xorlw	100
   535   001054  B4D8               	btfsc	status,2,c
   536   001056  EF2F  F008         	goto	u471
   537   00105A  EF31  F008         	goto	u470
   538   00105E                     u471:
   539   00105E  EF3D  F008         	goto	l1044
   540   001062                     u470:
   541   001062  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   542   001066                     	if	0	;There is only one active tblptr byte
   543   001066                     	endif
   544   001066                     	if	0	;tblptru may be non-zero
   545   001066                     	endif
   546   001066                     	if	0	;tblptru may be non-zero
   547   001066                     	endif
   548   001066  0008               	tblrd		*
   549   001068  50F5               	movf	tablat,w,c
   550   00106A  0A69               	xorlw	105
   551   00106C  A4D8               	btfss	status,2,c
   552   00106E  EF3B  F008         	goto	u481
   553   001072  EF3D  F008         	goto	u480
   554   001076                     u481:
   555   001076  EFC5  F008         	goto	l1070
   556   00107A                     u480:
   557   00107A                     l1044:
   558                           
   559                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    con
      +                          varg.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   560   00107A  5033               	movf	vfpfcnvrt@ap^0,w,c
   561   00107C  6ED9               	movwf	fsr2l,c
   562   00107E  6ADA               	clrf	fsr2h,c
   563   001080  0E02               	movlw	2
   564   001082  26DF               	addwf	indf2,f,c
   565   001084  5CDF               	subwf	indf2,w,c
   566   001086  6ED9               	movwf	fsr2l,c
   567   001088  6ADA               	clrf	fsr2h,c
   568   00108A  CFDE F037          	movff	postinc2,vfpfcnvrt@convarg
   569   00108E  CFDE F038          	movff	postinc2,vfpfcnvrt@convarg+1
   570   001092                     
   571                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fm
      +                          t = cp+1;
   572   001092  5032               	movf	vfpfcnvrt@fmt^0,w,c
   573   001094  6ED9               	movwf	fsr2l,c
   574   001096  6ADA               	clrf	fsr2h,c
   575   001098  2836               	incf	vfpfcnvrt@cp^0,w,c
   576   00109A  6EDF               	movwf	indf2,c
   577   00109C                     
   578                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c =
      +                           sizeof(dbuf);
   579   00109C  0E20               	movlw	32
   580   00109E  6E3B               	movwf	vfpfcnvrt@c^0,c
   581                           
   582                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    don
      +                          e = convarg.sint < 0;
   583   0010A0  BE38               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
   584   0010A2  EF55  F008         	goto	u491
   585   0010A6  EF58  F008         	goto	u490
   586   0010AA                     u491:
   587   0010AA  0E01               	movlw	1
   588   0010AC  EF59  F008         	goto	u500
   589   0010B0                     u490:
   590   0010B0  0E00               	movlw	0
   591   0010B2                     u500:
   592   0010B2  6E35               	movwf	vfpfcnvrt@done^0,c
   593   0010B4                     l1050:
   594                           
   595                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     db
      +                          uf[--c] = abs(convarg.sint % 10) + '0';
   596   0010B4  063B               	decf	vfpfcnvrt@c^0,f,c
   597   0010B6  503B               	movf	vfpfcnvrt@c^0,w,c
   598   0010B8  0F01               	addlw	low _dbuf
   599   0010BA  6ED9               	movwf	fsr2l,c
   600   0010BC  6ADA               	clrf	fsr2h,c
   601   0010BE  C037  F026         	movff	vfpfcnvrt@convarg,___awmod@dividend
   602   0010C2  C038  F027         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
   603   0010C6  0E00               	movlw	0
   604   0010C8  6E29               	movwf	(___awmod@divisor+1)^0,c
   605   0010CA  0E0A               	movlw	10
   606   0010CC  6E28               	movwf	___awmod@divisor^0,c
   607   0010CE  ECA4  F009         	call	___awmod	;wreg free
   608   0010D2  C026  F02C         	movff	?___awmod,abs@a
   609   0010D6  C027  F02D         	movff	?___awmod+1,abs@a+1
   610   0010DA  EC1B  F00A         	call	_abs	;wreg free
   611   0010DE  502C               	movf	?_abs^0,w,c
   612   0010E0  0F30               	addlw	48
   613   0010E2  6EDF               	movwf	indf2,c
   614   0010E4                     
   615                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     co
      +                          nvarg.sint /= 10;
   616   0010E4  C037  F026         	movff	vfpfcnvrt@convarg,___awdiv@dividend
   617   0010E8  C038  F027         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
   618   0010EC  0E00               	movlw	0
   619   0010EE  6E29               	movwf	(___awdiv@divisor+1)^0,c
   620   0010F0  0E0A               	movlw	10
   621   0010F2  6E28               	movwf	___awdiv@divisor^0,c
   622   0010F4  EC42  F009         	call	___awdiv	;wreg free
   623   0010F8  C026  F037         	movff	?___awdiv,vfpfcnvrt@convarg
   624   0010FC  C027  F038         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
   625   001100                     
   626                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } w
      +                          hile (convarg.sint != 0 && c != 0);
   627   001100  5037               	movf	vfpfcnvrt@convarg^0,w,c
   628   001102  1038               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
   629   001104  B4D8               	btfsc	status,2,c
   630   001106  EF87  F008         	goto	u511
   631   00110A  EF89  F008         	goto	u510
   632   00110E                     u511:
   633   00110E  EF91  F008         	goto	l1058
   634   001112                     u510:
   635   001112  503B               	movf	vfpfcnvrt@c^0,w,c
   636   001114  A4D8               	btfss	status,2,c
   637   001116  EF8F  F008         	goto	u521
   638   00111A  EF91  F008         	goto	u520
   639   00111E                     u521:
   640   00111E  EF5A  F008         	goto	l1050
   641   001122                     u520:
   642   001122                     l1058:
   643                           
   644                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if 
      +                          (c != 0 && done) {
   645   001122  503B               	movf	vfpfcnvrt@c^0,w,c
   646   001124  B4D8               	btfsc	status,2,c
   647   001126  EF97  F008         	goto	u531
   648   00112A  EF99  F008         	goto	u530
   649   00112E                     u531:
   650   00112E  EFBA  F008         	goto	l1068
   651   001132                     u530:
   652   001132  5035               	movf	vfpfcnvrt@done^0,w,c
   653   001134  B4D8               	btfsc	status,2,c
   654   001136  EF9F  F008         	goto	u541
   655   00113A  EFA1  F008         	goto	u540
   656   00113E                     u541:
   657   00113E  EFBA  F008         	goto	l1068
   658   001142                     u540:
   659   001142                     
   660                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     db
      +                          uf[--c] = '-';
   661   001142  063B               	decf	vfpfcnvrt@c^0,f,c
   662   001144  503B               	movf	vfpfcnvrt@c^0,w,c
   663   001146  0F01               	addlw	low _dbuf
   664   001148  6ED9               	movwf	fsr2l,c
   665   00114A  6ADA               	clrf	fsr2h,c
   666   00114C  0E2D               	movlw	45
   667   00114E  6EDF               	movwf	indf2,c
   668   001150  EFBA  F008         	goto	l1068
   669   001154                     l1064:
   670                           
   671                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fp
      +                          utc(dbuf[c++], fp);
   672   001154  503B               	movf	vfpfcnvrt@c^0,w,c
   673   001156  0F01               	addlw	low _dbuf
   674   001158  6ED9               	movwf	fsr2l,c
   675   00115A  6ADA               	clrf	fsr2h,c
   676   00115C  50DF               	movf	indf2,w,c
   677   00115E  6E34               	movwf	??_vfpfcnvrt^0,c
   678   001160  5034               	movf	??_vfpfcnvrt^0,w,c
   679   001162  6E26               	movwf	fputc@c^0,c
   680   001164  6A27               	clrf	(fputc@c+1)^0,c
   681   001166  C030  F028         	movff	vfpfcnvrt@fp,fputc@fp
   682   00116A  C031  F029         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   683   00116E  ECDD  F008         	call	_fputc	;wreg free
   684   001172  2A3B               	incf	vfpfcnvrt@c^0,f,c
   685   001174                     l1068:
   686                           
   687                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    whi
      +                          le (c != sizeof(dbuf)) {
   688   001174  0E20               	movlw	32
   689   001176  183B               	xorwf	vfpfcnvrt@c^0,w,c
   690   001178  A4D8               	btfss	status,2,c
   691   00117A  EFC1  F008         	goto	u551
   692   00117E  EFC3  F008         	goto	u550
   693   001182                     u551:
   694   001182  EFAA  F008         	goto	l1064
   695   001186                     u550:
   696   001186  EFDC  F008         	goto	l726
   697   00118A                     l1070:
   698                           
   699                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:       
      +                            ++*fmt;
   700   00118A  5032               	movf	vfpfcnvrt@fmt^0,w,c
   701   00118C  6ED9               	movwf	fsr2l,c
   702   00118E  6ADA               	clrf	fsr2h,c
   703   001190  2ADF               	incf	indf2,f,c
   704   001192  EFDC  F008         	goto	l726
   705   001196                     l1074:
   706                           
   707                           ;P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fp
      +                          utc((int)(*fmt)[0], fp);
   708   001196  5032               	movf	vfpfcnvrt@fmt^0,w,c
   709   001198  6ED9               	movwf	fsr2l,c
   710   00119A  6ADA               	clrf	fsr2h,c
   711   00119C  CFDF FFF6          	movff	indf2,tblptrl
   712   0011A0                     	if	0	;There is only one active tblptr byte
   713   0011A0                     	endif
   714   0011A0                     	if	0	;tblptru may be non-zero
   715   0011A0                     	endif
   716   0011A0                     	if	0	;tblptru may be non-zero
   717   0011A0                     	endif
   718   0011A0  0008               	tblrd		*
   719   0011A2  50F5               	movf	tablat,w,c
   720   0011A4  6E26               	movwf	fputc@c^0,c
   721   0011A6  6A27               	clrf	(fputc@c+1)^0,c
   722   0011A8  C030  F028         	movff	vfpfcnvrt@fp,fputc@fp
   723   0011AC  C031  F029         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   724   0011B0  ECDD  F008         	call	_fputc	;wreg free
   725   0011B4  EFC5  F008         	goto	l1070
   726   0011B8                     l726:
   727   0011B8  0012               	return		;funcret
   728   0011BA                     __end_of_vfpfcnvrt:
   729                           	callstack 0
   730                           
   731 ;; *************** function _fputc *****************
   732 ;; Defined at:
   733 ;;		line 8 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  c               2    0[COMRAM] int 
   736 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
   737 ;;		 -> NULL(0), 
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  2    0[COMRAM] int 
   742 ;; Registers used:
   743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;Total ram usage:        9 bytes
   754 ;; Hardware stack levels used: 1
   755 ;; Hardware stack levels required when called: 1
   756 ;; This function calls:
   757 ;;		_putch
   758 ;; This function is called by:
   759 ;;		_vfpfcnvrt
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text4
   764   0011BA                     __ptext4:
   765                           	callstack 0
   766   0011BA                     _fputc:
   767                           	callstack 26
   768   0011BA  5028               	movf	fputc@fp^0,w,c
   769   0011BC  1029               	iorwf	(fputc@fp+1)^0,w,c
   770   0011BE  B4D8               	btfsc	status,2,c
   771   0011C0  EFE4  F008         	goto	u411
   772   0011C4  EFE6  F008         	goto	u410
   773   0011C8                     u411:
   774   0011C8  EFEF  F008         	goto	l1016
   775   0011CC                     u410:
   776   0011CC  5028               	movf	fputc@fp^0,w,c
   777   0011CE  1029               	iorwf	(fputc@fp+1)^0,w,c
   778   0011D0  A4D8               	btfss	status,2,c
   779   0011D2  EFED  F008         	goto	u421
   780   0011D6  EFEF  F008         	goto	u420
   781   0011DA                     u421:
   782   0011DA  EFF4  F008         	goto	l1018
   783   0011DE                     u420:
   784   0011DE                     l1016:
   785   0011DE  5026               	movf	fputc@c^0,w,c
   786   0011E0  EC59  F00A         	call	_putch
   787   0011E4  EF41  F009         	goto	l751
   788   0011E8                     l1018:
   789   0011E8  EE20 F00A          	lfsr	2,10
   790   0011EC  5028               	movf	fputc@fp^0,w,c
   791   0011EE  26D9               	addwf	fsr2l,f,c
   792   0011F0  5029               	movf	(fputc@fp+1)^0,w,c
   793   0011F2  22DA               	addwfc	fsr2h,f,c
   794   0011F4  50DE               	movf	postinc2,w,c
   795   0011F6  10DE               	iorwf	postinc2,w,c
   796   0011F8  B4D8               	btfsc	status,2,c
   797   0011FA  EF01  F009         	goto	u431
   798   0011FE  EF03  F009         	goto	u430
   799   001202                     u431:
   800   001202  EF1E  F009         	goto	l1022
   801   001206                     u430:
   802   001206  EE20 F00A          	lfsr	2,10
   803   00120A  5028               	movf	fputc@fp^0,w,c
   804   00120C  26D9               	addwf	fsr2l,f,c
   805   00120E  5029               	movf	(fputc@fp+1)^0,w,c
   806   001210  22DA               	addwfc	fsr2h,f,c
   807   001212  EE10 F003          	lfsr	1,3
   808   001216  5028               	movf	fputc@fp^0,w,c
   809   001218  26E1               	addwf	fsr1l,f,c
   810   00121A  5029               	movf	(fputc@fp+1)^0,w,c
   811   00121C  22E2               	addwfc	fsr1h,f,c
   812   00121E  50DE               	movf	postinc2,w,c
   813   001220  5CE6               	subwf	postinc1,w,c
   814   001222  50E6               	movf	postinc1,w,c
   815   001224  0A80               	xorlw	128
   816   001226  6E2E               	movwf	(??_fputc+4)^0,c
   817   001228  50DE               	movf	postinc2,w,c
   818   00122A  0A80               	xorlw	128
   819   00122C  582E               	subwfb	(??_fputc+4)^0,w,c
   820   00122E  B0D8               	btfsc	status,0,c
   821   001230  EF1C  F009         	goto	u441
   822   001234  EF1E  F009         	goto	u440
   823   001238                     u441:
   824   001238  EF41  F009         	goto	l751
   825   00123C                     u440:
   826   00123C                     l1022:
   827   00123C  EE20 F003          	lfsr	2,3
   828   001240  5028               	movf	fputc@fp^0,w,c
   829   001242  26D9               	addwf	fsr2l,f,c
   830   001244  5029               	movf	(fputc@fp+1)^0,w,c
   831   001246  22DA               	addwfc	fsr2h,f,c
   832   001248  CFDE F02A          	movff	postinc2,??_fputc
   833   00124C  CFDD F02B          	movff	postdec2,??_fputc+1
   834   001250  C028  FFD9         	movff	fputc@fp,fsr2l
   835   001254  C029  FFDA         	movff	fputc@fp+1,fsr2h
   836   001258  CFDE F02C          	movff	postinc2,??_fputc+2
   837   00125C  CFDD F02D          	movff	postdec2,??_fputc+3
   838   001260  502A               	movf	??_fputc^0,w,c
   839   001262  242C               	addwf	(??_fputc+2)^0,w,c
   840   001264  6ED9               	movwf	fsr2l,c
   841   001266  502B               	movf	(??_fputc+1)^0,w,c
   842   001268  202D               	addwfc	(??_fputc+3)^0,w,c
   843   00126A  6EDA               	movwf	fsr2h,c
   844   00126C  C026  FFDF         	movff	fputc@c,indf2
   845   001270  EE20 F003          	lfsr	2,3
   846   001274  5028               	movf	fputc@fp^0,w,c
   847   001276  26D9               	addwf	fsr2l,f,c
   848   001278  5029               	movf	(fputc@fp+1)^0,w,c
   849   00127A  22DA               	addwfc	fsr2h,f,c
   850   00127C  2ADE               	incf	postinc2,f,c
   851   00127E  0E00               	movlw	0
   852   001280  22DD               	addwfc	postdec2,f,c
   853   001282                     l751:
   854   001282  0012               	return		;funcret
   855   001284                     __end_of_fputc:
   856                           	callstack 0
   857                           
   858 ;; *************** function _putch *****************
   859 ;; Defined at:
   860 ;;		line 7 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  c               1    wreg     unsigned char 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  c               1    0[COMRAM] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_fputc
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text5
   888   0014B2                     __ptext5:
   889                           	callstack 0
   890   0014B2                     _putch:
   891                           	callstack 26
   892   0014B2  0012               	return		;funcret
   893   0014B4                     __end_of_putch:
   894                           	callstack 0
   895                           
   896 ;; *************** function _abs *****************
   897 ;; Defined at:
   898 ;;		line 1 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  a               2    6[COMRAM] int 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;		None
   903 ;; Return value:  Size  Location     Type
   904 ;;                  2    6[COMRAM] int 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;Total ram usage:        4 bytes
   917 ;; Hardware stack levels used: 1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_vfpfcnvrt
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text6
   926   001436                     __ptext6:
   927                           	callstack 0
   928   001436                     _abs:
   929                           	callstack 27
   930   001436  BE2D               	btfsc	(abs@a+1)^0,7,c
   931   001438  EF20  F00A         	goto	u451
   932   00143C  EF22  F00A         	goto	u450
   933   001440                     u451:
   934   001440  EF28  F00A         	goto	l736
   935   001444                     u450:
   936   001444  C02C  F02C         	movff	abs@a,?_abs
   937   001448  C02D  F02D         	movff	abs@a+1,?_abs+1
   938   00144C  EF34  F00A         	goto	l739
   939   001450                     l736:
   940   001450  C02C  F02E         	movff	abs@a,??_abs
   941   001454  C02D  F02F         	movff	abs@a+1,??_abs+1
   942   001458  1E2E               	comf	??_abs^0,f,c
   943   00145A  1E2F               	comf	(??_abs+1)^0,f,c
   944   00145C  4A2E               	infsnz	??_abs^0,f,c
   945   00145E  2A2F               	incf	(??_abs+1)^0,f,c
   946   001460  C02E  F02C         	movff	??_abs,?_abs
   947   001464  C02F  F02D         	movff	??_abs+1,?_abs+1
   948   001468                     l739:
   949   001468  0012               	return		;funcret
   950   00146A                     __end_of_abs:
   951                           	callstack 0
   952                           
   953 ;; *************** function ___awmod *****************
   954 ;; Defined at:
   955 ;;		line 7 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  dividend        2    0[COMRAM] int 
   958 ;;  divisor         2    2[COMRAM] int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  sign            1    5[COMRAM] unsigned char 
   961 ;;  counter         1    4[COMRAM] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2    0[COMRAM] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_vfpfcnvrt
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text7
   985   001348                     __ptext7:
   986                           	callstack 0
   987   001348                     ___awmod:
   988                           	callstack 27
   989   001348  0E00               	movlw	0
   990   00134A  6E2B               	movwf	___awmod@sign^0,c
   991   00134C  BE27               	btfsc	(___awmod@dividend+1)^0,7,c
   992   00134E  EFAD  F009         	goto	u350
   993   001352  EFAB  F009         	goto	u351
   994   001356                     u351:
   995   001356  EFB3  F009         	goto	l984
   996   00135A                     u350:
   997   00135A  6C26               	negf	___awmod@dividend^0,c
   998   00135C  1E27               	comf	(___awmod@dividend+1)^0,f,c
   999   00135E  B0D8               	btfsc	status,0,c
  1000   001360  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1001   001362  0E01               	movlw	1
  1002   001364  6E2B               	movwf	___awmod@sign^0,c
  1003   001366                     l984:
  1004   001366  BE29               	btfsc	(___awmod@divisor+1)^0,7,c
  1005   001368  EFBA  F009         	goto	u360
  1006   00136C  EFB8  F009         	goto	u361
  1007   001370                     u361:
  1008   001370  EFBE  F009         	goto	l988
  1009   001374                     u360:
  1010   001374  6C28               	negf	___awmod@divisor^0,c
  1011   001376  1E29               	comf	(___awmod@divisor+1)^0,f,c
  1012   001378  B0D8               	btfsc	status,0,c
  1013   00137A  2A29               	incf	(___awmod@divisor+1)^0,f,c
  1014   00137C                     l988:
  1015   00137C  5028               	movf	___awmod@divisor^0,w,c
  1016   00137E  1029               	iorwf	(___awmod@divisor+1)^0,w,c
  1017   001380  B4D8               	btfsc	status,2,c
  1018   001382  EFC5  F009         	goto	u371
  1019   001386  EFC7  F009         	goto	u370
  1020   00138A                     u371:
  1021   00138A  EFEB  F009         	goto	l1004
  1022   00138E                     u370:
  1023   00138E  0E01               	movlw	1
  1024   001390  6E2A               	movwf	___awmod@counter^0,c
  1025   001392  EFCF  F009         	goto	l994
  1026   001396                     l992:
  1027   001396  90D8               	bcf	status,0,c
  1028   001398  3628               	rlcf	___awmod@divisor^0,f,c
  1029   00139A  3629               	rlcf	(___awmod@divisor+1)^0,f,c
  1030   00139C  2A2A               	incf	___awmod@counter^0,f,c
  1031   00139E                     l994:
  1032   00139E  AE29               	btfss	(___awmod@divisor+1)^0,7,c
  1033   0013A0  EFD4  F009         	goto	u381
  1034   0013A4  EFD6  F009         	goto	u380
  1035   0013A8                     u381:
  1036   0013A8  EFCB  F009         	goto	l992
  1037   0013AC                     u380:
  1038   0013AC                     l996:
  1039   0013AC  5028               	movf	___awmod@divisor^0,w,c
  1040   0013AE  5C26               	subwf	___awmod@dividend^0,w,c
  1041   0013B0  5029               	movf	(___awmod@divisor+1)^0,w,c
  1042   0013B2  5827               	subwfb	(___awmod@dividend+1)^0,w,c
  1043   0013B4  A0D8               	btfss	status,0,c
  1044   0013B6  EFDF  F009         	goto	u391
  1045   0013BA  EFE1  F009         	goto	u390
  1046   0013BE                     u391:
  1047   0013BE  EFE5  F009         	goto	l1000
  1048   0013C2                     u390:
  1049   0013C2  5028               	movf	___awmod@divisor^0,w,c
  1050   0013C4  5E26               	subwf	___awmod@dividend^0,f,c
  1051   0013C6  5029               	movf	(___awmod@divisor+1)^0,w,c
  1052   0013C8  5A27               	subwfb	(___awmod@dividend+1)^0,f,c
  1053   0013CA                     l1000:
  1054   0013CA  90D8               	bcf	status,0,c
  1055   0013CC  3229               	rrcf	(___awmod@divisor+1)^0,f,c
  1056   0013CE  3228               	rrcf	___awmod@divisor^0,f,c
  1057   0013D0  2E2A               	decfsz	___awmod@counter^0,f,c
  1058   0013D2  EFD6  F009         	goto	l996
  1059   0013D6                     l1004:
  1060   0013D6  502B               	movf	___awmod@sign^0,w,c
  1061   0013D8  B4D8               	btfsc	status,2,c
  1062   0013DA  EFF1  F009         	goto	u401
  1063   0013DE  EFF3  F009         	goto	u400
  1064   0013E2                     u401:
  1065   0013E2  EFF7  F009         	goto	l1008
  1066   0013E6                     u400:
  1067   0013E6  6C26               	negf	___awmod@dividend^0,c
  1068   0013E8  1E27               	comf	(___awmod@dividend+1)^0,f,c
  1069   0013EA  B0D8               	btfsc	status,0,c
  1070   0013EC  2A27               	incf	(___awmod@dividend+1)^0,f,c
  1071   0013EE                     l1008:
  1072   0013EE  C026  F026         	movff	___awmod@dividend,?___awmod
  1073   0013F2  C027  F027         	movff	___awmod@dividend+1,?___awmod+1
  1074   0013F6  0012               	return		;funcret
  1075   0013F8                     __end_of___awmod:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function ___awdiv *****************
  1079 ;; Defined at:
  1080 ;;		line 7 in file "P:\Programs_installed\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  dividend        2    0[COMRAM] int 
  1083 ;;  divisor         2    2[COMRAM] int 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  quotient        2    6[COMRAM] int 
  1086 ;;  sign            1    5[COMRAM] unsigned char 
  1087 ;;  counter         1    4[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  2    0[COMRAM] int 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1100 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1101 ;;Total ram usage:        8 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_vfpfcnvrt
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           	psect	text8
  1111   001284                     __ptext8:
  1112                           	callstack 0
  1113   001284                     ___awdiv:
  1114                           	callstack 27
  1115   001284  0E00               	movlw	0
  1116   001286  6E2B               	movwf	___awdiv@sign^0,c
  1117   001288  BE29               	btfsc	(___awdiv@divisor+1)^0,7,c
  1118   00128A  EF4B  F009         	goto	u290
  1119   00128E  EF49  F009         	goto	u291
  1120   001292                     u291:
  1121   001292  EF51  F009         	goto	l940
  1122   001296                     u290:
  1123   001296  6C28               	negf	___awdiv@divisor^0,c
  1124   001298  1E29               	comf	(___awdiv@divisor+1)^0,f,c
  1125   00129A  B0D8               	btfsc	status,0,c
  1126   00129C  2A29               	incf	(___awdiv@divisor+1)^0,f,c
  1127   00129E  0E01               	movlw	1
  1128   0012A0  6E2B               	movwf	___awdiv@sign^0,c
  1129   0012A2                     l940:
  1130   0012A2  BE27               	btfsc	(___awdiv@dividend+1)^0,7,c
  1131   0012A4  EF58  F009         	goto	u300
  1132   0012A8  EF56  F009         	goto	u301
  1133   0012AC                     u301:
  1134   0012AC  EF5E  F009         	goto	l946
  1135   0012B0                     u300:
  1136   0012B0  6C26               	negf	___awdiv@dividend^0,c
  1137   0012B2  1E27               	comf	(___awdiv@dividend+1)^0,f,c
  1138   0012B4  B0D8               	btfsc	status,0,c
  1139   0012B6  2A27               	incf	(___awdiv@dividend+1)^0,f,c
  1140   0012B8  0E01               	movlw	1
  1141   0012BA  1A2B               	xorwf	___awdiv@sign^0,f,c
  1142   0012BC                     l946:
  1143   0012BC  0E00               	movlw	0
  1144   0012BE  6E2D               	movwf	(___awdiv@quotient+1)^0,c
  1145   0012C0  0E00               	movlw	0
  1146   0012C2  6E2C               	movwf	___awdiv@quotient^0,c
  1147   0012C4  5028               	movf	___awdiv@divisor^0,w,c
  1148   0012C6  1029               	iorwf	(___awdiv@divisor+1)^0,w,c
  1149   0012C8  B4D8               	btfsc	status,2,c
  1150   0012CA  EF69  F009         	goto	u311
  1151   0012CE  EF6B  F009         	goto	u310
  1152   0012D2                     u311:
  1153   0012D2  EF93  F009         	goto	l968
  1154   0012D6                     u310:
  1155   0012D6  0E01               	movlw	1
  1156   0012D8  6E2A               	movwf	___awdiv@counter^0,c
  1157   0012DA  EF73  F009         	goto	l954
  1158   0012DE                     l952:
  1159   0012DE  90D8               	bcf	status,0,c
  1160   0012E0  3628               	rlcf	___awdiv@divisor^0,f,c
  1161   0012E2  3629               	rlcf	(___awdiv@divisor+1)^0,f,c
  1162   0012E4  2A2A               	incf	___awdiv@counter^0,f,c
  1163   0012E6                     l954:
  1164   0012E6  AE29               	btfss	(___awdiv@divisor+1)^0,7,c
  1165   0012E8  EF78  F009         	goto	u321
  1166   0012EC  EF7A  F009         	goto	u320
  1167   0012F0                     u321:
  1168   0012F0  EF6F  F009         	goto	l952
  1169   0012F4                     u320:
  1170   0012F4                     l956:
  1171   0012F4  90D8               	bcf	status,0,c
  1172   0012F6  362C               	rlcf	___awdiv@quotient^0,f,c
  1173   0012F8  362D               	rlcf	(___awdiv@quotient+1)^0,f,c
  1174   0012FA  5028               	movf	___awdiv@divisor^0,w,c
  1175   0012FC  5C26               	subwf	___awdiv@dividend^0,w,c
  1176   0012FE  5029               	movf	(___awdiv@divisor+1)^0,w,c
  1177   001300  5827               	subwfb	(___awdiv@dividend+1)^0,w,c
  1178   001302  A0D8               	btfss	status,0,c
  1179   001304  EF86  F009         	goto	u331
  1180   001308  EF88  F009         	goto	u330
  1181   00130C                     u331:
  1182   00130C  EF8D  F009         	goto	l964
  1183   001310                     u330:
  1184   001310  5028               	movf	___awdiv@divisor^0,w,c
  1185   001312  5E26               	subwf	___awdiv@dividend^0,f,c
  1186   001314  5029               	movf	(___awdiv@divisor+1)^0,w,c
  1187   001316  5A27               	subwfb	(___awdiv@dividend+1)^0,f,c
  1188   001318  802C               	bsf	___awdiv@quotient^0,0,c
  1189   00131A                     l964:
  1190   00131A  90D8               	bcf	status,0,c
  1191   00131C  3229               	rrcf	(___awdiv@divisor+1)^0,f,c
  1192   00131E  3228               	rrcf	___awdiv@divisor^0,f,c
  1193   001320  2E2A               	decfsz	___awdiv@counter^0,f,c
  1194   001322  EF7A  F009         	goto	l956
  1195   001326                     l968:
  1196   001326  502B               	movf	___awdiv@sign^0,w,c
  1197   001328  B4D8               	btfsc	status,2,c
  1198   00132A  EF99  F009         	goto	u341
  1199   00132E  EF9B  F009         	goto	u340
  1200   001332                     u341:
  1201   001332  EF9F  F009         	goto	l972
  1202   001336                     u340:
  1203   001336  6C2C               	negf	___awdiv@quotient^0,c
  1204   001338  1E2D               	comf	(___awdiv@quotient+1)^0,f,c
  1205   00133A  B0D8               	btfsc	status,0,c
  1206   00133C  2A2D               	incf	(___awdiv@quotient+1)^0,f,c
  1207   00133E                     l972:
  1208   00133E  C02C  F026         	movff	___awdiv@quotient,?___awdiv
  1209   001342  C02D  F027         	movff	___awdiv@quotient+1,?___awdiv+1
  1210   001346  0012               	return		;funcret
  1211   001348                     __end_of___awdiv:
  1212                           	callstack 0
  1213                           
  1214                           	psect	rparam
  1215   000000                     
  1216                           	psect	idloc
  1217                           
  1218                           ;Config register IDLOC0 @ 0x200000
  1219                           ;	unspecified, using default values
  1220   200000                     	org	2097152
  1221   200000  FF                 	db	255
  1222                           
  1223                           ;Config register IDLOC1 @ 0x200001
  1224                           ;	unspecified, using default values
  1225   200001                     	org	2097153
  1226   200001  FF                 	db	255
  1227                           
  1228                           ;Config register IDLOC2 @ 0x200002
  1229                           ;	unspecified, using default values
  1230   200002                     	org	2097154
  1231   200002  FF                 	db	255
  1232                           
  1233                           ;Config register IDLOC3 @ 0x200003
  1234                           ;	unspecified, using default values
  1235   200003                     	org	2097155
  1236   200003  FF                 	db	255
  1237                           
  1238                           ;Config register IDLOC4 @ 0x200004
  1239                           ;	unspecified, using default values
  1240   200004                     	org	2097156
  1241   200004  FF                 	db	255
  1242                           
  1243                           ;Config register IDLOC5 @ 0x200005
  1244                           ;	unspecified, using default values
  1245   200005                     	org	2097157
  1246   200005  FF                 	db	255
  1247                           
  1248                           ;Config register IDLOC6 @ 0x200006
  1249                           ;	unspecified, using default values
  1250   200006                     	org	2097158
  1251   200006  FF                 	db	255
  1252                           
  1253                           ;Config register IDLOC7 @ 0x200007
  1254                           ;	unspecified, using default values
  1255   200007                     	org	2097159
  1256   200007  FF                 	db	255
  1257                           
  1258                           	psect	config
  1259                           
  1260                           ; Padding undefined space
  1261   300000                     	org	3145728
  1262   300000  FF                 	db	255
  1263                           
  1264                           ;Config register CONFIG1H @ 0x300001
  1265                           ;	Oscillator Selection bits
  1266                           ;	FOSC = HS, HS oscillator
  1267                           ;	Fail-Safe Clock Monitor Enable bit
  1268                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1269                           ;	Internal/External Oscillator Switchover bit
  1270                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1271   300001                     	org	3145729
  1272   300001  02                 	db	2
  1273                           
  1274                           ;Config register CONFIG2L @ 0x300002
  1275                           ;	Power-up Timer Enable bit
  1276                           ;	PWRT = OFF, PWRT disabled
  1277                           ;	Brown-out Reset Enable bits
  1278                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1279                           ;	Brown Out Reset Voltage bits
  1280                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1281   300002                     	org	3145730
  1282   300002  19                 	db	25
  1283                           
  1284                           ;Config register CONFIG2H @ 0x300003
  1285                           ;	Watchdog Timer Enable bit
  1286                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1287                           ;	Watchdog Timer Postscale Select bits
  1288                           ;	WDTPS = 32768, 1:32768
  1289   300003                     	org	3145731
  1290   300003  1E                 	db	30
  1291                           
  1292                           ; Padding undefined space
  1293   300004                     	org	3145732
  1294   300004  FF                 	db	255
  1295                           
  1296                           ;Config register CONFIG3H @ 0x300005
  1297                           ;	CCP2 MUX bit
  1298                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1299                           ;	PORTB A/D Enable bit
  1300                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1301                           ;	Low-Power Timer1 Oscillator Enable bit
  1302                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1303                           ;	HFINTOSC Fast Start-up
  1304                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1305                           ;	MCLR Pin Enable bit
  1306                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1307   300005                     	org	3145733
  1308   300005  89                 	db	137
  1309                           
  1310                           ;Config register CONFIG4L @ 0x300006
  1311                           ;	Stack Full/Underflow Reset Enable bit
  1312                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1313                           ;	Single-Supply ICSP Enable bit
  1314                           ;	LVP = OFF, Single-Supply ICSP disabled
  1315                           ;	Extended Instruction Set Enable bit
  1316                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1317                           ;	Background Debugger Enable bit
  1318                           ;	DEBUG = 0x1, unprogrammed default
  1319   300006                     	org	3145734
  1320   300006  81                 	db	129
  1321                           
  1322                           ; Padding undefined space
  1323   300007                     	org	3145735
  1324   300007  FF                 	db	255
  1325                           
  1326                           ;Config register CONFIG5L @ 0x300008
  1327                           ;	Code Protection Block 0
  1328                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1329                           ;	Code Protection Block 1
  1330                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1331                           ;	Code Protection Block 2
  1332                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1333                           ;	Code Protection Block 3
  1334                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1335   300008                     	org	3145736
  1336   300008  0F                 	db	15
  1337                           
  1338                           ;Config register CONFIG5H @ 0x300009
  1339                           ;	Boot Block Code Protection bit
  1340                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1341                           ;	Data EEPROM Code Protection bit
  1342                           ;	CPD = OFF, Data EEPROM not code-protected
  1343   300009                     	org	3145737
  1344   300009  C0                 	db	192
  1345                           
  1346                           ;Config register CONFIG6L @ 0x30000A
  1347                           ;	Write Protection Block 0
  1348                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1349                           ;	Write Protection Block 1
  1350                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1351                           ;	Write Protection Block 2
  1352                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1353                           ;	Write Protection Block 3
  1354                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1355   30000A                     	org	3145738
  1356   30000A  0F                 	db	15
  1357                           
  1358                           ;Config register CONFIG6H @ 0x30000B
  1359                           ;	Configuration Register Write Protection bit
  1360                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1361                           ;	Boot Block Write Protection bit
  1362                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1363                           ;	Data EEPROM Write Protection bit
  1364                           ;	WRTD = OFF, Data EEPROM not write-protected
  1365   30000B                     	org	3145739
  1366   30000B  E0                 	db	224
  1367                           
  1368                           ;Config register CONFIG7L @ 0x30000C
  1369                           ;	Table Read Protection Block 0
  1370                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1371                           ;	Table Read Protection Block 1
  1372                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1373                           ;	Table Read Protection Block 2
  1374                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1375                           ;	Table Read Protection Block 3
  1376                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1377   30000C                     	org	3145740
  1378   30000C  0F                 	db	15
  1379                           
  1380                           ;Config register CONFIG7H @ 0x30000D
  1381                           ;	Boot Block Table Read Protection bit
  1382                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1383   30000D                     	org	3145741
  1384   30000D  40                 	db	64
  1385                           tosu	equ	0xFFF
  1386                           tosh	equ	0xFFE
  1387                           tosl	equ	0xFFD
  1388                           stkptr	equ	0xFFC
  1389                           pclatu	equ	0xFFB
  1390                           pclath	equ	0xFFA
  1391                           pcl	equ	0xFF9
  1392                           tblptru	equ	0xFF8
  1393                           tblptrh	equ	0xFF7
  1394                           tblptrl	equ	0xFF6
  1395                           tablat	equ	0xFF5
  1396                           prodh	equ	0xFF4
  1397                           prodl	equ	0xFF3
  1398                           indf0	equ	0xFEF
  1399                           postinc0	equ	0xFEE
  1400                           postdec0	equ	0xFED
  1401                           preinc0	equ	0xFEC
  1402                           plusw0	equ	0xFEB
  1403                           fsr0h	equ	0xFEA
  1404                           fsr0l	equ	0xFE9
  1405                           wreg	equ	0xFE8
  1406                           indf1	equ	0xFE7
  1407                           postinc1	equ	0xFE6
  1408                           postdec1	equ	0xFE5
  1409                           preinc1	equ	0xFE4
  1410                           plusw1	equ	0xFE3
  1411                           fsr1h	equ	0xFE2
  1412                           fsr1l	equ	0xFE1
  1413                           bsr	equ	0xFE0
  1414                           indf2	equ	0xFDF
  1415                           postinc2	equ	0xFDE
  1416                           postdec2	equ	0xFDD
  1417                           preinc2	equ	0xFDC
  1418                           plusw2	equ	0xFDB
  1419                           fsr2h	equ	0xFDA
  1420                           fsr2l	equ	0xFD9
  1421                           status	equ	0xFD8

Data Sizes:
    Strings     7
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     31      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    S477$buffer	PTR unsigned char  size(2) Largest target is 0

    S477$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    3066
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3    3066
                                             27 COMRAM     4     1      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             5     1      4    2936
                                             22 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     8      4    2586
                                             10 COMRAM    12     8      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     782
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           A0      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1F      44       1       71.6%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      12        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Mar 02 07:33:49 2024

                      l7 14AE             ___awdiv@sign 002B                      l241 1346  
                    l254 13F6                      l732 1434                      l726 11B8  
                    l751 1282                      l736 1450                      l762 14B2  
                    l739 1468                      l940 12A2                      l932 1284  
                    l950 12D6                      l942 12B0                      l934 1288  
                    l960 1310                      l952 12DE                      l944 12B8  
                    l936 1296                      l688 149C                      l970 1336  
                    l962 1318                      l954 12E6                      l946 12BC  
                    l938 129E                      l972 133E                      l964 131A  
                    l956 12F4                      l948 12C4                      l980 135A  
                    l966 1320                      l958 12FA                      l990 138E  
                    l982 1362                      l968 1326                      l992 1396  
                    l984 1366                      l976 1348                      l994 139E  
                    l986 1374                      l978 134C                      l996 13AC  
                    l988 137C                      l998 13C2                      u300 12B0  
                    u301 12AC                      u310 12D6                      u311 12D2  
                    u320 12F4                      u400 13E6                      u321 12F0  
                    u401 13E2                      u330 1310                      u410 11CC  
                    u331 130C                      u411 11C8                      u340 1336  
                    u420 11DE                      u500 10B2                      u341 1332  
                    u421 11DA                      u350 135A                      u430 1206  
                    u510 1112                      u351 1356                      u431 1202  
                    u511 110E                      u360 1374                      u440 123C  
                    u520 1122                      u361 1370                      u441 1238  
                    u521 111E                      u290 1296                      u370 138E  
                    u450 1444                      u530 1132                      u291 1292  
                    u371 138A                      u451 1440                      u531 112E  
                    u380 13AC                      u540 1142                      u460 1028  
                    u381 13A8                      u541 113E                      u461 1024  
                    u390 13C2                      u550 1186                      u470 1062  
                    u391 13BE                      u551 1182                      u471 105E  
                    u480 107A                      u560 142C                      u481 1076  
                    u561 1428                      u490 10B0                      u491 10AA  
                    _abs 1436             ___awmod@sign 002B                      wreg 0FE8  
                   l1000 13CA                     l1002 13D0                     l1004 13D6  
                   l1020 1206                     l1012 11BA                     l1006 13E6  
                   l1022 123C                     l1014 11CC                     l1030 100A  
                   l1008 13EE                     l1016 11DE                     l1040 104A  
                   l1032 1028                     l1026 1436                     l1018 11E8  
                   l1050 10B4                     l1042 1062                     l1034 1030  
                   ?_abs 002C                     l1028 1444                     l1060 1132  
                   l1052 10E4                     l1044 107A                     l1036 103C  
                   l1062 1142                     l1054 1100                     l1046 1092  
                   l1070 118A                     l1038 1040                     l1064 1154  
                   l1056 1112                     l1048 109C                     l1080 13F8  
                   l1066 1172                     l1058 1122                     l1074 1196  
                   l1082 1400                     l1090 1484                     l1068 1174  
                   l1084 1414                     l1092 1488                     l1086 142C  
                   l1096 149E                     STR_1 1001                     abs@a 002C  
                   _dbuf 0001                     _main 149E                     _prec 0023  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf2 0FDF  
                   fsr1l 0FE1                     fsr2l 0FD9                     start 0000  
           ___param_bank 0000                    ??_abs 002E                    ?_main 0026  
        __end_of___awdiv 1348          __end_of___awmod 13F8          ___awdiv@divisor 0028  
        ___awdiv@counter 002A             vfpfcnvrt@fmt 0032                    _flags 0025  
                  _fputc 11BA                    _width 0021                    _putch 14B2  
                  tablat 0FF5                    status 0FD8          __initialization 146A  
           __end_of_main 14B2                   ??_main 0045            __activetblptr 0001  
                 ?_fputc 0026         ___awdiv@dividend 0026                   ?_putch 0026  
          vfpfcnvrt@done 0035             vfprintf@cfmt 0040                ??___awdiv 002A  
              ??___awmod 002A                   clear_0 1470         ___awdiv@quotient 002C  
        ___awmod@divisor 0028                   isa$std 0001          ___awmod@counter 002A  
                 _printf 1484                   fputc@c 0026             __mediumconst 0000  
                 tblptrh 0FF7                   tblptrl 0FF6                   tblptru 0FF8  
                 putch@c 0026         __end_of_vfprintf 1436               __accesstop 0060  
__end_of__initialization 1476            ___rparam_used 0001           __pcstackCOMRAM 0026  
          __end_of_fputc 1284            __end_of_putch 14B4                  ??_fputc 002A  
                ??_putch 0026                  ?_printf 0041                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 1284                  ___awmod 1348  
              ?_vfprintf 003C             __psmallconst 1000                  __pcinit 146A  
                __ramtop 1000                  __ptext0 149E                  __ptext1 1484  
                __ptext2 13F8                  __ptext3 100A                  __ptext4 11BA  
                __ptext5 14B2                  __ptext6 1436                  __ptext7 1348  
                __ptext8 1284         ___awmod@dividend 0026     end_of_initialization 1476  
                fputc@fp 0028        __end_of_vfpfcnvrt 11BA                  postdec2 0FDD  
                postinc0 0FEE                  postinc1 0FE6                  postinc2 0FDE  
       vfpfcnvrt@convarg 0037               ??_vfprintf 0040              vfpfcnvrt@ap 0033  
            vfpfcnvrt@cp 0036              vfpfcnvrt@fp 0030           __end_of_printf 149E  
    start_initialization 146A              __end_of_abs 146A              vfprintf@fmt 003E  
               ??_printf 0044              __pbssCOMRAM 0001                 ?___awdiv 0026  
               ?___awmod 0026              __smallconst 1000                _vfpfcnvrt 100A  
             vfpfcnvrt@c 003B                 __Hrparam 0000               vfprintf@ap 003F  
               __Lrparam 0000               vfprintf@fp 003C             __Lsmallconst 1000  
             ?_vfpfcnvrt 0030                 isa$xinst 0000                 _vfprintf 13F8  
              printf@fmt 0041                 printf@ap 0044              ??_vfpfcnvrt 0034  
