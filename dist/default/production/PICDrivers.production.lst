

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Apr 13 10:43:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Version 2.20
    26                           ; Generated 05/05/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F46K20 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     
    60                           	psect	idataCOMRAM
    61   002030                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _key
    65   002030  01                 	db	1
    66   002031  09                 	db	9
    67   002032  11                 	db	17
    68   002033  19                 	db	25
    69   002034  21                 	db	33
    70   002035  29                 	db	41
    71   002036  31                 	db	49
    72   002037  39                 	db	57
    73                           
    74                           ;initializer for _Global_BtnRead
    75   002038  01                 	db	1
    76                           
    77                           ;initializer for _Btn
    78   002039  03                 	db	3
    79                           
    80                           ;initializer for _led1
    81   00203A  02                 	db	2
    82                           
    83                           	psect	smallconst
    84   001000                     __psmallconst:
    85                           	callstack 0
    86   001000  00                 	db	0
    87   001001  31                 	db	49
    88   001002  32                 	db	50
    89   001003  33                 	db	51
    90   001004  41                 	db	65
    91   001005  34                 	db	52
    92   001006  35                 	db	53
    93   001007  36                 	db	54
    94   001008  42                 	db	66
    95   001009  37                 	db	55
    96   00100A  38                 	db	56
    97   00100B  39                 	db	57
    98   00100C  43                 	db	67
    99   00100D  2A                 	db	42
   100   00100E  30                 	db	48
   101   00100F  23                 	db	35
   102   001010  44                 	db	68
   103   001011                     __end_of_Local_KeyPadLayout:
   104                           	callstack 0
   105   001011  00                 	db	0	; dummy byte at the end
   106   000000                     
   107                           ; #config settings
   108                           
   109                           	psect	cinit
   110   001FFA                     __pcinit:
   111                           	callstack 0
   112   001FFA                     start_initialization:
   113                           	callstack 0
   114   001FFA                     __initialization:
   115                           	callstack 0
   116                           
   117                           ; Initialize objects allocated to COMRAM (11 bytes)
   118                           ; load TBLPTR registers with __pidataCOMRAM
   119   001FFA  0E30               	movlw	low __pidataCOMRAM
   120   001FFC  6EF6               	movwf	tblptrl,c
   121   001FFE  0E20               	movlw	high __pidataCOMRAM
   122   002000  6EF7               	movwf	tblptrh,c
   123   002002  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   124   002004  6EF8               	movwf	tblptru,c
   125   002006  EE00  F019         	lfsr	0,__pdataCOMRAM
   126   00200A  EE10 F00B          	lfsr	1,11
   127   00200E                     copy_data0:
   128   00200E  0009               	tblrd		*+
   129   002010  CFF5 FFEE          	movff	tablat,postinc0
   130   002014  50E5               	movf	postdec1,w,c
   131   002016  50E1               	movf	fsr1l,w,c
   132   002018  E1FA               	bnz	copy_data0
   133                           
   134                           ; Clear objects allocated to COMRAM (12 bytes)
   135   00201A  EE00  F001         	lfsr	0,__pbssCOMRAM
   136   00201E  0E0C               	movlw	12
   137   002020                     clear_0:
   138   002020  6AEE               	clrf	postinc0,c
   139   002022  06E8               	decf	wreg,f,c
   140   002024  E1FD               	bnz	clear_0
   141   002026                     end_of_initialization:
   142                           	callstack 0
   143   002026                     __end_of__initialization:
   144                           	callstack 0
   145   002026  0E00               	movlw	low (__Lmediumconst shr (0+16))
   146   002028  6EF8               	movwf	tblptru,c
   147   00202A  0100               	movlb	0
   148   00202C  EFDF  F00F         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151   000001                     __pbssCOMRAM:
   152                           	callstack 0
   153   000001                     HAL_Push_Button_ReadBtn@F2819:
   154                           	callstack 0
   155   000001                     	ds	1
   156   000002                     HAL_Push_Button_BtnConfig@F2812:
   157                           	callstack 0
   158   000002                     	ds	1
   159   000003                     HAL_LED_LEDArrayPatternBlink@F2874:
   160                           	callstack 0
   161   000003                     	ds	1
   162   000004                     HAL_LED_LEDArrayPatternOff@F2866:
   163                           	callstack 0
   164   000004                     	ds	1
   165   000005                     HAL_LED_LEDArrayPatternOn@F2860:
   166                           	callstack 0
   167   000005                     	ds	1
   168   000006                     HAL_LED_LEDArrayConfig@F2853:
   169                           	callstack 0
   170   000006                     	ds	1
   171   000007                     HAL_LED_LEDBlink@F2847:
   172                           	callstack 0
   173   000007                     	ds	1
   174   000008                     HAL_LED_LEDToggle@F2841:
   175                           	callstack 0
   176   000008                     	ds	1
   177   000009                     HAL_LED_LEDOff@F2836:
   178                           	callstack 0
   179   000009                     	ds	1
   180   00000A                     HAL_LED_LEDOn@F2831:
   181                           	callstack 0
   182   00000A                     	ds	1
   183   00000B                     HAL_LED_LEDConfig@F2826:
   184                           	callstack 0
   185   00000B                     	ds	1
   186   00000C                     _ReturnStatus:
   187                           	callstack 0
   188   00000C                     	ds	1
   189                           
   190                           	psect	dataCOMRAM
   191   000019                     __pdataCOMRAM:
   192                           	callstack 0
   193   000019                     _key:
   194                           	callstack 0
   195   000019                     	ds	8
   196   000021                     _Global_BtnRead:
   197                           	callstack 0
   198   000021                     	ds	1
   199   000022                     _Btn:
   200                           	callstack 0
   201   000022                     	ds	1
   202   000023                     _led1:
   203                           	callstack 0
   204   000023                     	ds	1
   205                           
   206                           	psect	cstackCOMRAM
   207   00000D                     __pcstackCOMRAM:
   208                           	callstack 0
   209   00000D                     MCAL_DIO_SetPinDirection@Copy_PinInfo:
   210                           	callstack 0
   211   00000D                     MCAL_DIO_SetPinValue@Copy_PinInfo:
   212                           	callstack 0
   213   00000D                     MCAL_DIO_ReadPinValue@Copy_PinInfo:
   214                           	callstack 0
   215   00000D                     MCAL_DIO_TogglePinValue@Copy_PinInfo:
   216                           	callstack 0
   217                           
   218                           ; 1 bytes @ 0x0
   219   00000D                     	ds	1
   220   00000E                     ??_MCAL_DIO_SetPinDirection:
   221   00000E                     ??_MCAL_DIO_TogglePinValue:
   222   00000E                     MCAL_DIO_SetPinValue@Copy_PinValue:
   223                           	callstack 0
   224   00000E                     MCAL_DIO_ReadPinValue@Copy_PinValue:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x1
   228   00000E                     	ds	1
   229   00000F                     ??_MCAL_DIO_SetPinValue:
   230   00000F                     ??_MCAL_DIO_ReadPinValue:
   231                           
   232                           ; 1 bytes @ 0x2
   233   00000F                     	ds	1
   234   000010                     MCAL_DIO_SetPinDirection@Local_ErrorStatus:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x3
   238   000010                     	ds	1
   239   000011                     HAL_Push_Button_BtnConfig@Copy_Btn:
   240                           	callstack 0
   241   000011                     MCAL_DIO_ReadPinValue@Local_ErrorStatus:
   242                           	callstack 0
   243   000011                     MCAL_DIO_TogglePinValue@Local_ErrorStatus:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x4
   247   000011                     	ds	1
   248   000012                     ??_HAL_Push_Button_BtnConfig:
   249   000012                     HAL_LED_LEDBlink@Copy_LED:
   250                           	callstack 0
   251   000012                     MCAL_DIO_ReadPinValue@Local_PinValue:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x5
   255   000012                     	ds	1
   256   000013                     ??_HAL_LED_LEDBlink:
   257   000013                     HAL_Push_Button_BtnConfig@Btn:
   258                           	callstack 0
   259   000013                     HAL_Push_Button_ReadBtn@Copy_Btn:
   260                           	callstack 0
   261   000013                     MCAL_DIO_SetPinValue@Local_ErrorStatus:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x6
   265   000013                     	ds	1
   266   000014                     HAL_LED_LEDConfig@Copy_LED:
   267                           	callstack 0
   268   000014                     HAL_Push_Button_ReadBtn@Copy_BtnStatus:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x7
   272   000014                     	ds	1
   273   000015                     ??_HAL_LED_LEDConfig:
   274   000015                     ??_HAL_Push_Button_ReadBtn:
   275   000015                     HAL_LED_LEDBlink@Local_BlinkingTimes:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x8
   279   000015                     	ds	1
   280   000016                     HAL_LED_LEDConfig@LED:
   281                           	callstack 0
   282   000016                     HAL_LED_LEDBlink@LED:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x9
   286   000016                     	ds	1
   287   000017                     HAL_Push_Button_ReadBtn@Btn:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0xA
   291   000017                     	ds	1
   292   000018                     HAL_Push_Button_ReadBtn@Local_BtnStatus:
   293                           	callstack 0
   294                           
   295                           ; 1 bytes @ 0xB
   296   000018                     	ds	1
   297   000019                     
   298                           ; 1 bytes @ 0xC
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 67 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  2   24[None  ] int 
   311 ;; Registers used:
   312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : 0/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels required when called: 2
   324 ;; This function calls:
   325 ;;		_HAL_LED_LEDBlink
   326 ;;		_HAL_LED_LEDConfig
   327 ;;		_HAL_Push_Button_BtnConfig
   328 ;;		_HAL_Push_Button_ReadBtn
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334                           	psect	text0
   335   001FBE                     __ptext0:
   336                           	callstack 0
   337   001FBE                     _main:
   338                           	callstack 29
   339   001FBE                     
   340                           ;main.c: 69:     HAL_LED_LEDConfig(&led1);
   341   001FBE  0E23               	movlw	low _led1
   342   001FC0  6E14               	movwf	HAL_LED_LEDConfig@Copy_LED^0,c
   343   001FC2  ECCE  F00E         	call	_HAL_LED_LEDConfig	;wreg free
   344                           
   345                           ;main.c: 70:     HAL_Push_Button_BtnConfig(&Btn);
   346   001FC6  0E22               	movlw	low _Btn
   347   001FC8  6E11               	movwf	HAL_Push_Button_BtnConfig@Copy_Btn^0,c
   348   001FCA  EC35  F00F         	call	_HAL_Push_Button_BtnConfig	;wreg free
   349   001FCE                     l25:
   350                           
   351                           ;main.c: 83:     {;main.c: 84:         HAL_Push_Button_ReadBtn(&Btn, &Global_BtnRead);
   352   001FCE  0E22               	movlw	low _Btn
   353   001FD0  6E13               	movwf	HAL_Push_Button_ReadBtn@Copy_Btn^0,c
   354   001FD2  0E21               	movlw	low _Global_BtnRead
   355   001FD4  6E14               	movwf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,c
   356   001FD6  EC0F  F00E         	call	_HAL_Push_Button_ReadBtn	;wreg free
   357   001FDA                     
   358                           ;main.c: 85:         if(Global_BtnRead == Btn_D_Pressed)
   359   001FDA  0421               	decf	_Global_BtnRead^0,w,c
   360   001FDC  A4D8               	btfss	status,2,c
   361   001FDE  EFF3  F00F         	goto	u2341
   362   001FE2  EFF5  F00F         	goto	u2340
   363   001FE6                     u2341:
   364   001FE6  EFE7  F00F         	goto	l25
   365   001FEA                     u2340:
   366   001FEA                     
   367                           ;main.c: 86:         {;main.c: 87:             HAL_LED_LEDBlink(&led1);
   368   001FEA  0E23               	movlw	low _led1
   369   001FEC  6E12               	movwf	HAL_LED_LEDBlink@Copy_LED^0,c
   370   001FEE  EC8A  F00F         	call	_HAL_LED_LEDBlink	;wreg free
   371   001FF2  EFE7  F00F         	goto	l25
   372   001FF6  EF00  F000         	goto	start
   373   001FFA                     __end_of_main:
   374                           	callstack 0
   375                           
   376 ;; *************** function _HAL_Push_Button_ReadBtn *****************
   377 ;; Defined at:
   378 ;;		line 42 in file "HAL/Push_Button/Push_Button_Prog.c"
   379 ;; Parameters:    Size  Location     Type
   380 ;;  Copy_Btn        1    6[COMRAM] PTR struct .
   381 ;;		 -> Btn(1), 
   382 ;;  Copy_BtnStat    1    7[COMRAM] PTR unsigned char 
   383 ;;		 -> Global_BtnRead(1), 
   384 ;; Auto vars:     Size  Location     Type
   385 ;;  Local_BtnSta    1   11[COMRAM] unsigned char 
   386 ;;  Btn             1   10[COMRAM] struct .
   387 ;;  Local_ErrorS    1    0        unsigned char 
   388 ;; Return value:  Size  Location     Type
   389 ;;                  1    wreg      unsigned char 
   390 ;; Registers used:
   391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   400 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   401 ;;Total ram usage:        6 bytes
   402 ;; Hardware stack levels used: 1
   403 ;; Hardware stack levels required when called: 1
   404 ;; This function calls:
   405 ;;		_MCAL_DIO_ReadPinValue
   406 ;; This function is called by:
   407 ;;		_main
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text1
   412   001C1E                     __ptext1:
   413                           	callstack 0
   414   001C1E                     _HAL_Push_Button_ReadBtn:
   415                           	callstack 29
   416   001C1E                     
   417                           ;HAL/Push_Button/Push_Button_Prog.c: 45:     uint8 Local_BtnStatus = Btn_D_Released;
   418   001C1E  0E00               	movlw	0
   419   001C20  6E18               	movwf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,c
   420   001C22                     
   421                           ;HAL/Push_Button/Push_Button_Prog.c: 46:     Pin_Conig_t Btn = {
   422   001C22  C001  F017         	movff	HAL_Push_Button_ReadBtn@F2819,HAL_Push_Button_ReadBtn@Btn
   423   001C26  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   424   001C28  6ED9               	movwf	fsr2l,c
   425   001C2A  6ADA               	clrf	fsr2h,c
   426   001C2C  50DF               	movf	223,w,c
   427   001C2E  0B07               	andlw	7
   428   001C30  6E15               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   429   001C32  5017               	movf	HAL_Push_Button_ReadBtn@Btn^0,w,c
   430   001C34  1815               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   431   001C36  0BF8               	andlw	-8
   432   001C38  1815               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   433   001C3A  6E17               	movwf	HAL_Push_Button_ReadBtn@Btn^0,c
   434   001C3C  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   435   001C3E  6ED9               	movwf	fsr2l,c
   436   001C40  6ADA               	clrf	fsr2h,c
   437   001C42  30DF               	rrcf	223,w,c
   438   001C44  32E8               	rrcf	wreg,f,c
   439   001C46  32E8               	rrcf	wreg,f,c
   440   001C48  0B07               	andlw	7
   441   001C4A  6E15               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   442   001C4C  4615               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   443   001C4E  4615               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   444   001C50  4615               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   445   001C52  5017               	movf	HAL_Push_Button_ReadBtn@Btn^0,w,c
   446   001C54  1815               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   447   001C56  0BC7               	andlw	-57
   448   001C58  1815               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   449   001C5A  6E17               	movwf	HAL_Push_Button_ReadBtn@Btn^0,c
   450   001C5C  8C17               	bsf	HAL_Push_Button_ReadBtn@Btn^0,6,c
   451   001C5E  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   452   001C60  6ED9               	movwf	fsr2l,c
   453   001C62  6ADA               	clrf	fsr2h,c
   454   001C64  AEDF               	btfss	indf2,7,c
   455   001C66  D002               	bra	u2235
   456   001C68  8E17               	bsf	HAL_Push_Button_ReadBtn@Btn^0,7,c
   457   001C6A  D001               	bra	u2237
   458   001C6C                     u2235:
   459   001C6C  9E17               	bcf	HAL_Push_Button_ReadBtn@Btn^0,7,c
   460   001C6E                     u2237:
   461   001C6E                     
   462                           ;HAL/Push_Button/Push_Button_Prog.c: 52:     if(!MCAL_DIO_ReadPinValue(&Btn, &Local_BtnS
      +                          tatus))
   463   001C6E  0E17               	movlw	low HAL_Push_Button_ReadBtn@Btn
   464   001C70  6E0D               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   465   001C72  0E18               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   466   001C74  6E0E               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   467   001C76  ECF5  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   468   001C7A  0900               	iorlw	0
   469   001C7C  A4D8               	btfss	status,2,c
   470   001C7E  EF43  F00E         	goto	u2241
   471   001C82  EF45  F00E         	goto	u2240
   472   001C86                     u2241:
   473   001C86  EF47  F00E         	goto	l2379
   474   001C8A                     u2240:
   475   001C8A                     
   476                           ;HAL/Push_Button/Push_Button_Prog.c: 55:     }
   477   001C8A  EFCD  F00E         	goto	l163
   478   001C8E                     l2379:
   479                           
   480                           ;HAL/Push_Button/Push_Button_Prog.c: 57:     {;HAL/Push_Button/Push_Button_Prog.c: 58:  
      +                                 if(Copy_Btn->Connection_Meth == 0)
   481   001C8E  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   482   001C90  6ED9               	movwf	fsr2l,c
   483   001C92  6ADA               	clrf	fsr2h,c
   484   001C94  BCDF               	btfsc	indf2,6,c
   485   001C96  EF4F  F00E         	goto	u2251
   486   001C9A  EF51  F00E         	goto	u2250
   487   001C9E                     u2251:
   488   001C9E  EF8B  F00E         	goto	l2393
   489   001CA2                     u2250:
   490   001CA2                     
   491                           ;HAL/Push_Button/Push_Button_Prog.c: 59:         {;HAL/Push_Button/Push_Button_Prog.c: 6
      +                          0:             if(Local_BtnStatus == Btn_D_Pressed)
   492   001CA2  0418               	decf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   493   001CA4  A4D8               	btfss	status,2,c
   494   001CA6  EF57  F00E         	goto	u2261
   495   001CAA  EF59  F00E         	goto	u2260
   496   001CAE                     u2261:
   497   001CAE  EF81  F00E         	goto	l2391
   498   001CB2                     u2260:
   499   001CB2                     
   500                           ;HAL/Push_Button/Push_Button_Prog.c: 61:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 62:                 _delay((unsigned long)((120)*(16000000/4000.0)));
   501   001CB2  0E03               	movlw	3
   502   001CB4  6E16               	movwf	(??_HAL_Push_Button_ReadBtn+1)^0,c
   503   001CB6  0E70               	movlw	112
   504   001CB8  6E15               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   505   001CBA  0E5C               	movlw	92
   506   001CBC                     u2637:
   507   001CBC  2EE8               	decfsz	wreg,f,c
   508   001CBE  D7FE               	bra	u2637
   509   001CC0  2E15               	decfsz	??_HAL_Push_Button_ReadBtn^0,f,c
   510   001CC2  D7FC               	bra	u2637
   511   001CC4  2E16               	decfsz	(??_HAL_Push_Button_ReadBtn+1)^0,f,c
   512   001CC6  D7FA               	bra	u2637
   513   001CC8  F000 F000          	nop2	
   514                           
   515                           ;HAL/Push_Button/Push_Button_Prog.c: 63:                 while(Local_BtnStatus != Btn_D_
      +                          Released)
   516   001CCC  EF6E  F00E         	goto	l2387
   517   001CD0                     l2385:
   518                           
   519                           ;HAL/Push_Button/Push_Button_Prog.c: 64:                 {;HAL/Push_Button/Push_Button_P
      +                          rog.c: 65:                     MCAL_DIO_ReadPinValue(&Btn, &Local_BtnStatus);
   520   001CD0  0E17               	movlw	low HAL_Push_Button_ReadBtn@Btn
   521   001CD2  6E0D               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   522   001CD4  0E18               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   523   001CD6  6E0E               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   524   001CD8  ECF5  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   525   001CDC                     l2387:
   526                           
   527                           ;HAL/Push_Button/Push_Button_Prog.c: 63:                 while(Local_BtnStatus != Btn_D_
      +                          Released)
   528   001CDC  5018               	movf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   529   001CDE  A4D8               	btfss	status,2,c
   530   001CE0  EF74  F00E         	goto	u2271
   531   001CE4  EF76  F00E         	goto	u2270
   532   001CE8                     u2271:
   533   001CE8  EF68  F00E         	goto	l2385
   534   001CEC                     u2270:
   535   001CEC                     
   536                           ;HAL/Push_Button/Push_Button_Prog.c: 67:                 *Copy_BtnStatus = Btn_D_Pressed
      +                          ;
   537   001CEC  5014               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   538   001CEE  6ED9               	movwf	fsr2l,c
   539   001CF0  6ADA               	clrf	fsr2h,c
   540   001CF2  0E01               	movlw	1
   541   001CF4  6EDF               	movwf	indf2,c
   542                           
   543                           ;HAL/Push_Button/Push_Button_Prog.c: 68:                 Copy_Btn->Last_Status = Btn_D_P
      +                          ressed;
   544   001CF6  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   545   001CF8  6ED9               	movwf	fsr2l,c
   546   001CFA  6ADA               	clrf	fsr2h,c
   547   001CFC  8EDF               	bsf	indf2,7,c
   548                           
   549                           ;HAL/Push_Button/Push_Button_Prog.c: 69:             }
   550   001CFE  EFCD  F00E         	goto	l2407
   551   001D02                     l2391:
   552                           
   553                           ;HAL/Push_Button/Push_Button_Prog.c: 71:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 72:                 *Copy_BtnStatus = Btn_D_Released;
   554   001D02  5014               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   555   001D04  6ED9               	movwf	fsr2l,c
   556   001D06  6ADA               	clrf	fsr2h,c
   557   001D08  6ADF               	clrf	indf2,c
   558                           
   559                           ;HAL/Push_Button/Push_Button_Prog.c: 73:                 Copy_Btn->Last_Status = Btn_D_R
      +                          eleased;
   560   001D0A  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   561   001D0C  6ED9               	movwf	fsr2l,c
   562   001D0E  6ADA               	clrf	fsr2h,c
   563   001D10  9EDF               	bcf	indf2,7,c
   564   001D12  EFCD  F00E         	goto	l2407
   565   001D16                     l2393:
   566   001D16  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   567   001D18  6ED9               	movwf	fsr2l,c
   568   001D1A  6ADA               	clrf	fsr2h,c
   569   001D1C  ACDF               	btfss	indf2,6,c
   570   001D1E  EF93  F00E         	goto	u2281
   571   001D22  EF95  F00E         	goto	u2280
   572   001D26                     u2281:
   573   001D26  EFCD  F00E         	goto	l2407
   574   001D2A                     u2280:
   575   001D2A                     
   576                           ;HAL/Push_Button/Push_Button_Prog.c: 77:         {;HAL/Push_Button/Push_Button_Prog.c: 7
      +                          8:             if(Local_BtnStatus == Btn_U_Pressed)
   577   001D2A  5018               	movf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   578   001D2C  A4D8               	btfss	status,2,c
   579   001D2E  EF9B  F00E         	goto	u2291
   580   001D32  EF9D  F00E         	goto	u2290
   581   001D36                     u2291:
   582   001D36  EFC4  F00E         	goto	l2405
   583   001D3A                     u2290:
   584   001D3A                     
   585                           ;HAL/Push_Button/Push_Button_Prog.c: 79:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 80:                 _delay((unsigned long)((120)*(16000000/4000.0)));
   586   001D3A  0E03               	movlw	3
   587   001D3C  6E16               	movwf	(??_HAL_Push_Button_ReadBtn+1)^0,c
   588   001D3E  0E70               	movlw	112
   589   001D40  6E15               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   590   001D42  0E5C               	movlw	92
   591   001D44                     u2647:
   592   001D44  2EE8               	decfsz	wreg,f,c
   593   001D46  D7FE               	bra	u2647
   594   001D48  2E15               	decfsz	??_HAL_Push_Button_ReadBtn^0,f,c
   595   001D4A  D7FC               	bra	u2647
   596   001D4C  2E16               	decfsz	(??_HAL_Push_Button_ReadBtn+1)^0,f,c
   597   001D4E  D7FA               	bra	u2647
   598   001D50  F000 F000          	nop2	
   599                           
   600                           ;HAL/Push_Button/Push_Button_Prog.c: 81:                 while(Local_BtnStatus != Btn_U_
      +                          Released)
   601   001D54  EFB2  F00E         	goto	l2401
   602   001D58                     l2399:
   603                           
   604                           ;HAL/Push_Button/Push_Button_Prog.c: 82:                 {;HAL/Push_Button/Push_Button_P
      +                          rog.c: 83:                     MCAL_DIO_ReadPinValue(&Btn, &Local_BtnStatus);
   605   001D58  0E17               	movlw	low HAL_Push_Button_ReadBtn@Btn
   606   001D5A  6E0D               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   607   001D5C  0E18               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   608   001D5E  6E0E               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   609   001D60  ECF5  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   610   001D64                     l2401:
   611                           
   612                           ;HAL/Push_Button/Push_Button_Prog.c: 81:                 while(Local_BtnStatus != Btn_U_
      +                          Released)
   613   001D64  0418               	decf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   614   001D66  A4D8               	btfss	status,2,c
   615   001D68  EFB8  F00E         	goto	u2301
   616   001D6C  EFBA  F00E         	goto	u2300
   617   001D70                     u2301:
   618   001D70  EFAC  F00E         	goto	l2399
   619   001D74                     u2300:
   620   001D74                     
   621                           ;HAL/Push_Button/Push_Button_Prog.c: 85:                 *Copy_BtnStatus = Btn_U_Pressed
      +                          ;
   622   001D74  5014               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   623   001D76  6ED9               	movwf	fsr2l,c
   624   001D78  6ADA               	clrf	fsr2h,c
   625   001D7A  6ADF               	clrf	indf2,c
   626                           
   627                           ;HAL/Push_Button/Push_Button_Prog.c: 86:                 Copy_Btn->Last_Status = Btn_U_P
      +                          ressed;
   628   001D7C  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   629   001D7E  6ED9               	movwf	fsr2l,c
   630   001D80  6ADA               	clrf	fsr2h,c
   631   001D82  9EDF               	bcf	indf2,7,c
   632                           
   633                           ;HAL/Push_Button/Push_Button_Prog.c: 87:             }
   634   001D84  EFCD  F00E         	goto	l2407
   635   001D88                     l2405:
   636                           
   637                           ;HAL/Push_Button/Push_Button_Prog.c: 89:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 90:                 *Copy_BtnStatus = Btn_U_Released;
   638   001D88  5014               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   639   001D8A  6ED9               	movwf	fsr2l,c
   640   001D8C  6ADA               	clrf	fsr2h,c
   641   001D8E  0E01               	movlw	1
   642   001D90  6EDF               	movwf	indf2,c
   643                           
   644                           ;HAL/Push_Button/Push_Button_Prog.c: 91:                 Copy_Btn->Last_Status = Btn_U_R
      +                          eleased;
   645   001D92  5013               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   646   001D94  6ED9               	movwf	fsr2l,c
   647   001D96  6ADA               	clrf	fsr2h,c
   648   001D98  8EDF               	bsf	indf2,7,c
   649   001D9A                     l2407:
   650   001D9A                     l163:
   651   001D9A  0012               	return		;funcret
   652   001D9C                     __end_of_HAL_Push_Button_ReadBtn:
   653                           	callstack 0
   654                           
   655 ;; *************** function _MCAL_DIO_ReadPinValue *****************
   656 ;; Defined at:
   657 ;;		line 307 in file "MCAL/DIO/DIO_Prog.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  Copy_PinInfo    1    0[COMRAM] PTR const struct .
   660 ;;		 -> HAL_Push_Button_ReadBtn@Btn(1), 
   661 ;;  Copy_PinValu    1    1[COMRAM] PTR enum E228
   662 ;;		 -> HAL_Push_Button_ReadBtn@Local_BtnStatus(1), 
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  Local_PinVal    1    5[COMRAM] unsigned char 
   665 ;;  Local_ErrorS    1    4[COMRAM] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      unsigned char 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:        6 bytes
   680 ;; Hardware stack levels used: 1
   681 ;; This function calls:
   682 ;;		Nothing
   683 ;; This function is called by:
   684 ;;		_HAL_Push_Button_ReadBtn
   685 ;; This function uses a non-reentrant model
   686 ;;
   687                           
   688                           	psect	text2
   689   0019EA                     __ptext2:
   690                           	callstack 0
   691   0019EA                     _MCAL_DIO_ReadPinValue:
   692                           	callstack 29
   693   0019EA                     
   694                           ;MCAL/DIO/DIO_Prog.c: 310:     uint8 Local_PinValue = 6;
   695   0019EA  0E06               	movlw	6
   696   0019EC  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   697   0019EE                     
   698                           ;MCAL/DIO/DIO_Prog.c: 311:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_OUTPUT)
   699   0019EE  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   700   0019F0  6ED9               	movwf	fsr2l,c
   701   0019F2  6ADA               	clrf	fsr2h,c
   702   0019F4  30DF               	rrcf	223,w,c
   703   0019F6  32E8               	rrcf	wreg,f,c
   704   0019F8  32E8               	rrcf	wreg,f,c
   705   0019FA  0B07               	andlw	7
   706   0019FC  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   707   0019FE  0E08               	movlw	8
   708   001A00  600F               	cpfslt	??_MCAL_DIO_ReadPinValue^0,c
   709   001A02  EF05  F00D         	goto	u1961
   710   001A06  EF07  F00D         	goto	u1960
   711   001A0A                     u1961:
   712   001A0A  EF11  F00D         	goto	l2239
   713   001A0E                     u1960:
   714   001A0E  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   715   001A10  6ED9               	movwf	fsr2l,c
   716   001A12  6ADA               	clrf	fsr2h,c
   717   001A14  BCDF               	btfsc	indf2,6,c
   718   001A16  EF0F  F00D         	goto	u1971
   719   001A1A  EF11  F00D         	goto	u1970
   720   001A1E                     u1971:
   721   001A1E  EFF2  F00D         	goto	l2309
   722   001A22                     u1970:
   723   001A22                     l2239:
   724                           
   725                           ;MCAL/DIO/DIO_Prog.c: 312:     {;MCAL/DIO/DIO_Prog.c: 313:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
   726   001A22  0E00               	movlw	0
   727   001A24  6E11               	movwf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,c
   728                           
   729                           ;MCAL/DIO/DIO_Prog.c: 314:     }
   730   001A26  EF0D  F00E         	goto	l2311
   731   001A2A                     l2241:
   732                           
   733                           ;MCAL/DIO/DIO_Prog.c: 320:                 Local_PinValue = (((*((volatile PORTA_t *)0xF
      +                          80)).PORTA_REGISTER >> Copy_PinInfo->Pin_Num) & 1);
   734   001A2A  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   735   001A2C  6ED9               	movwf	fsr2l,c
   736   001A2E  6ADA               	clrf	fsr2h,c
   737   001A30  30DF               	rrcf	223,w,c
   738   001A32  32E8               	rrcf	wreg,f,c
   739   001A34  32E8               	rrcf	wreg,f,c
   740   001A36  0B07               	andlw	7
   741   001A38  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   742   001A3A  CF80 F010          	movff	3968,??_MCAL_DIO_ReadPinValue+1	;volatile
   743   001A3E  2A0F               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   744   001A40  EF24  F00D         	goto	u1984
   745   001A44                     u1985:
   746   001A44  90D8               	bcf	status,0,c
   747   001A46  3210               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   748   001A48                     u1984:
   749   001A48  2E0F               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   750   001A4A  EF22  F00D         	goto	u1985
   751   001A4E  5010               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   752   001A50  0B01               	andlw	1
   753   001A52  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   754   001A54                     
   755                           ;MCAL/DIO/DIO_Prog.c: 321:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   756   001A54  0412               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   757   001A56  B4D8               	btfsc	status,2,c
   758   001A58  EF30  F00D         	goto	u1991
   759   001A5C  EF32  F00D         	goto	u1990
   760   001A60                     u1991:
   761   001A60  EF3A  F00D         	goto	l2247
   762   001A64                     u1990:
   763   001A64  5012               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   764   001A66  A4D8               	btfss	status,2,c
   765   001A68  EF38  F00D         	goto	u2001
   766   001A6C  EF3A  F00D         	goto	u2000
   767   001A70                     u2001:
   768   001A70  EF11  F00D         	goto	l2239
   769   001A74                     u2000:
   770   001A74                     l2247:
   771                           
   772                           ;MCAL/DIO/DIO_Prog.c: 322:                 {;MCAL/DIO/DIO_Prog.c: 323:                  
      +                             *Copy_PinValue = Local_PinValue;
   773   001A74  500E               	movf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,w,c
   774   001A76  6ED9               	movwf	fsr2l,c
   775   001A78  6ADA               	clrf	fsr2h,c
   776   001A7A  C012  FFDF         	movff	MCAL_DIO_ReadPinValue@Local_PinValue,indf2
   777   001A7E                     
   778                           ;MCAL/DIO/DIO_Prog.c: 324:                     Local_ErrorStatus = (Std_ReturnType)0x01;
   779   001A7E  0E01               	movlw	1
   780   001A80  6E11               	movwf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,c
   781                           
   782                           ;MCAL/DIO/DIO_Prog.c: 325:                 }
   783   001A82  EF0D  F00E         	goto	l2311
   784   001A86                     l2253:
   785                           
   786                           ;MCAL/DIO/DIO_Prog.c: 332:                 Local_PinValue = (((*((volatile PORTB_t *)0xF
      +                          81)).PORTB_REGISTER >> Copy_PinInfo->Pin_Num) & 1);
   787   001A86  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   788   001A88  6ED9               	movwf	fsr2l,c
   789   001A8A  6ADA               	clrf	fsr2h,c
   790   001A8C  30DF               	rrcf	223,w,c
   791   001A8E  32E8               	rrcf	wreg,f,c
   792   001A90  32E8               	rrcf	wreg,f,c
   793   001A92  0B07               	andlw	7
   794   001A94  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   795   001A96  CF81 F010          	movff	3969,??_MCAL_DIO_ReadPinValue+1	;volatile
   796   001A9A  2A0F               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   797   001A9C  EF52  F00D         	goto	u2014
   798   001AA0                     u2015:
   799   001AA0  90D8               	bcf	status,0,c
   800   001AA2  3210               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   801   001AA4                     u2014:
   802   001AA4  2E0F               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   803   001AA6  EF50  F00D         	goto	u2015
   804   001AAA  5010               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   805   001AAC  0B01               	andlw	1
   806   001AAE  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   807   001AB0                     
   808                           ;MCAL/DIO/DIO_Prog.c: 333:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   809   001AB0  0412               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   810   001AB2  B4D8               	btfsc	status,2,c
   811   001AB4  EF5E  F00D         	goto	u2021
   812   001AB8  EF60  F00D         	goto	u2020
   813   001ABC                     u2021:
   814   001ABC  EF3A  F00D         	goto	l2247
   815   001AC0                     u2020:
   816   001AC0  5012               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   817   001AC2  A4D8               	btfss	status,2,c
   818   001AC4  EF66  F00D         	goto	u2031
   819   001AC8  EF68  F00D         	goto	u2030
   820   001ACC                     u2031:
   821   001ACC  EF11  F00D         	goto	l2239
   822   001AD0                     u2030:
   823   001AD0  EF3A  F00D         	goto	l2247
   824   001AD4                     l2265:
   825                           
   826                           ;MCAL/DIO/DIO_Prog.c: 344:                 Local_PinValue = (((*((volatile PORTC_t *)0xF
      +                          82)).PORTC_REGISTER >> Copy_PinInfo->Pin_Num) & 1);
   827   001AD4  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   828   001AD6  6ED9               	movwf	fsr2l,c
   829   001AD8  6ADA               	clrf	fsr2h,c
   830   001ADA  30DF               	rrcf	223,w,c
   831   001ADC  32E8               	rrcf	wreg,f,c
   832   001ADE  32E8               	rrcf	wreg,f,c
   833   001AE0  0B07               	andlw	7
   834   001AE2  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   835   001AE4  CF82 F010          	movff	3970,??_MCAL_DIO_ReadPinValue+1	;volatile
   836   001AE8  2A0F               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   837   001AEA  EF79  F00D         	goto	u2044
   838   001AEE                     u2045:
   839   001AEE  90D8               	bcf	status,0,c
   840   001AF0  3210               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   841   001AF2                     u2044:
   842   001AF2  2E0F               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   843   001AF4  EF77  F00D         	goto	u2045
   844   001AF8  5010               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   845   001AFA  0B01               	andlw	1
   846   001AFC  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   847   001AFE                     
   848                           ;MCAL/DIO/DIO_Prog.c: 345:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   849   001AFE  0412               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   850   001B00  B4D8               	btfsc	status,2,c
   851   001B02  EF85  F00D         	goto	u2051
   852   001B06  EF87  F00D         	goto	u2050
   853   001B0A                     u2051:
   854   001B0A  EF3A  F00D         	goto	l2247
   855   001B0E                     u2050:
   856   001B0E  5012               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   857   001B10  A4D8               	btfss	status,2,c
   858   001B12  EF8D  F00D         	goto	u2061
   859   001B16  EF8F  F00D         	goto	u2060
   860   001B1A                     u2061:
   861   001B1A  EF11  F00D         	goto	l2239
   862   001B1E                     u2060:
   863   001B1E  EF3A  F00D         	goto	l2247
   864   001B22                     l2277:
   865                           
   866                           ;MCAL/DIO/DIO_Prog.c: 356:                 Local_PinValue = (((*((volatile PORTD_t *)0xF
      +                          83)).PORTD_REGISTER >> Copy_PinInfo->Pin_Num) & 1);
   867   001B22  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   868   001B24  6ED9               	movwf	fsr2l,c
   869   001B26  6ADA               	clrf	fsr2h,c
   870   001B28  30DF               	rrcf	223,w,c
   871   001B2A  32E8               	rrcf	wreg,f,c
   872   001B2C  32E8               	rrcf	wreg,f,c
   873   001B2E  0B07               	andlw	7
   874   001B30  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   875   001B32  CF83 F010          	movff	3971,??_MCAL_DIO_ReadPinValue+1	;volatile
   876   001B36  2A0F               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   877   001B38  EFA0  F00D         	goto	u2074
   878   001B3C                     u2075:
   879   001B3C  90D8               	bcf	status,0,c
   880   001B3E  3210               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   881   001B40                     u2074:
   882   001B40  2E0F               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   883   001B42  EF9E  F00D         	goto	u2075
   884   001B46  5010               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   885   001B48  0B01               	andlw	1
   886   001B4A  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   887   001B4C                     
   888                           ;MCAL/DIO/DIO_Prog.c: 357:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   889   001B4C  0412               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   890   001B4E  B4D8               	btfsc	status,2,c
   891   001B50  EFAC  F00D         	goto	u2081
   892   001B54  EFAE  F00D         	goto	u2080
   893   001B58                     u2081:
   894   001B58  EF3A  F00D         	goto	l2247
   895   001B5C                     u2080:
   896   001B5C  5012               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   897   001B5E  A4D8               	btfss	status,2,c
   898   001B60  EFB4  F00D         	goto	u2091
   899   001B64  EFB6  F00D         	goto	u2090
   900   001B68                     u2091:
   901   001B68  EF11  F00D         	goto	l2239
   902   001B6C                     u2090:
   903   001B6C  EF3A  F00D         	goto	l2247
   904   001B70                     l2289:
   905                           
   906                           ;MCAL/DIO/DIO_Prog.c: 368:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
   907   001B70  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   908   001B72  6ED9               	movwf	fsr2l,c
   909   001B74  6ADA               	clrf	fsr2h,c
   910   001B76  30DF               	rrcf	223,w,c
   911   001B78  32E8               	rrcf	wreg,f,c
   912   001B7A  32E8               	rrcf	wreg,f,c
   913   001B7C  0B07               	andlw	7
   914   001B7E  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   915   001B80  0E02               	movlw	2
   916   001B82  640F               	cpfsgt	??_MCAL_DIO_ReadPinValue^0,c
   917   001B84  EFC6  F00D         	goto	u2101
   918   001B88  EFC8  F00D         	goto	u2100
   919   001B8C                     u2101:
   920   001B8C  EFCA  F00D         	goto	l2293
   921   001B90                     u2100:
   922   001B90  EF11  F00D         	goto	l2239
   923   001B94                     l2293:
   924                           
   925                           ;MCAL/DIO/DIO_Prog.c: 373:                 Local_PinValue = (((*((volatile PORTE_t *)0xF
      +                          84)).PORTE_REGISTER >> Copy_PinInfo->Pin_Num) & 1);
   926   001B94  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   927   001B96  6ED9               	movwf	fsr2l,c
   928   001B98  6ADA               	clrf	fsr2h,c
   929   001B9A  30DF               	rrcf	223,w,c
   930   001B9C  32E8               	rrcf	wreg,f,c
   931   001B9E  32E8               	rrcf	wreg,f,c
   932   001BA0  0B07               	andlw	7
   933   001BA2  6E0F               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   934   001BA4  5084               	movf	132,w,c	;volatile
   935   001BA6  0B0F               	andlw	15
   936   001BA8  6E10               	movwf	(??_MCAL_DIO_ReadPinValue+1)^0,c
   937   001BAA  2A0F               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   938   001BAC  EFDA  F00D         	goto	u2114
   939   001BB0                     u2115:
   940   001BB0  90D8               	bcf	status,0,c
   941   001BB2  3210               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   942   001BB4                     u2114:
   943   001BB4  2E0F               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   944   001BB6  EFD8  F00D         	goto	u2115
   945   001BBA  5010               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   946   001BBC  0B01               	andlw	1
   947   001BBE  6E12               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   948   001BC0                     
   949                           ;MCAL/DIO/DIO_Prog.c: 374:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   950   001BC0  0412               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   951   001BC2  B4D8               	btfsc	status,2,c
   952   001BC4  EFE6  F00D         	goto	u2121
   953   001BC8  EFE8  F00D         	goto	u2120
   954   001BCC                     u2121:
   955   001BCC  EF3A  F00D         	goto	l2247
   956   001BD0                     u2120:
   957   001BD0  5012               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   958   001BD2  A4D8               	btfss	status,2,c
   959   001BD4  EFEE  F00D         	goto	u2131
   960   001BD8  EFF0  F00D         	goto	u2130
   961   001BDC                     u2131:
   962   001BDC  EF11  F00D         	goto	l2239
   963   001BE0                     u2130:
   964   001BE0  EF3A  F00D         	goto	l2247
   965   001BE4                     l2309:
   966   001BE4  500D               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   967   001BE6  6ED9               	movwf	fsr2l,c
   968   001BE8  6ADA               	clrf	fsr2h,c
   969   001BEA  50DF               	movf	223,w,c
   970   001BEC  0B07               	andlw	7
   971                           
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 5, Range of values is 0 to 4
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte           16     9 (average)
   977                           ;	Chosen strategy is simple_byte
   978   001BEE  0A00               	xorlw	0	; case 0
   979   001BF0  B4D8               	btfsc	status,2,c
   980   001BF2  EF15  F00D         	goto	l2241
   981   001BF6  0A01               	xorlw	1	; case 1
   982   001BF8  B4D8               	btfsc	status,2,c
   983   001BFA  EF43  F00D         	goto	l2253
   984   001BFE  0A03               	xorlw	3	; case 2
   985   001C00  B4D8               	btfsc	status,2,c
   986   001C02  EF6A  F00D         	goto	l2265
   987   001C06  0A01               	xorlw	1	; case 3
   988   001C08  B4D8               	btfsc	status,2,c
   989   001C0A  EF91  F00D         	goto	l2277
   990   001C0E  0A07               	xorlw	7	; case 4
   991   001C10  B4D8               	btfsc	status,2,c
   992   001C12  EFB8  F00D         	goto	l2289
   993   001C16  EF11  F00D         	goto	l2239
   994   001C1A                     l2311:
   995                           
   996                           ;MCAL/DIO/DIO_Prog.c: 389:     return Local_ErrorStatus;
   997   001C1A  5011               	movf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,w,c
   998   001C1C  0012               	return		;funcret
   999   001C1E                     __end_of_MCAL_DIO_ReadPinValue:
  1000                           	callstack 0
  1001                           
  1002 ;; *************** function _HAL_Push_Button_BtnConfig *****************
  1003 ;; Defined at:
  1004 ;;		line 16 in file "HAL/Push_Button/Push_Button_Prog.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;  Copy_Btn        1    4[COMRAM] PTR const struct .
  1007 ;;		 -> Btn(1), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  Btn             1    6[COMRAM] struct .
  1010 ;;  Local_ErrorS    1    0        unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      unsigned char 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;Total ram usage:        3 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 1
  1027 ;; This function calls:
  1028 ;;		_MCAL_DIO_SetPinDirection
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text3
  1035   001E6A                     __ptext3:
  1036                           	callstack 0
  1037   001E6A                     _HAL_Push_Button_BtnConfig:
  1038                           	callstack 29
  1039   001E6A                     
  1040                           ;HAL/Push_Button/Push_Button_Prog.c: 19:     if(Copy_Btn->PORT_ID > Btn_PORTE || Copy_Bt
      +                          n->Pin_Num > Btn_PIN7)
  1041   001E6A  5011               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1042   001E6C  6ED9               	movwf	fsr2l,c
  1043   001E6E  6ADA               	clrf	fsr2h,c
  1044   001E70  50DF               	movf	223,w,c
  1045   001E72  0B07               	andlw	7
  1046   001E74  6E12               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1047   001E76  0E05               	movlw	5
  1048   001E78  6012               	cpfslt	??_HAL_Push_Button_BtnConfig^0,c
  1049   001E7A  EF41  F00F         	goto	u2191
  1050   001E7E  EF43  F00F         	goto	u2190
  1051   001E82                     u2191:
  1052   001E82  EF53  F00F         	goto	l2347
  1053   001E86                     u2190:
  1054   001E86  5011               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1055   001E88  6ED9               	movwf	fsr2l,c
  1056   001E8A  6ADA               	clrf	fsr2h,c
  1057   001E8C  30DF               	rrcf	223,w,c
  1058   001E8E  32E8               	rrcf	wreg,f,c
  1059   001E90  32E8               	rrcf	wreg,f,c
  1060   001E92  0B07               	andlw	7
  1061   001E94  6E12               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1062   001E96  0E07               	movlw	7
  1063   001E98  6412               	cpfsgt	??_HAL_Push_Button_BtnConfig^0,c
  1064   001E9A  EF51  F00F         	goto	u2201
  1065   001E9E  EF53  F00F         	goto	u2200
  1066   001EA2                     u2201:
  1067   001EA2  EF55  F00F         	goto	l135
  1068   001EA6                     u2200:
  1069   001EA6                     l2347:
  1070                           
  1071                           ;HAL/Push_Button/Push_Button_Prog.c: 22:     }
  1072   001EA6  EF89  F00F         	goto	l143
  1073   001EAA                     l135:
  1074                           
  1075                           ;HAL/Push_Button/Push_Button_Prog.c: 24:     {;HAL/Push_Button/Push_Button_Prog.c: 25:  
      +                                 Pin_Conig_t Btn = {
  1076   001EAA  C002  F013         	movff	HAL_Push_Button_BtnConfig@F2812,HAL_Push_Button_BtnConfig@Btn
  1077   001EAE  5011               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1078   001EB0  6ED9               	movwf	fsr2l,c
  1079   001EB2  6ADA               	clrf	fsr2h,c
  1080   001EB4  50DF               	movf	223,w,c
  1081   001EB6  0B07               	andlw	7
  1082   001EB8  6E12               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1083   001EBA  5013               	movf	HAL_Push_Button_BtnConfig@Btn^0,w,c
  1084   001EBC  1812               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1085   001EBE  0BF8               	andlw	-8
  1086   001EC0  1812               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1087   001EC2  6E13               	movwf	HAL_Push_Button_BtnConfig@Btn^0,c
  1088   001EC4  5011               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1089   001EC6  6ED9               	movwf	fsr2l,c
  1090   001EC8  6ADA               	clrf	fsr2h,c
  1091   001ECA  30DF               	rrcf	223,w,c
  1092   001ECC  32E8               	rrcf	wreg,f,c
  1093   001ECE  32E8               	rrcf	wreg,f,c
  1094   001ED0  0B07               	andlw	7
  1095   001ED2  6E12               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1096   001ED4  4612               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1097   001ED6  4612               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1098   001ED8  4612               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1099   001EDA  5013               	movf	HAL_Push_Button_BtnConfig@Btn^0,w,c
  1100   001EDC  1812               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1101   001EDE  0BC7               	andlw	-57
  1102   001EE0  1812               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1103   001EE2  6E13               	movwf	HAL_Push_Button_BtnConfig@Btn^0,c
  1104   001EE4  8C13               	bsf	HAL_Push_Button_BtnConfig@Btn^0,6,c
  1105   001EE6  5011               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1106   001EE8  6ED9               	movwf	fsr2l,c
  1107   001EEA  6ADA               	clrf	fsr2h,c
  1108   001EEC  AEDF               	btfss	indf2,7,c
  1109   001EEE  D002               	bra	u2215
  1110   001EF0  8E13               	bsf	HAL_Push_Button_BtnConfig@Btn^0,7,c
  1111   001EF2  D001               	bra	u2217
  1112   001EF4                     u2215:
  1113   001EF4  9E13               	bcf	HAL_Push_Button_BtnConfig@Btn^0,7,c
  1114   001EF6                     u2217:
  1115   001EF6                     
  1116                           ;HAL/Push_Button/Push_Button_Prog.c: 31:         if(!MCAL_DIO_SetPinDirection(&Btn))
  1117   001EF6  0E13               	movlw	low HAL_Push_Button_BtnConfig@Btn
  1118   001EF8  6E0D               	movwf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,c
  1119   001EFA  EC14  F00A         	call	_MCAL_DIO_SetPinDirection	;wreg free
  1120   001EFE  0900               	iorlw	0
  1121   001F00  A4D8               	btfss	status,2,c
  1122   001F02  EF85  F00F         	goto	u2221
  1123   001F06  EF87  F00F         	goto	u2220
  1124   001F0A                     u2221:
  1125   001F0A  EF89  F00F         	goto	l2359
  1126   001F0E                     u2220:
  1127   001F0E  EF53  F00F         	goto	l2347
  1128   001F12                     l2359:
  1129   001F12                     l143:
  1130   001F12  0012               	return		;funcret
  1131   001F14                     __end_of_HAL_Push_Button_BtnConfig:
  1132                           	callstack 0
  1133                           
  1134 ;; *************** function _HAL_LED_LEDConfig *****************
  1135 ;; Defined at:
  1136 ;;		line 15 in file "HAL/LED/LED_Prog.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;  Copy_LED        1    7[COMRAM] PTR const struct .
  1139 ;;		 -> led1(1), 
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;  LED             1    9[COMRAM] struct .
  1142 ;;  Local_ErrorS    1    0        unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      unsigned char 
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1152 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;Total ram usage:        3 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; Hardware stack levels required when called: 1
  1159 ;; This function calls:
  1160 ;;		_MCAL_DIO_SetPinDirection
  1161 ;;		_MCAL_DIO_SetPinValue
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text4
  1168   001D9C                     __ptext4:
  1169                           	callstack 0
  1170   001D9C                     _HAL_LED_LEDConfig:
  1171                           	callstack 29
  1172   001D9C                     
  1173                           ;HAL/LED/LED_Prog.c: 18:     if(Copy_LED->PORT_ID > LED_PORTE || Copy_LED->Pin_Num > LED
      +                          _PIN7)
  1174   001D9C  5014               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1175   001D9E  6ED9               	movwf	fsr2l,c
  1176   001DA0  6ADA               	clrf	fsr2h,c
  1177   001DA2  50DF               	movf	223,w,c
  1178   001DA4  0B07               	andlw	7
  1179   001DA6  6E15               	movwf	??_HAL_LED_LEDConfig^0,c
  1180   001DA8  0E05               	movlw	5
  1181   001DAA  6015               	cpfslt	??_HAL_LED_LEDConfig^0,c
  1182   001DAC  EFDA  F00E         	goto	u2141
  1183   001DB0  EFDC  F00E         	goto	u2140
  1184   001DB4                     u2141:
  1185   001DB4  EFEC  F00E         	goto	l2321
  1186   001DB8                     u2140:
  1187   001DB8  5014               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1188   001DBA  6ED9               	movwf	fsr2l,c
  1189   001DBC  6ADA               	clrf	fsr2h,c
  1190   001DBE  30DF               	rrcf	223,w,c
  1191   001DC0  32E8               	rrcf	wreg,f,c
  1192   001DC2  32E8               	rrcf	wreg,f,c
  1193   001DC4  0B07               	andlw	7
  1194   001DC6  6E15               	movwf	??_HAL_LED_LEDConfig^0,c
  1195   001DC8  0E07               	movlw	7
  1196   001DCA  6415               	cpfsgt	??_HAL_LED_LEDConfig^0,c
  1197   001DCC  EFEA  F00E         	goto	u2151
  1198   001DD0  EFEC  F00E         	goto	u2150
  1199   001DD4                     u2151:
  1200   001DD4  EFEE  F00E         	goto	l40
  1201   001DD8                     u2150:
  1202   001DD8                     l2321:
  1203                           
  1204                           ;HAL/LED/LED_Prog.c: 21:     }
  1205   001DD8  EF34  F00F         	goto	l50
  1206   001DDC                     l40:
  1207                           
  1208                           ;HAL/LED/LED_Prog.c: 23:     {;HAL/LED/LED_Prog.c: 24:         Pin_Conig_t LED = {
  1209   001DDC  C00B  F016         	movff	HAL_LED_LEDConfig@F2826,HAL_LED_LEDConfig@LED
  1210   001DE0  5014               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1211   001DE2  6ED9               	movwf	fsr2l,c
  1212   001DE4  6ADA               	clrf	fsr2h,c
  1213   001DE6  50DF               	movf	223,w,c
  1214   001DE8  0B07               	andlw	7
  1215   001DEA  6E15               	movwf	??_HAL_LED_LEDConfig^0,c
  1216   001DEC  5016               	movf	HAL_LED_LEDConfig@LED^0,w,c
  1217   001DEE  1815               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1218   001DF0  0BF8               	andlw	-8
  1219   001DF2  1815               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1220   001DF4  6E16               	movwf	HAL_LED_LEDConfig@LED^0,c
  1221   001DF6  5014               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1222   001DF8  6ED9               	movwf	fsr2l,c
  1223   001DFA  6ADA               	clrf	fsr2h,c
  1224   001DFC  30DF               	rrcf	223,w,c
  1225   001DFE  32E8               	rrcf	wreg,f,c
  1226   001E00  32E8               	rrcf	wreg,f,c
  1227   001E02  0B07               	andlw	7
  1228   001E04  6E15               	movwf	??_HAL_LED_LEDConfig^0,c
  1229   001E06  4615               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1230   001E08  4615               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1231   001E0A  4615               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1232   001E0C  5016               	movf	HAL_LED_LEDConfig@LED^0,w,c
  1233   001E0E  1815               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1234   001E10  0BC7               	andlw	-57
  1235   001E12  1815               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1236   001E14  6E16               	movwf	HAL_LED_LEDConfig@LED^0,c
  1237   001E16  9C16               	bcf	HAL_LED_LEDConfig@LED^0,6,c
  1238   001E18  5014               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1239   001E1A  6ED9               	movwf	fsr2l,c
  1240   001E1C  6ADA               	clrf	fsr2h,c
  1241   001E1E  ACDF               	btfss	indf2,6,c
  1242   001E20  D002               	bra	u2165
  1243   001E22  8E16               	bsf	HAL_LED_LEDConfig@LED^0,7,c
  1244   001E24  D001               	bra	u2167
  1245   001E26                     u2165:
  1246   001E26  9E16               	bcf	HAL_LED_LEDConfig@LED^0,7,c
  1247   001E28                     u2167:
  1248   001E28                     
  1249                           ;HAL/LED/LED_Prog.c: 30:         if(!MCAL_DIO_SetPinDirection(&LED))
  1250   001E28  0E16               	movlw	low HAL_LED_LEDConfig@LED
  1251   001E2A  6E0D               	movwf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,c
  1252   001E2C  EC14  F00A         	call	_MCAL_DIO_SetPinDirection	;wreg free
  1253   001E30  0900               	iorlw	0
  1254   001E32  A4D8               	btfss	status,2,c
  1255   001E34  EF1E  F00F         	goto	u2171
  1256   001E38  EF20  F00F         	goto	u2170
  1257   001E3C                     u2171:
  1258   001E3C  EF22  F00F         	goto	l2333
  1259   001E40                     u2170:
  1260   001E40  EFEC  F00E         	goto	l2321
  1261   001E44                     l2333:
  1262   001E44  0E16               	movlw	low HAL_LED_LEDConfig@LED
  1263   001E46  6E0D               	movwf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,c
  1264   001E48  0E00               	movlw	0
  1265   001E4A  BE16               	btfsc	HAL_LED_LEDConfig@LED^0,7,c
  1266   001E4C  0E01               	movlw	1
  1267   001E4E  6E0E               	movwf	MCAL_DIO_SetPinValue@Copy_PinValue^0,c
  1268   001E50  EC09  F008         	call	_MCAL_DIO_SetPinValue	;wreg free
  1269   001E54  0900               	iorlw	0
  1270   001E56  A4D8               	btfss	status,2,c
  1271   001E58  EF30  F00F         	goto	u2181
  1272   001E5C  EF32  F00F         	goto	u2180
  1273   001E60                     u2181:
  1274   001E60  EF34  F00F         	goto	l2337
  1275   001E64                     u2180:
  1276   001E64  EFEC  F00E         	goto	l2321
  1277   001E68                     l2337:
  1278   001E68                     l50:
  1279   001E68  0012               	return		;funcret
  1280   001E6A                     __end_of_HAL_LED_LEDConfig:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _MCAL_DIO_SetPinValue *****************
  1284 ;; Defined at:
  1285 ;;		line 199 in file "MCAL/DIO/DIO_Prog.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  Copy_PinInfo    1    0[COMRAM] PTR struct .
  1288 ;;		 -> HAL_LED_LEDArrayPatternBlink@LED(1), HAL_LED_LEDArrayPatternOff@LED(1), HAL_LED_LEDArrayPatternOn@LED(1), HAL_LE
      +D_LEDOff@LED(1), 
  1289 ;;		 -> HAL_LED_LEDOn@LED(1), HAL_LED_LEDConfig@LED(1), 
  1290 ;;  Copy_PinValu    1    1[COMRAM] enum E228
  1291 ;; Auto vars:     Size  Location     Type
  1292 ;;  Local_ErrorS    1    6[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1306 ;;Total ram usage:        7 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; This function calls:
  1309 ;;		Nothing
  1310 ;; This function is called by:
  1311 ;;		_HAL_LED_LEDConfig
  1312 ;;		_HAL_LED_LEDOn
  1313 ;;		_HAL_LED_LEDOff
  1314 ;;		_HAL_LED_LEDArrayPatternOn
  1315 ;;		_HAL_LED_LEDArrayPatternOff
  1316 ;;		_HAL_LED_LEDArrayPatternBlink
  1317 ;;		_MCAL_DIO_InitializePinOutput
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text5
  1322   001012                     __ptext5:
  1323                           	callstack 0
  1324   001012                     _MCAL_DIO_SetPinValue:
  1325                           	callstack 29
  1326   001012                     
  1327                           ;MCAL/DIO/DIO_Prog.c: 202:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_INPUT)
  1328   001012  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1329   001014  6ED9               	movwf	fsr2l,c
  1330   001016  6ADA               	clrf	fsr2h,c
  1331   001018  30DF               	rrcf	223,w,c
  1332   00101A  32E8               	rrcf	wreg,f,c
  1333   00101C  32E8               	rrcf	wreg,f,c
  1334   00101E  0B07               	andlw	7
  1335   001020  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1336   001022  0E08               	movlw	8
  1337   001024  600F               	cpfslt	??_MCAL_DIO_SetPinValue^0,c
  1338   001026  EF17  F008         	goto	u1601
  1339   00102A  EF19  F008         	goto	u1600
  1340   00102E                     u1601:
  1341   00102E  EF23  F008         	goto	l2075
  1342   001032                     u1600:
  1343   001032  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1344   001034  6ED9               	movwf	fsr2l,c
  1345   001036  6ADA               	clrf	fsr2h,c
  1346   001038  ACDF               	btfss	indf2,6,c
  1347   00103A  EF21  F008         	goto	u1611
  1348   00103E  EF23  F008         	goto	u1610
  1349   001042                     u1611:
  1350   001042  EFF7  F009         	goto	l2165
  1351   001046                     u1610:
  1352   001046                     l2075:
  1353                           
  1354                           ;MCAL/DIO/DIO_Prog.c: 203:     {;MCAL/DIO/DIO_Prog.c: 204:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
  1355   001046  0E00               	movlw	0
  1356   001048  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1357                           
  1358                           ;MCAL/DIO/DIO_Prog.c: 205:     }
  1359   00104A  EF12  F00A         	goto	l2167
  1360   00104E                     l2077:
  1361                           
  1362                           ;MCAL/DIO/DIO_Prog.c: 211:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1363   00104E  0E01               	movlw	1
  1364   001050  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1365                           
  1366                           ;MCAL/DIO/DIO_Prog.c: 212:                 switch(Copy_PinValue)
  1367   001052  EF68  F008         	goto	l2091
  1368   001056                     l2079:
  1369                           
  1370                           ;MCAL/DIO/DIO_Prog.c: 215:                         ((*((volatile LATA_t *)0xF89)).LATA_R
      +                          EGISTER |= (1 << Copy_PinInfo->Pin_Num));
  1371   001056  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1372   001058  6ED9               	movwf	fsr2l,c
  1373   00105A  6ADA               	clrf	fsr2h,c
  1374   00105C  30DF               	rrcf	223,w,c
  1375   00105E  32E8               	rrcf	wreg,f,c
  1376   001060  32E8               	rrcf	wreg,f,c
  1377   001062  0B07               	andlw	7
  1378   001064  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1379   001066  0E01               	movlw	1
  1380   001068  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1381   00106A  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1382   00106C  EF3A  F008         	goto	u1624
  1383   001070                     u1625:
  1384   001070  90D8               	bcf	status,0,c
  1385   001072  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1386   001074                     u1624:
  1387   001074  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1388   001076  EF38  F008         	goto	u1625
  1389   00107A  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1390   00107C  1289               	iorwf	137,f,c	;volatile
  1391   00107E                     
  1392                           ;MCAL/DIO/DIO_Prog.c: 216:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1393   00107E  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1394   001080  6ED9               	movwf	fsr2l,c
  1395   001082  6ADA               	clrf	fsr2h,c
  1396   001084  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1397   001086  D002               	bra	u1635
  1398   001088  9EDF               	bcf	indf2,7,c
  1399   00108A  D001               	bra	u1636
  1400   00108C                     u1635:
  1401   00108C  8EDF               	bsf	indf2,7,c
  1402   00108E                     u1636:
  1403                           
  1404                           ;MCAL/DIO/DIO_Prog.c: 217:                         break;
  1405   00108E  EF12  F00A         	goto	l2167
  1406   001092                     l2083:
  1407                           
  1408                           ;MCAL/DIO/DIO_Prog.c: 219:                         ((*((volatile LATA_t *)0xF89)).LATA_R
      +                          EGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  1409   001092  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1410   001094  6ED9               	movwf	fsr2l,c
  1411   001096  6ADA               	clrf	fsr2h,c
  1412   001098  30DF               	rrcf	223,w,c
  1413   00109A  32E8               	rrcf	wreg,f,c
  1414   00109C  32E8               	rrcf	wreg,f,c
  1415   00109E  0B07               	andlw	7
  1416   0010A0  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1417   0010A2  0E01               	movlw	1
  1418   0010A4  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1419   0010A6  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1420   0010A8  EF58  F008         	goto	u1644
  1421   0010AC                     u1645:
  1422   0010AC  90D8               	bcf	status,0,c
  1423   0010AE  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1424   0010B0                     u1644:
  1425   0010B0  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1426   0010B2  EF56  F008         	goto	u1645
  1427   0010B6  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1428   0010B8  0AFF               	xorlw	255
  1429   0010BA  1689               	andwf	137,f,c	;volatile
  1430   0010BC                     
  1431                           ;MCAL/DIO/DIO_Prog.c: 220:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1432   0010BC  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1433   0010BE  6ED9               	movwf	fsr2l,c
  1434   0010C0  6ADA               	clrf	fsr2h,c
  1435   0010C2  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1436   0010C4  D002               	bra	u1655
  1437   0010C6  9EDF               	bcf	indf2,7,c
  1438   0010C8  D001               	bra	u1656
  1439   0010CA                     u1655:
  1440   0010CA  8EDF               	bsf	indf2,7,c
  1441   0010CC                     u1656:
  1442                           
  1443                           ;MCAL/DIO/DIO_Prog.c: 221:                         break;
  1444   0010CC  EF12  F00A         	goto	l2167
  1445   0010D0                     l2091:
  1446   0010D0  500E               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1447   0010D2  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1448   0010D4  6A10               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1449                           
  1450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1451                           ; Switch size 1, requested type "simple"
  1452                           ; Number of cases is 1, Range of values is 0 to 0
  1453                           ; switch strategies available:
  1454                           ; Name         Instructions Cycles
  1455                           ; simple_byte            4     3 (average)
  1456                           ;	Chosen strategy is simple_byte
  1457   0010D6  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1458   0010D8  0A00               	xorlw	0	; case 0
  1459   0010DA  B4D8               	btfsc	status,2,c
  1460   0010DC  EF72  F008         	goto	l2653
  1461   0010E0  EF23  F008         	goto	l2075
  1462   0010E4                     l2653:
  1463                           
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 2, Range of values is 0 to 1
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte            7     4 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470   0010E4  500F               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1471   0010E6  0A00               	xorlw	0	; case 0
  1472   0010E8  B4D8               	btfsc	status,2,c
  1473   0010EA  EF49  F008         	goto	l2083
  1474   0010EE  0A01               	xorlw	1	; case 1
  1475   0010F0  B4D8               	btfsc	status,2,c
  1476   0010F2  EF2B  F008         	goto	l2079
  1477   0010F6  EF23  F008         	goto	l2075
  1478   0010FA                     l2093:
  1479                           
  1480                           ;MCAL/DIO/DIO_Prog.c: 228:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1481   0010FA  0E01               	movlw	1
  1482   0010FC  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1483                           
  1484                           ;MCAL/DIO/DIO_Prog.c: 229:                 switch(Copy_PinValue)
  1485   0010FE  EFBE  F008         	goto	l2107
  1486   001102                     l2095:
  1487                           
  1488                           ;MCAL/DIO/DIO_Prog.c: 232:                         ((*((volatile LATB_t *)0xF8A)).LATB_R
      +                          EGISTER |= (1 << Copy_PinInfo->Pin_Num));
  1489   001102  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1490   001104  6ED9               	movwf	fsr2l,c
  1491   001106  6ADA               	clrf	fsr2h,c
  1492   001108  30DF               	rrcf	223,w,c
  1493   00110A  32E8               	rrcf	wreg,f,c
  1494   00110C  32E8               	rrcf	wreg,f,c
  1495   00110E  0B07               	andlw	7
  1496   001110  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1497   001112  0E01               	movlw	1
  1498   001114  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1499   001116  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1500   001118  EF90  F008         	goto	u1664
  1501   00111C                     u1665:
  1502   00111C  90D8               	bcf	status,0,c
  1503   00111E  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1504   001120                     u1664:
  1505   001120  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1506   001122  EF8E  F008         	goto	u1665
  1507   001126  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1508   001128  128A               	iorwf	138,f,c	;volatile
  1509   00112A                     
  1510                           ;MCAL/DIO/DIO_Prog.c: 233:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1511   00112A  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1512   00112C  6ED9               	movwf	fsr2l,c
  1513   00112E  6ADA               	clrf	fsr2h,c
  1514   001130  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1515   001132  D002               	bra	u1675
  1516   001134  9EDF               	bcf	indf2,7,c
  1517   001136  D001               	bra	u1676
  1518   001138                     u1675:
  1519   001138  8EDF               	bsf	indf2,7,c
  1520   00113A                     u1676:
  1521                           
  1522                           ;MCAL/DIO/DIO_Prog.c: 234:                         break;
  1523   00113A  EF12  F00A         	goto	l2167
  1524   00113E                     l2099:
  1525                           
  1526                           ;MCAL/DIO/DIO_Prog.c: 236:                         ((*((volatile LATB_t *)0xF8A)).LATB_R
      +                          EGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  1527   00113E  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1528   001140  6ED9               	movwf	fsr2l,c
  1529   001142  6ADA               	clrf	fsr2h,c
  1530   001144  30DF               	rrcf	223,w,c
  1531   001146  32E8               	rrcf	wreg,f,c
  1532   001148  32E8               	rrcf	wreg,f,c
  1533   00114A  0B07               	andlw	7
  1534   00114C  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1535   00114E  0E01               	movlw	1
  1536   001150  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1537   001152  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1538   001154  EFAE  F008         	goto	u1684
  1539   001158                     u1685:
  1540   001158  90D8               	bcf	status,0,c
  1541   00115A  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1542   00115C                     u1684:
  1543   00115C  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1544   00115E  EFAC  F008         	goto	u1685
  1545   001162  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1546   001164  0AFF               	xorlw	255
  1547   001166  168A               	andwf	138,f,c	;volatile
  1548   001168                     
  1549                           ;MCAL/DIO/DIO_Prog.c: 237:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1550   001168  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1551   00116A  6ED9               	movwf	fsr2l,c
  1552   00116C  6ADA               	clrf	fsr2h,c
  1553   00116E  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1554   001170  D002               	bra	u1695
  1555   001172  9EDF               	bcf	indf2,7,c
  1556   001174  D001               	bra	u1696
  1557   001176                     u1695:
  1558   001176  8EDF               	bsf	indf2,7,c
  1559   001178                     u1696:
  1560                           
  1561                           ;MCAL/DIO/DIO_Prog.c: 238:                         break;
  1562   001178  EF12  F00A         	goto	l2167
  1563   00117C                     l2107:
  1564   00117C  500E               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1565   00117E  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1566   001180  6A10               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1567                           
  1568                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1569                           ; Switch size 1, requested type "simple"
  1570                           ; Number of cases is 1, Range of values is 0 to 0
  1571                           ; switch strategies available:
  1572                           ; Name         Instructions Cycles
  1573                           ; simple_byte            4     3 (average)
  1574                           ;	Chosen strategy is simple_byte
  1575   001182  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1576   001184  0A00               	xorlw	0	; case 0
  1577   001186  B4D8               	btfsc	status,2,c
  1578   001188  EFC8  F008         	goto	l2655
  1579   00118C  EF23  F008         	goto	l2075
  1580   001190                     l2655:
  1581                           
  1582                           ; Switch size 1, requested type "simple"
  1583                           ; Number of cases is 2, Range of values is 0 to 1
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte            7     4 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588   001190  500F               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1589   001192  0A00               	xorlw	0	; case 0
  1590   001194  B4D8               	btfsc	status,2,c
  1591   001196  EF9F  F008         	goto	l2099
  1592   00119A  0A01               	xorlw	1	; case 1
  1593   00119C  B4D8               	btfsc	status,2,c
  1594   00119E  EF81  F008         	goto	l2095
  1595   0011A2  EF23  F008         	goto	l2075
  1596   0011A6                     l2109:
  1597                           
  1598                           ;MCAL/DIO/DIO_Prog.c: 245:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1599   0011A6  0E01               	movlw	1
  1600   0011A8  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1601                           
  1602                           ;MCAL/DIO/DIO_Prog.c: 246:                 switch(Copy_PinValue)
  1603   0011AA  EF14  F009         	goto	l2123
  1604   0011AE                     l2111:
  1605                           
  1606                           ;MCAL/DIO/DIO_Prog.c: 249:                         ((*((volatile LATC_t *)0xF8B)).LATC_R
      +                          EGISTER |= (1 << Copy_PinInfo->Pin_Num));
  1607   0011AE  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1608   0011B0  6ED9               	movwf	fsr2l,c
  1609   0011B2  6ADA               	clrf	fsr2h,c
  1610   0011B4  30DF               	rrcf	223,w,c
  1611   0011B6  32E8               	rrcf	wreg,f,c
  1612   0011B8  32E8               	rrcf	wreg,f,c
  1613   0011BA  0B07               	andlw	7
  1614   0011BC  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1615   0011BE  0E01               	movlw	1
  1616   0011C0  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1617   0011C2  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1618   0011C4  EFE6  F008         	goto	u1704
  1619   0011C8                     u1705:
  1620   0011C8  90D8               	bcf	status,0,c
  1621   0011CA  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1622   0011CC                     u1704:
  1623   0011CC  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1624   0011CE  EFE4  F008         	goto	u1705
  1625   0011D2  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1626   0011D4  128B               	iorwf	139,f,c	;volatile
  1627   0011D6                     
  1628                           ;MCAL/DIO/DIO_Prog.c: 250:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1629   0011D6  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1630   0011D8  6ED9               	movwf	fsr2l,c
  1631   0011DA  6ADA               	clrf	fsr2h,c
  1632   0011DC  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1633   0011DE  D002               	bra	u1715
  1634   0011E0  9EDF               	bcf	indf2,7,c
  1635   0011E2  D001               	bra	u1716
  1636   0011E4                     u1715:
  1637   0011E4  8EDF               	bsf	indf2,7,c
  1638   0011E6                     u1716:
  1639                           
  1640                           ;MCAL/DIO/DIO_Prog.c: 251:                         break;
  1641   0011E6  EF12  F00A         	goto	l2167
  1642   0011EA                     l2115:
  1643                           
  1644                           ;MCAL/DIO/DIO_Prog.c: 253:                         ((*((volatile LATC_t *)0xF8B)).LATC_R
      +                          EGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  1645   0011EA  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1646   0011EC  6ED9               	movwf	fsr2l,c
  1647   0011EE  6ADA               	clrf	fsr2h,c
  1648   0011F0  30DF               	rrcf	223,w,c
  1649   0011F2  32E8               	rrcf	wreg,f,c
  1650   0011F4  32E8               	rrcf	wreg,f,c
  1651   0011F6  0B07               	andlw	7
  1652   0011F8  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1653   0011FA  0E01               	movlw	1
  1654   0011FC  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1655   0011FE  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1656   001200  EF04  F009         	goto	u1724
  1657   001204                     u1725:
  1658   001204  90D8               	bcf	status,0,c
  1659   001206  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1660   001208                     u1724:
  1661   001208  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1662   00120A  EF02  F009         	goto	u1725
  1663   00120E  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1664   001210  0AFF               	xorlw	255
  1665   001212  168B               	andwf	139,f,c	;volatile
  1666   001214                     
  1667                           ;MCAL/DIO/DIO_Prog.c: 254:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1668   001214  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1669   001216  6ED9               	movwf	fsr2l,c
  1670   001218  6ADA               	clrf	fsr2h,c
  1671   00121A  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1672   00121C  D002               	bra	u1735
  1673   00121E  9EDF               	bcf	indf2,7,c
  1674   001220  D001               	bra	u1736
  1675   001222                     u1735:
  1676   001222  8EDF               	bsf	indf2,7,c
  1677   001224                     u1736:
  1678                           
  1679                           ;MCAL/DIO/DIO_Prog.c: 255:                         break;
  1680   001224  EF12  F00A         	goto	l2167
  1681   001228                     l2123:
  1682   001228  500E               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1683   00122A  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1684   00122C  6A10               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1685                           
  1686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1687                           ; Switch size 1, requested type "simple"
  1688                           ; Number of cases is 1, Range of values is 0 to 0
  1689                           ; switch strategies available:
  1690                           ; Name         Instructions Cycles
  1691                           ; simple_byte            4     3 (average)
  1692                           ;	Chosen strategy is simple_byte
  1693   00122E  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1694   001230  0A00               	xorlw	0	; case 0
  1695   001232  B4D8               	btfsc	status,2,c
  1696   001234  EF1E  F009         	goto	l2657
  1697   001238  EF23  F008         	goto	l2075
  1698   00123C                     l2657:
  1699                           
  1700                           ; Switch size 1, requested type "simple"
  1701                           ; Number of cases is 2, Range of values is 0 to 1
  1702                           ; switch strategies available:
  1703                           ; Name         Instructions Cycles
  1704                           ; simple_byte            7     4 (average)
  1705                           ;	Chosen strategy is simple_byte
  1706   00123C  500F               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1707   00123E  0A00               	xorlw	0	; case 0
  1708   001240  B4D8               	btfsc	status,2,c
  1709   001242  EFF5  F008         	goto	l2115
  1710   001246  0A01               	xorlw	1	; case 1
  1711   001248  B4D8               	btfsc	status,2,c
  1712   00124A  EFD7  F008         	goto	l2111
  1713   00124E  EF23  F008         	goto	l2075
  1714   001252                     l2125:
  1715                           
  1716                           ;MCAL/DIO/DIO_Prog.c: 262:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1717   001252  0E01               	movlw	1
  1718   001254  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1719                           
  1720                           ;MCAL/DIO/DIO_Prog.c: 263:                 switch(Copy_PinValue)
  1721   001256  EF6A  F009         	goto	l2139
  1722   00125A                     l2127:
  1723                           
  1724                           ;MCAL/DIO/DIO_Prog.c: 266:                         ((*((volatile LATD_t *)0xF8C)).LATD_R
      +                          EGISTER |= (1 << Copy_PinInfo->Pin_Num));
  1725   00125A  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1726   00125C  6ED9               	movwf	fsr2l,c
  1727   00125E  6ADA               	clrf	fsr2h,c
  1728   001260  30DF               	rrcf	223,w,c
  1729   001262  32E8               	rrcf	wreg,f,c
  1730   001264  32E8               	rrcf	wreg,f,c
  1731   001266  0B07               	andlw	7
  1732   001268  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1733   00126A  0E01               	movlw	1
  1734   00126C  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1735   00126E  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1736   001270  EF3C  F009         	goto	u1744
  1737   001274                     u1745:
  1738   001274  90D8               	bcf	status,0,c
  1739   001276  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1740   001278                     u1744:
  1741   001278  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1742   00127A  EF3A  F009         	goto	u1745
  1743   00127E  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1744   001280  128C               	iorwf	140,f,c	;volatile
  1745   001282                     
  1746                           ;MCAL/DIO/DIO_Prog.c: 267:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1747   001282  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1748   001284  6ED9               	movwf	fsr2l,c
  1749   001286  6ADA               	clrf	fsr2h,c
  1750   001288  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1751   00128A  D002               	bra	u1755
  1752   00128C  9EDF               	bcf	indf2,7,c
  1753   00128E  D001               	bra	u1756
  1754   001290                     u1755:
  1755   001290  8EDF               	bsf	indf2,7,c
  1756   001292                     u1756:
  1757                           
  1758                           ;MCAL/DIO/DIO_Prog.c: 268:                         break;
  1759   001292  EF12  F00A         	goto	l2167
  1760   001296                     l2131:
  1761                           
  1762                           ;MCAL/DIO/DIO_Prog.c: 270:                         ((*((volatile LATD_t *)0xF8C)).LATD_R
      +                          EGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  1763   001296  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1764   001298  6ED9               	movwf	fsr2l,c
  1765   00129A  6ADA               	clrf	fsr2h,c
  1766   00129C  30DF               	rrcf	223,w,c
  1767   00129E  32E8               	rrcf	wreg,f,c
  1768   0012A0  32E8               	rrcf	wreg,f,c
  1769   0012A2  0B07               	andlw	7
  1770   0012A4  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1771   0012A6  0E01               	movlw	1
  1772   0012A8  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1773   0012AA  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1774   0012AC  EF5A  F009         	goto	u1764
  1775   0012B0                     u1765:
  1776   0012B0  90D8               	bcf	status,0,c
  1777   0012B2  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1778   0012B4                     u1764:
  1779   0012B4  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1780   0012B6  EF58  F009         	goto	u1765
  1781   0012BA  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1782   0012BC  0AFF               	xorlw	255
  1783   0012BE  168C               	andwf	140,f,c	;volatile
  1784   0012C0                     
  1785                           ;MCAL/DIO/DIO_Prog.c: 271:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1786   0012C0  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1787   0012C2  6ED9               	movwf	fsr2l,c
  1788   0012C4  6ADA               	clrf	fsr2h,c
  1789   0012C6  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1790   0012C8  D002               	bra	u1775
  1791   0012CA  9EDF               	bcf	indf2,7,c
  1792   0012CC  D001               	bra	u1776
  1793   0012CE                     u1775:
  1794   0012CE  8EDF               	bsf	indf2,7,c
  1795   0012D0                     u1776:
  1796                           
  1797                           ;MCAL/DIO/DIO_Prog.c: 272:                         break;
  1798   0012D0  EF12  F00A         	goto	l2167
  1799   0012D4                     l2139:
  1800   0012D4  500E               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1801   0012D6  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1802   0012D8  6A10               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1803                           
  1804                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1805                           ; Switch size 1, requested type "simple"
  1806                           ; Number of cases is 1, Range of values is 0 to 0
  1807                           ; switch strategies available:
  1808                           ; Name         Instructions Cycles
  1809                           ; simple_byte            4     3 (average)
  1810                           ;	Chosen strategy is simple_byte
  1811   0012DA  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1812   0012DC  0A00               	xorlw	0	; case 0
  1813   0012DE  B4D8               	btfsc	status,2,c
  1814   0012E0  EF74  F009         	goto	l2659
  1815   0012E4  EF23  F008         	goto	l2075
  1816   0012E8                     l2659:
  1817                           
  1818                           ; Switch size 1, requested type "simple"
  1819                           ; Number of cases is 2, Range of values is 0 to 1
  1820                           ; switch strategies available:
  1821                           ; Name         Instructions Cycles
  1822                           ; simple_byte            7     4 (average)
  1823                           ;	Chosen strategy is simple_byte
  1824   0012E8  500F               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1825   0012EA  0A00               	xorlw	0	; case 0
  1826   0012EC  B4D8               	btfsc	status,2,c
  1827   0012EE  EF4B  F009         	goto	l2131
  1828   0012F2  0A01               	xorlw	1	; case 1
  1829   0012F4  B4D8               	btfsc	status,2,c
  1830   0012F6  EF2D  F009         	goto	l2127
  1831   0012FA  EF23  F008         	goto	l2075
  1832   0012FE                     l2141:
  1833                           
  1834                           ;MCAL/DIO/DIO_Prog.c: 279:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1835   0012FE  0E01               	movlw	1
  1836   001300  6E13               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1837   001302                     
  1838                           ;MCAL/DIO/DIO_Prog.c: 280:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  1839   001302  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1840   001304  6ED9               	movwf	fsr2l,c
  1841   001306  6ADA               	clrf	fsr2h,c
  1842   001308  30DF               	rrcf	223,w,c
  1843   00130A  32E8               	rrcf	wreg,f,c
  1844   00130C  32E8               	rrcf	wreg,f,c
  1845   00130E  0B07               	andlw	7
  1846   001310  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1847   001312  0E02               	movlw	2
  1848   001314  640F               	cpfsgt	??_MCAL_DIO_SetPinValue^0,c
  1849   001316  EF8F  F009         	goto	u1781
  1850   00131A  EF91  F009         	goto	u1780
  1851   00131E                     u1781:
  1852   00131E  EFE2  F009         	goto	l2159
  1853   001322                     u1780:
  1854   001322  EF23  F008         	goto	l2075
  1855   001326                     l2147:
  1856                           
  1857                           ;MCAL/DIO/DIO_Prog.c: 288:                         ((*((volatile LATE_t *)0xF8D)).LATE_R
      +                          EGISTER |= (1 << Copy_PinInfo->Pin_Num));
  1858   001326  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1859   001328  6ED9               	movwf	fsr2l,c
  1860   00132A  6ADA               	clrf	fsr2h,c
  1861   00132C  30DF               	rrcf	223,w,c
  1862   00132E  32E8               	rrcf	wreg,f,c
  1863   001330  32E8               	rrcf	wreg,f,c
  1864   001332  0B07               	andlw	7
  1865   001334  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1866   001336  0E01               	movlw	1
  1867   001338  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1868   00133A  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1869   00133C  EFA2  F009         	goto	u1794
  1870   001340                     u1795:
  1871   001340  90D8               	bcf	status,0,c
  1872   001342  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1873   001344                     u1794:
  1874   001344  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1875   001346  EFA0  F009         	goto	u1795
  1876   00134A  508D               	movf	141,w,c	;volatile
  1877   00134C  0B07               	andlw	7
  1878   00134E  6E11               	movwf	(??_MCAL_DIO_SetPinValue+2)^0,c
  1879   001350  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1880   001352  1211               	iorwf	(??_MCAL_DIO_SetPinValue+2)^0,f,c
  1881   001354  508D               	movf	141,w,c	;volatile
  1882   001356  1811               	xorwf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  1883   001358  0BF8               	andlw	-8
  1884   00135A  1811               	xorwf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  1885   00135C  6E8D               	movwf	141,c	;volatile
  1886   00135E                     
  1887                           ;MCAL/DIO/DIO_Prog.c: 289:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1888   00135E  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1889   001360  6ED9               	movwf	fsr2l,c
  1890   001362  6ADA               	clrf	fsr2h,c
  1891   001364  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1892   001366  D002               	bra	u1805
  1893   001368  9EDF               	bcf	indf2,7,c
  1894   00136A  D001               	bra	u1806
  1895   00136C                     u1805:
  1896   00136C  8EDF               	bsf	indf2,7,c
  1897   00136E                     u1806:
  1898                           
  1899                           ;MCAL/DIO/DIO_Prog.c: 290:                         break;
  1900   00136E  EF12  F00A         	goto	l2167
  1901   001372                     l2151:
  1902                           
  1903                           ;MCAL/DIO/DIO_Prog.c: 292:                         ((*((volatile LATE_t *)0xF8D)).LATE_R
      +                          EGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  1904   001372  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1905   001374  6ED9               	movwf	fsr2l,c
  1906   001376  6ADA               	clrf	fsr2h,c
  1907   001378  30DF               	rrcf	223,w,c
  1908   00137A  32E8               	rrcf	wreg,f,c
  1909   00137C  32E8               	rrcf	wreg,f,c
  1910   00137E  0B07               	andlw	7
  1911   001380  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1912   001382  0E01               	movlw	1
  1913   001384  6E10               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1914   001386  2A0F               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1915   001388  EFC8  F009         	goto	u1814
  1916   00138C                     u1815:
  1917   00138C  90D8               	bcf	status,0,c
  1918   00138E  3610               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1919   001390                     u1814:
  1920   001390  2E0F               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1921   001392  EFC6  F009         	goto	u1815
  1922   001396  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1923   001398  0AFF               	xorlw	255
  1924   00139A  6E11               	movwf	(??_MCAL_DIO_SetPinValue+2)^0,c
  1925   00139C  508D               	movf	141,w,c	;volatile
  1926   00139E  0B07               	andlw	7
  1927   0013A0  6E12               	movwf	(??_MCAL_DIO_SetPinValue+3)^0,c
  1928   0013A2  5011               	movf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  1929   0013A4  1612               	andwf	(??_MCAL_DIO_SetPinValue+3)^0,f,c
  1930   0013A6  508D               	movf	141,w,c	;volatile
  1931   0013A8  1812               	xorwf	(??_MCAL_DIO_SetPinValue+3)^0,w,c
  1932   0013AA  0BF8               	andlw	-8
  1933   0013AC  1812               	xorwf	(??_MCAL_DIO_SetPinValue+3)^0,w,c
  1934   0013AE  6E8D               	movwf	141,c	;volatile
  1935   0013B0                     
  1936                           ;MCAL/DIO/DIO_Prog.c: 293:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1937   0013B0  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1938   0013B2  6ED9               	movwf	fsr2l,c
  1939   0013B4  6ADA               	clrf	fsr2h,c
  1940   0013B6  B00E               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1941   0013B8  D002               	bra	u1825
  1942   0013BA  9EDF               	bcf	indf2,7,c
  1943   0013BC  D001               	bra	u1826
  1944   0013BE                     u1825:
  1945   0013BE  8EDF               	bsf	indf2,7,c
  1946   0013C0                     u1826:
  1947                           
  1948                           ;MCAL/DIO/DIO_Prog.c: 294:                         break;
  1949   0013C0  EF12  F00A         	goto	l2167
  1950   0013C4                     l2159:
  1951   0013C4  500E               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1952   0013C6  6E0F               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1953   0013C8  6A10               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1954                           
  1955                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1956                           ; Switch size 1, requested type "simple"
  1957                           ; Number of cases is 1, Range of values is 0 to 0
  1958                           ; switch strategies available:
  1959                           ; Name         Instructions Cycles
  1960                           ; simple_byte            4     3 (average)
  1961                           ;	Chosen strategy is simple_byte
  1962   0013CA  5010               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1963   0013CC  0A00               	xorlw	0	; case 0
  1964   0013CE  B4D8               	btfsc	status,2,c
  1965   0013D0  EFEC  F009         	goto	l2661
  1966   0013D4  EF23  F008         	goto	l2075
  1967   0013D8                     l2661:
  1968                           
  1969                           ; Switch size 1, requested type "simple"
  1970                           ; Number of cases is 2, Range of values is 0 to 1
  1971                           ; switch strategies available:
  1972                           ; Name         Instructions Cycles
  1973                           ; simple_byte            7     4 (average)
  1974                           ;	Chosen strategy is simple_byte
  1975   0013D8  500F               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1976   0013DA  0A00               	xorlw	0	; case 0
  1977   0013DC  B4D8               	btfsc	status,2,c
  1978   0013DE  EFB9  F009         	goto	l2151
  1979   0013E2  0A01               	xorlw	1	; case 1
  1980   0013E4  B4D8               	btfsc	status,2,c
  1981   0013E6  EF93  F009         	goto	l2147
  1982   0013EA  EF23  F008         	goto	l2075
  1983   0013EE                     l2165:
  1984   0013EE  500D               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1985   0013F0  6ED9               	movwf	fsr2l,c
  1986   0013F2  6ADA               	clrf	fsr2h,c
  1987   0013F4  50DF               	movf	223,w,c
  1988   0013F6  0B07               	andlw	7
  1989                           
  1990                           ; Switch size 1, requested type "simple"
  1991                           ; Number of cases is 5, Range of values is 0 to 4
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte           16     9 (average)
  1995                           ;	Chosen strategy is simple_byte
  1996   0013F8  0A00               	xorlw	0	; case 0
  1997   0013FA  B4D8               	btfsc	status,2,c
  1998   0013FC  EF27  F008         	goto	l2077
  1999   001400  0A01               	xorlw	1	; case 1
  2000   001402  B4D8               	btfsc	status,2,c
  2001   001404  EF7D  F008         	goto	l2093
  2002   001408  0A03               	xorlw	3	; case 2
  2003   00140A  B4D8               	btfsc	status,2,c
  2004   00140C  EFD3  F008         	goto	l2109
  2005   001410  0A01               	xorlw	1	; case 3
  2006   001412  B4D8               	btfsc	status,2,c
  2007   001414  EF29  F009         	goto	l2125
  2008   001418  0A07               	xorlw	7	; case 4
  2009   00141A  B4D8               	btfsc	status,2,c
  2010   00141C  EF7F  F009         	goto	l2141
  2011   001420  EF23  F008         	goto	l2075
  2012   001424                     l2167:
  2013                           
  2014                           ;MCAL/DIO/DIO_Prog.c: 305:     return Local_ErrorStatus;
  2015   001424  5013               	movf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,w,c
  2016   001426  0012               	return		;funcret
  2017   001428                     __end_of_MCAL_DIO_SetPinValue:
  2018                           	callstack 0
  2019                           
  2020 ;; *************** function _MCAL_DIO_SetPinDirection *****************
  2021 ;; Defined at:
  2022 ;;		line 16 in file "MCAL/DIO/DIO_Prog.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  Copy_PinInfo    1    0[COMRAM] PTR const struct .
  2025 ;;		 -> HAL_Push_Button_BtnConfig@Btn(1), HAL_LED_LEDArrayConfig@LED(1), HAL_LED_LEDConfig@LED(1), 
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;  Local_ErrorS    1    3[COMRAM] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      unsigned char 
  2030 ;; Registers used:
  2031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:        4 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; This function calls:
  2044 ;;		Nothing
  2045 ;; This function is called by:
  2046 ;;		_HAL_LED_LEDConfig
  2047 ;;		_HAL_Push_Button_BtnConfig
  2048 ;;		_HAL_LED_LEDArrayConfig
  2049 ;;		_MCAL_DIO_InitializePinOutput
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text6
  2054   001428                     __ptext6:
  2055                           	callstack 0
  2056   001428                     _MCAL_DIO_SetPinDirection:
  2057                           	callstack 29
  2058   001428                     
  2059                           ;MCAL/DIO/DIO_Prog.c: 19:     if(Copy_PinInfo->Pin_Num > DIO_PIN7)
  2060   001428  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2061   00142A  6ED9               	movwf	fsr2l,c
  2062   00142C  6ADA               	clrf	fsr2h,c
  2063   00142E  30DF               	rrcf	223,w,c
  2064   001430  32E8               	rrcf	wreg,f,c
  2065   001432  32E8               	rrcf	wreg,f,c
  2066   001434  0B07               	andlw	7
  2067   001436  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2068   001438  0E07               	movlw	7
  2069   00143A  640E               	cpfsgt	??_MCAL_DIO_SetPinDirection^0,c
  2070   00143C  EF22  F00A         	goto	u1431
  2071   001440  EF24  F00A         	goto	u1430
  2072   001444                     u1431:
  2073   001444  EF9B  F00B         	goto	l2063
  2074   001448                     u1430:
  2075   001448                     l1993:
  2076                           
  2077                           ;MCAL/DIO/DIO_Prog.c: 20:     {;MCAL/DIO/DIO_Prog.c: 21:         Local_ErrorStatus = (St
      +                          d_ReturnType)0x00;
  2078   001448  0E00               	movlw	0
  2079   00144A  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2080                           
  2081                           ;MCAL/DIO/DIO_Prog.c: 22:     }
  2082   00144C  EFB6  F00B         	goto	l2065
  2083   001450                     l1995:
  2084                           
  2085                           ;MCAL/DIO/DIO_Prog.c: 28:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2086   001450  0E01               	movlw	1
  2087   001452  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2088                           
  2089                           ;MCAL/DIO/DIO_Prog.c: 29:                 switch(Copy_PinInfo->Pin_Direction)
  2090   001454  EF59  F00A         	goto	l2005
  2091   001458                     l1997:
  2092                           
  2093                           ;MCAL/DIO/DIO_Prog.c: 32:                         ((*((volatile TRISA_t *)0xF92)).TRISA_
      +                          REGISTER |= (1 << Copy_PinInfo->Pin_Num));
  2094   001458  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2095   00145A  6ED9               	movwf	fsr2l,c
  2096   00145C  6ADA               	clrf	fsr2h,c
  2097   00145E  30DF               	rrcf	223,w,c
  2098   001460  32E8               	rrcf	wreg,f,c
  2099   001462  32E8               	rrcf	wreg,f,c
  2100   001464  0B07               	andlw	7
  2101   001466  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2102   001468  0E01               	movlw	1
  2103   00146A  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2104   00146C  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2105   00146E  EF3B  F00A         	goto	u1444
  2106   001472                     u1445:
  2107   001472  90D8               	bcf	status,0,c
  2108   001474  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2109   001476                     u1444:
  2110   001476  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2111   001478  EF39  F00A         	goto	u1445
  2112   00147C  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2113   00147E  1292               	iorwf	146,f,c	;volatile
  2114                           
  2115                           ;MCAL/DIO/DIO_Prog.c: 33:                         break;
  2116   001480  EFB6  F00B         	goto	l2065
  2117   001484                     l1999:
  2118                           
  2119                           ;MCAL/DIO/DIO_Prog.c: 35:                         ((*((volatile TRISA_t *)0xF92)).TRISA_
      +                          REGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  2120   001484  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2121   001486  6ED9               	movwf	fsr2l,c
  2122   001488  6ADA               	clrf	fsr2h,c
  2123   00148A  30DF               	rrcf	223,w,c
  2124   00148C  32E8               	rrcf	wreg,f,c
  2125   00148E  32E8               	rrcf	wreg,f,c
  2126   001490  0B07               	andlw	7
  2127   001492  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2128   001494  0E01               	movlw	1
  2129   001496  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2130   001498  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2131   00149A  EF51  F00A         	goto	u1454
  2132   00149E                     u1455:
  2133   00149E  90D8               	bcf	status,0,c
  2134   0014A0  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2135   0014A2                     u1454:
  2136   0014A2  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2137   0014A4  EF4F  F00A         	goto	u1455
  2138   0014A8  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2139   0014AA  0AFF               	xorlw	255
  2140   0014AC  1692               	andwf	146,f,c	;volatile
  2141                           
  2142                           ;MCAL/DIO/DIO_Prog.c: 36:                         break;
  2143   0014AE  EFB6  F00B         	goto	l2065
  2144   0014B2                     l2005:
  2145   0014B2  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2146   0014B4  6ED9               	movwf	fsr2l,c
  2147   0014B6  6ADA               	clrf	fsr2h,c
  2148   0014B8  BCDF               	btfsc	indf2,6,c
  2149   0014BA  EF61  F00A         	goto	u1461
  2150   0014BE  EF64  F00A         	goto	u1460
  2151   0014C2                     u1461:
  2152   0014C2  0E01               	movlw	1
  2153   0014C4  EF65  F00A         	goto	u1466
  2154   0014C8                     u1460:
  2155   0014C8  0E00               	movlw	0
  2156   0014CA                     u1466:
  2157                           
  2158                           ; Switch size 1, requested type "simple"
  2159                           ; Number of cases is 2, Range of values is 0 to 1
  2160                           ; switch strategies available:
  2161                           ; Name         Instructions Cycles
  2162                           ; simple_byte            7     4 (average)
  2163                           ;	Chosen strategy is simple_byte
  2164   0014CA  0A00               	xorlw	0	; case 0
  2165   0014CC  B4D8               	btfsc	status,2,c
  2166   0014CE  EF42  F00A         	goto	l1999
  2167   0014D2  0A01               	xorlw	1	; case 1
  2168   0014D4  B4D8               	btfsc	status,2,c
  2169   0014D6  EF2C  F00A         	goto	l1997
  2170   0014DA  EF24  F00A         	goto	l1993
  2171   0014DE                     l2007:
  2172                           
  2173                           ;MCAL/DIO/DIO_Prog.c: 43:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2174   0014DE  0E01               	movlw	1
  2175   0014E0  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2176                           
  2177                           ;MCAL/DIO/DIO_Prog.c: 44:                 switch(Copy_PinInfo->Pin_Direction)
  2178   0014E2  EFA0  F00A         	goto	l2017
  2179   0014E6                     l2009:
  2180                           
  2181                           ;MCAL/DIO/DIO_Prog.c: 47:                         ((*((volatile TRISB_t *)0xF93)).TRISB_
      +                          REGISTER |= (1 << Copy_PinInfo->Pin_Num));
  2182   0014E6  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2183   0014E8  6ED9               	movwf	fsr2l,c
  2184   0014EA  6ADA               	clrf	fsr2h,c
  2185   0014EC  30DF               	rrcf	223,w,c
  2186   0014EE  32E8               	rrcf	wreg,f,c
  2187   0014F0  32E8               	rrcf	wreg,f,c
  2188   0014F2  0B07               	andlw	7
  2189   0014F4  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2190   0014F6  0E01               	movlw	1
  2191   0014F8  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2192   0014FA  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2193   0014FC  EF82  F00A         	goto	u1474
  2194   001500                     u1475:
  2195   001500  90D8               	bcf	status,0,c
  2196   001502  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2197   001504                     u1474:
  2198   001504  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2199   001506  EF80  F00A         	goto	u1475
  2200   00150A  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2201   00150C  1293               	iorwf	147,f,c	;volatile
  2202                           
  2203                           ;MCAL/DIO/DIO_Prog.c: 48:                         break;
  2204   00150E  EFB6  F00B         	goto	l2065
  2205   001512                     l2011:
  2206                           
  2207                           ;MCAL/DIO/DIO_Prog.c: 50:                         ((*((volatile TRISB_t *)0xF93)).TRISB_
      +                          REGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  2208   001512  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2209   001514  6ED9               	movwf	fsr2l,c
  2210   001516  6ADA               	clrf	fsr2h,c
  2211   001518  30DF               	rrcf	223,w,c
  2212   00151A  32E8               	rrcf	wreg,f,c
  2213   00151C  32E8               	rrcf	wreg,f,c
  2214   00151E  0B07               	andlw	7
  2215   001520  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2216   001522  0E01               	movlw	1
  2217   001524  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2218   001526  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2219   001528  EF98  F00A         	goto	u1484
  2220   00152C                     u1485:
  2221   00152C  90D8               	bcf	status,0,c
  2222   00152E  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2223   001530                     u1484:
  2224   001530  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2225   001532  EF96  F00A         	goto	u1485
  2226   001536  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2227   001538  0AFF               	xorlw	255
  2228   00153A  1693               	andwf	147,f,c	;volatile
  2229                           
  2230                           ;MCAL/DIO/DIO_Prog.c: 51:                         break;
  2231   00153C  EFB6  F00B         	goto	l2065
  2232   001540                     l2017:
  2233   001540  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2234   001542  6ED9               	movwf	fsr2l,c
  2235   001544  6ADA               	clrf	fsr2h,c
  2236   001546  BCDF               	btfsc	indf2,6,c
  2237   001548  EFA8  F00A         	goto	u1491
  2238   00154C  EFAB  F00A         	goto	u1490
  2239   001550                     u1491:
  2240   001550  0E01               	movlw	1
  2241   001552  EFAC  F00A         	goto	u1496
  2242   001556                     u1490:
  2243   001556  0E00               	movlw	0
  2244   001558                     u1496:
  2245                           
  2246                           ; Switch size 1, requested type "simple"
  2247                           ; Number of cases is 2, Range of values is 0 to 1
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            7     4 (average)
  2251                           ;	Chosen strategy is simple_byte
  2252   001558  0A00               	xorlw	0	; case 0
  2253   00155A  B4D8               	btfsc	status,2,c
  2254   00155C  EF89  F00A         	goto	l2011
  2255   001560  0A01               	xorlw	1	; case 1
  2256   001562  B4D8               	btfsc	status,2,c
  2257   001564  EF73  F00A         	goto	l2009
  2258   001568  EF24  F00A         	goto	l1993
  2259   00156C                     l2019:
  2260                           
  2261                           ;MCAL/DIO/DIO_Prog.c: 58:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2262   00156C  0E01               	movlw	1
  2263   00156E  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2264                           
  2265                           ;MCAL/DIO/DIO_Prog.c: 59:                 switch(Copy_PinInfo->Pin_Direction)
  2266   001570  EFE7  F00A         	goto	l2029
  2267   001574                     l2021:
  2268                           
  2269                           ;MCAL/DIO/DIO_Prog.c: 62:                         ((*((volatile TRISC_t *)0xF94)).TRISC_
      +                          REGISTER |= (1 << Copy_PinInfo->Pin_Num));
  2270   001574  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2271   001576  6ED9               	movwf	fsr2l,c
  2272   001578  6ADA               	clrf	fsr2h,c
  2273   00157A  30DF               	rrcf	223,w,c
  2274   00157C  32E8               	rrcf	wreg,f,c
  2275   00157E  32E8               	rrcf	wreg,f,c
  2276   001580  0B07               	andlw	7
  2277   001582  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2278   001584  0E01               	movlw	1
  2279   001586  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2280   001588  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2281   00158A  EFC9  F00A         	goto	u1504
  2282   00158E                     u1505:
  2283   00158E  90D8               	bcf	status,0,c
  2284   001590  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2285   001592                     u1504:
  2286   001592  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2287   001594  EFC7  F00A         	goto	u1505
  2288   001598  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2289   00159A  1294               	iorwf	148,f,c	;volatile
  2290                           
  2291                           ;MCAL/DIO/DIO_Prog.c: 63:                         break;
  2292   00159C  EFB6  F00B         	goto	l2065
  2293   0015A0                     l2023:
  2294                           
  2295                           ;MCAL/DIO/DIO_Prog.c: 65:                         ((*((volatile TRISC_t *)0xF94)).TRISC_
      +                          REGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  2296   0015A0  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2297   0015A2  6ED9               	movwf	fsr2l,c
  2298   0015A4  6ADA               	clrf	fsr2h,c
  2299   0015A6  30DF               	rrcf	223,w,c
  2300   0015A8  32E8               	rrcf	wreg,f,c
  2301   0015AA  32E8               	rrcf	wreg,f,c
  2302   0015AC  0B07               	andlw	7
  2303   0015AE  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2304   0015B0  0E01               	movlw	1
  2305   0015B2  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2306   0015B4  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2307   0015B6  EFDF  F00A         	goto	u1514
  2308   0015BA                     u1515:
  2309   0015BA  90D8               	bcf	status,0,c
  2310   0015BC  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2311   0015BE                     u1514:
  2312   0015BE  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2313   0015C0  EFDD  F00A         	goto	u1515
  2314   0015C4  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2315   0015C6  0AFF               	xorlw	255
  2316   0015C8  1694               	andwf	148,f,c	;volatile
  2317                           
  2318                           ;MCAL/DIO/DIO_Prog.c: 66:                         break;
  2319   0015CA  EFB6  F00B         	goto	l2065
  2320   0015CE                     l2029:
  2321   0015CE  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2322   0015D0  6ED9               	movwf	fsr2l,c
  2323   0015D2  6ADA               	clrf	fsr2h,c
  2324   0015D4  BCDF               	btfsc	indf2,6,c
  2325   0015D6  EFEF  F00A         	goto	u1521
  2326   0015DA  EFF2  F00A         	goto	u1520
  2327   0015DE                     u1521:
  2328   0015DE  0E01               	movlw	1
  2329   0015E0  EFF3  F00A         	goto	u1526
  2330   0015E4                     u1520:
  2331   0015E4  0E00               	movlw	0
  2332   0015E6                     u1526:
  2333                           
  2334                           ; Switch size 1, requested type "simple"
  2335                           ; Number of cases is 2, Range of values is 0 to 1
  2336                           ; switch strategies available:
  2337                           ; Name         Instructions Cycles
  2338                           ; simple_byte            7     4 (average)
  2339                           ;	Chosen strategy is simple_byte
  2340   0015E6  0A00               	xorlw	0	; case 0
  2341   0015E8  B4D8               	btfsc	status,2,c
  2342   0015EA  EFD0  F00A         	goto	l2023
  2343   0015EE  0A01               	xorlw	1	; case 1
  2344   0015F0  B4D8               	btfsc	status,2,c
  2345   0015F2  EFBA  F00A         	goto	l2021
  2346   0015F6  EF24  F00A         	goto	l1993
  2347   0015FA                     l2031:
  2348                           
  2349                           ;MCAL/DIO/DIO_Prog.c: 73:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2350   0015FA  0E01               	movlw	1
  2351   0015FC  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2352                           
  2353                           ;MCAL/DIO/DIO_Prog.c: 74:                 switch(Copy_PinInfo->Pin_Direction)
  2354   0015FE  EF2E  F00B         	goto	l2041
  2355   001602                     l2033:
  2356                           
  2357                           ;MCAL/DIO/DIO_Prog.c: 77:                         ((*((volatile TRISD_t *)0xF95)).TRISD_
      +                          REGISTER |= (1 << Copy_PinInfo->Pin_Num));
  2358   001602  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2359   001604  6ED9               	movwf	fsr2l,c
  2360   001606  6ADA               	clrf	fsr2h,c
  2361   001608  30DF               	rrcf	223,w,c
  2362   00160A  32E8               	rrcf	wreg,f,c
  2363   00160C  32E8               	rrcf	wreg,f,c
  2364   00160E  0B07               	andlw	7
  2365   001610  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2366   001612  0E01               	movlw	1
  2367   001614  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2368   001616  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2369   001618  EF10  F00B         	goto	u1534
  2370   00161C                     u1535:
  2371   00161C  90D8               	bcf	status,0,c
  2372   00161E  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2373   001620                     u1534:
  2374   001620  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2375   001622  EF0E  F00B         	goto	u1535
  2376   001626  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2377   001628  1295               	iorwf	149,f,c	;volatile
  2378                           
  2379                           ;MCAL/DIO/DIO_Prog.c: 78:                         break;
  2380   00162A  EFB6  F00B         	goto	l2065
  2381   00162E                     l2035:
  2382                           
  2383                           ;MCAL/DIO/DIO_Prog.c: 80:                         ((*((volatile TRISD_t *)0xF95)).TRISD_
      +                          REGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  2384   00162E  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2385   001630  6ED9               	movwf	fsr2l,c
  2386   001632  6ADA               	clrf	fsr2h,c
  2387   001634  30DF               	rrcf	223,w,c
  2388   001636  32E8               	rrcf	wreg,f,c
  2389   001638  32E8               	rrcf	wreg,f,c
  2390   00163A  0B07               	andlw	7
  2391   00163C  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2392   00163E  0E01               	movlw	1
  2393   001640  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2394   001642  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2395   001644  EF26  F00B         	goto	u1544
  2396   001648                     u1545:
  2397   001648  90D8               	bcf	status,0,c
  2398   00164A  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2399   00164C                     u1544:
  2400   00164C  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2401   00164E  EF24  F00B         	goto	u1545
  2402   001652  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2403   001654  0AFF               	xorlw	255
  2404   001656  1695               	andwf	149,f,c	;volatile
  2405                           
  2406                           ;MCAL/DIO/DIO_Prog.c: 81:                         break;
  2407   001658  EFB6  F00B         	goto	l2065
  2408   00165C                     l2041:
  2409   00165C  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2410   00165E  6ED9               	movwf	fsr2l,c
  2411   001660  6ADA               	clrf	fsr2h,c
  2412   001662  BCDF               	btfsc	indf2,6,c
  2413   001664  EF36  F00B         	goto	u1551
  2414   001668  EF39  F00B         	goto	u1550
  2415   00166C                     u1551:
  2416   00166C  0E01               	movlw	1
  2417   00166E  EF3A  F00B         	goto	u1556
  2418   001672                     u1550:
  2419   001672  0E00               	movlw	0
  2420   001674                     u1556:
  2421                           
  2422                           ; Switch size 1, requested type "simple"
  2423                           ; Number of cases is 2, Range of values is 0 to 1
  2424                           ; switch strategies available:
  2425                           ; Name         Instructions Cycles
  2426                           ; simple_byte            7     4 (average)
  2427                           ;	Chosen strategy is simple_byte
  2428   001674  0A00               	xorlw	0	; case 0
  2429   001676  B4D8               	btfsc	status,2,c
  2430   001678  EF17  F00B         	goto	l2035
  2431   00167C  0A01               	xorlw	1	; case 1
  2432   00167E  B4D8               	btfsc	status,2,c
  2433   001680  EF01  F00B         	goto	l2033
  2434   001684  EF24  F00A         	goto	l1993
  2435   001688                     l2043:
  2436                           
  2437                           ;MCAL/DIO/DIO_Prog.c: 88:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2438   001688  0E01               	movlw	1
  2439   00168A  6E10               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2440   00168C                     
  2441                           ;MCAL/DIO/DIO_Prog.c: 89:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  2442   00168C  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2443   00168E  6ED9               	movwf	fsr2l,c
  2444   001690  6ADA               	clrf	fsr2h,c
  2445   001692  30DF               	rrcf	223,w,c
  2446   001694  32E8               	rrcf	wreg,f,c
  2447   001696  32E8               	rrcf	wreg,f,c
  2448   001698  0B07               	andlw	7
  2449   00169A  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2450   00169C  0E02               	movlw	2
  2451   00169E  640E               	cpfsgt	??_MCAL_DIO_SetPinDirection^0,c
  2452   0016A0  EF54  F00B         	goto	u1561
  2453   0016A4  EF56  F00B         	goto	u1560
  2454   0016A8                     u1561:
  2455   0016A8  EF85  F00B         	goto	l2057
  2456   0016AC                     u1560:
  2457   0016AC  EF24  F00A         	goto	l1993
  2458   0016B0                     l2049:
  2459                           
  2460                           ;MCAL/DIO/DIO_Prog.c: 97:                         ((*((volatile TRISE_t *)0xF96)).TRISE_
      +                          REGISTER |= (1 << Copy_PinInfo->Pin_Num));
  2461   0016B0  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2462   0016B2  6ED9               	movwf	fsr2l,c
  2463   0016B4  6ADA               	clrf	fsr2h,c
  2464   0016B6  30DF               	rrcf	223,w,c
  2465   0016B8  32E8               	rrcf	wreg,f,c
  2466   0016BA  32E8               	rrcf	wreg,f,c
  2467   0016BC  0B07               	andlw	7
  2468   0016BE  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2469   0016C0  0E01               	movlw	1
  2470   0016C2  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2471   0016C4  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2472   0016C6  EF67  F00B         	goto	u1574
  2473   0016CA                     u1575:
  2474   0016CA  90D8               	bcf	status,0,c
  2475   0016CC  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2476   0016CE                     u1574:
  2477   0016CE  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2478   0016D0  EF65  F00B         	goto	u1575
  2479   0016D4  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2480   0016D6  1296               	iorwf	150,f,c	;volatile
  2481                           
  2482                           ;MCAL/DIO/DIO_Prog.c: 98:                         break;
  2483   0016D8  EFB6  F00B         	goto	l2065
  2484   0016DC                     l2051:
  2485                           
  2486                           ;MCAL/DIO/DIO_Prog.c: 100:                         ((*((volatile TRISE_t *)0xF96)).TRISE
      +                          _REGISTER &= (~(1 << Copy_PinInfo->Pin_Num)));
  2487   0016DC  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2488   0016DE  6ED9               	movwf	fsr2l,c
  2489   0016E0  6ADA               	clrf	fsr2h,c
  2490   0016E2  30DF               	rrcf	223,w,c
  2491   0016E4  32E8               	rrcf	wreg,f,c
  2492   0016E6  32E8               	rrcf	wreg,f,c
  2493   0016E8  0B07               	andlw	7
  2494   0016EA  6E0E               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2495   0016EC  0E01               	movlw	1
  2496   0016EE  6E0F               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2497   0016F0  2A0E               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2498   0016F2  EF7D  F00B         	goto	u1584
  2499   0016F6                     u1585:
  2500   0016F6  90D8               	bcf	status,0,c
  2501   0016F8  360F               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2502   0016FA                     u1584:
  2503   0016FA  2E0E               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2504   0016FC  EF7B  F00B         	goto	u1585
  2505   001700  500F               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2506   001702  0AFF               	xorlw	255
  2507   001704  1696               	andwf	150,f,c	;volatile
  2508                           
  2509                           ;MCAL/DIO/DIO_Prog.c: 101:                         break;
  2510   001706  EFB6  F00B         	goto	l2065
  2511   00170A                     l2057:
  2512   00170A  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2513   00170C  6ED9               	movwf	fsr2l,c
  2514   00170E  6ADA               	clrf	fsr2h,c
  2515   001710  BCDF               	btfsc	indf2,6,c
  2516   001712  EF8D  F00B         	goto	u1591
  2517   001716  EF90  F00B         	goto	u1590
  2518   00171A                     u1591:
  2519   00171A  0E01               	movlw	1
  2520   00171C  EF91  F00B         	goto	u1596
  2521   001720                     u1590:
  2522   001720  0E00               	movlw	0
  2523   001722                     u1596:
  2524                           
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 2, Range of values is 0 to 1
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            7     4 (average)
  2530                           ;	Chosen strategy is simple_byte
  2531   001722  0A00               	xorlw	0	; case 0
  2532   001724  B4D8               	btfsc	status,2,c
  2533   001726  EF6E  F00B         	goto	l2051
  2534   00172A  0A01               	xorlw	1	; case 1
  2535   00172C  B4D8               	btfsc	status,2,c
  2536   00172E  EF58  F00B         	goto	l2049
  2537   001732  EF24  F00A         	goto	l1993
  2538   001736                     l2063:
  2539   001736  500D               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2540   001738  6ED9               	movwf	fsr2l,c
  2541   00173A  6ADA               	clrf	fsr2h,c
  2542   00173C  50DF               	movf	223,w,c
  2543   00173E  0B07               	andlw	7
  2544                           
  2545                           ; Switch size 1, requested type "simple"
  2546                           ; Number of cases is 5, Range of values is 0 to 4
  2547                           ; switch strategies available:
  2548                           ; Name         Instructions Cycles
  2549                           ; simple_byte           16     9 (average)
  2550                           ;	Chosen strategy is simple_byte
  2551   001740  0A00               	xorlw	0	; case 0
  2552   001742  B4D8               	btfsc	status,2,c
  2553   001744  EF28  F00A         	goto	l1995
  2554   001748  0A01               	xorlw	1	; case 1
  2555   00174A  B4D8               	btfsc	status,2,c
  2556   00174C  EF6F  F00A         	goto	l2007
  2557   001750  0A03               	xorlw	3	; case 2
  2558   001752  B4D8               	btfsc	status,2,c
  2559   001754  EFB6  F00A         	goto	l2019
  2560   001758  0A01               	xorlw	1	; case 3
  2561   00175A  B4D8               	btfsc	status,2,c
  2562   00175C  EFFD  F00A         	goto	l2031
  2563   001760  0A07               	xorlw	7	; case 4
  2564   001762  B4D8               	btfsc	status,2,c
  2565   001764  EF44  F00B         	goto	l2043
  2566   001768  EF24  F00A         	goto	l1993
  2567   00176C                     l2065:
  2568                           
  2569                           ;MCAL/DIO/DIO_Prog.c: 112:     return Local_ErrorStatus;
  2570   00176C  5010               	movf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,w,c
  2571   00176E  0012               	return		;funcret
  2572   001770                     __end_of_MCAL_DIO_SetPinDirection:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function _HAL_LED_LEDBlink *****************
  2576 ;; Defined at:
  2577 ;;		line 106 in file "HAL/LED/LED_Prog.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  Copy_LED        1    5[COMRAM] PTR struct .
  2580 ;;		 -> led1(1), 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  LED             1    9[COMRAM] struct .
  2583 ;;  Local_Blinki    1    8[COMRAM] unsigned char 
  2584 ;;  Local_ErrorS    1    0        unsigned char 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      unsigned char 
  2587 ;; Registers used:
  2588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2594 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;Total ram usage:        5 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 1
  2601 ;; This function calls:
  2602 ;;		_MCAL_DIO_TogglePinValue
  2603 ;; This function is called by:
  2604 ;;		_main
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text7
  2609   001F14                     __ptext7:
  2610                           	callstack 0
  2611   001F14                     _HAL_LED_LEDBlink:
  2612                           	callstack 29
  2613   001F14                     
  2614                           ;HAL/LED/LED_Prog.c: 109:     uint8 Local_BlinkingTimes = 1;
  2615   001F14  0E01               	movlw	1
  2616   001F16  6E15               	movwf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,c
  2617   001F18                     
  2618                           ;HAL/LED/LED_Prog.c: 110:     Pin_Conig_t LED = {
  2619   001F18  C007  F016         	movff	HAL_LED_LEDBlink@F2847,HAL_LED_LEDBlink@LED
  2620   001F1C  5012               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2621   001F1E  6ED9               	movwf	fsr2l,c
  2622   001F20  6ADA               	clrf	fsr2h,c
  2623   001F22  50DF               	movf	223,w,c
  2624   001F24  0B07               	andlw	7
  2625   001F26  6E13               	movwf	??_HAL_LED_LEDBlink^0,c
  2626   001F28  5016               	movf	HAL_LED_LEDBlink@LED^0,w,c
  2627   001F2A  1813               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2628   001F2C  0BF8               	andlw	-8
  2629   001F2E  1813               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2630   001F30  6E16               	movwf	HAL_LED_LEDBlink@LED^0,c
  2631   001F32  5012               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2632   001F34  6ED9               	movwf	fsr2l,c
  2633   001F36  6ADA               	clrf	fsr2h,c
  2634   001F38  30DF               	rrcf	223,w,c
  2635   001F3A  32E8               	rrcf	wreg,f,c
  2636   001F3C  32E8               	rrcf	wreg,f,c
  2637   001F3E  0B07               	andlw	7
  2638   001F40  6E13               	movwf	??_HAL_LED_LEDBlink^0,c
  2639   001F42  4613               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2640   001F44  4613               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2641   001F46  4613               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2642   001F48  5016               	movf	HAL_LED_LEDBlink@LED^0,w,c
  2643   001F4A  1813               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2644   001F4C  0BC7               	andlw	-57
  2645   001F4E  1813               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2646   001F50  6E16               	movwf	HAL_LED_LEDBlink@LED^0,c
  2647   001F52  9C16               	bcf	HAL_LED_LEDBlink@LED^0,6,c
  2648   001F54  5012               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2649   001F56  6ED9               	movwf	fsr2l,c
  2650   001F58  6ADA               	clrf	fsr2h,c
  2651   001F5A  ACDF               	btfss	indf2,6,c
  2652   001F5C  D002               	bra	u2315
  2653   001F5E  8E16               	bsf	HAL_LED_LEDBlink@LED^0,7,c
  2654   001F60  D001               	bra	u2317
  2655   001F62                     u2315:
  2656   001F62  9E16               	bcf	HAL_LED_LEDBlink@LED^0,7,c
  2657   001F64                     u2317:
  2658   001F64                     l2427:
  2659                           
  2660                           ;HAL/LED/LED_Prog.c: 117:     {;HAL/LED/LED_Prog.c: 118:        if(!MCAL_DIO_TogglePinVa
      +                          lue(&LED))
  2661   001F64  0E16               	movlw	low HAL_LED_LEDBlink@LED
  2662   001F66  6E0D               	movwf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,c
  2663   001F68  ECB8  F00B         	call	_MCAL_DIO_TogglePinValue	;wreg free
  2664   001F6C  0900               	iorlw	0
  2665   001F6E  A4D8               	btfss	status,2,c
  2666   001F70  EFBC  F00F         	goto	u2321
  2667   001F74  EFBE  F00F         	goto	u2320
  2668   001F78                     u2321:
  2669   001F78  EFC0  F00F         	goto	l2431
  2670   001F7C                     u2320:
  2671   001F7C                     
  2672                           ;HAL/LED/LED_Prog.c: 121:        }
  2673   001F7C  EFC6  F00F         	goto	l2435
  2674   001F80                     l2431:
  2675                           
  2676                           ;HAL/LED/LED_Prog.c: 123:        {;HAL/LED/LED_Prog.c: 124:            Copy_LED->LED_Sta
      +                          tus = LED.Pin_Value;
  2677   001F80  5012               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2678   001F82  6ED9               	movwf	fsr2l,c
  2679   001F84  6ADA               	clrf	fsr2h,c
  2680   001F86  8CDF               	bsf	indf2,6,c
  2681   001F88  AE16               	btfss	HAL_LED_LEDBlink@LED^0,7,c
  2682   001F8A  9CDF               	bcf	indf2,6,c
  2683   001F8C                     l2435:
  2684                           
  2685                           ;HAL/LED/LED_Prog.c: 127:         _delay((unsigned long)((250)*(16000000/4000.0)));
  2686   001F8C  0E06               	movlw	6
  2687   001F8E  6E14               	movwf	(??_HAL_LED_LEDBlink+1)^0,c
  2688   001F90  0E13               	movlw	19
  2689   001F92  6E13               	movwf	??_HAL_LED_LEDBlink^0,c
  2690   001F94  0EAE               	movlw	174
  2691   001F96                     u2657:
  2692   001F96  2EE8               	decfsz	wreg,f,c
  2693   001F98  D7FE               	bra	u2657
  2694   001F9A  2E13               	decfsz	??_HAL_LED_LEDBlink^0,f,c
  2695   001F9C  D7FC               	bra	u2657
  2696   001F9E  2E14               	decfsz	(??_HAL_LED_LEDBlink+1)^0,f,c
  2697   001FA0  D7FA               	bra	u2657
  2698   001FA2                     
  2699                           ;HAL/LED/LED_Prog.c: 128:         MCAL_DIO_TogglePinValue(&LED);
  2700   001FA2  0E16               	movlw	low HAL_LED_LEDBlink@LED
  2701   001FA4  6E0D               	movwf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,c
  2702   001FA6  ECB8  F00B         	call	_MCAL_DIO_TogglePinValue	;wreg free
  2703   001FAA                     
  2704                           ;HAL/LED/LED_Prog.c: 129:     }
  2705   001FAA  0615               	decf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,f,c
  2706   001FAC  5015               	movf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,w,c
  2707   001FAE  A4D8               	btfss	status,2,c
  2708   001FB0  EFDC  F00F         	goto	u2331
  2709   001FB4  EFDE  F00F         	goto	u2330
  2710   001FB8                     u2331:
  2711   001FB8  EFB2  F00F         	goto	l2427
  2712   001FBC                     u2330:
  2713   001FBC  0012               	return		;funcret
  2714   001FBE                     __end_of_HAL_LED_LEDBlink:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _MCAL_DIO_TogglePinValue *****************
  2718 ;; Defined at:
  2719 ;;		line 391 in file "MCAL/DIO/DIO_Prog.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;  Copy_PinInfo    1    0[COMRAM] PTR struct .
  2722 ;;		 -> HAL_LED_LEDBlink@LED(1), HAL_LED_LEDToggle@LED(1), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;  Local_ErrorS    1    4[COMRAM] unsigned char 
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      unsigned char 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        5 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_HAL_LED_LEDBlink
  2744 ;;		_HAL_LED_LEDToggle
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text8
  2749   001770                     __ptext8:
  2750                           	callstack 0
  2751   001770                     _MCAL_DIO_TogglePinValue:
  2752                           	callstack 29
  2753   001770                     
  2754                           ;MCAL/DIO/DIO_Prog.c: 394:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_INPUT)
  2755   001770  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2756   001772  6ED9               	movwf	fsr2l,c
  2757   001774  6ADA               	clrf	fsr2h,c
  2758   001776  30DF               	rrcf	223,w,c
  2759   001778  32E8               	rrcf	wreg,f,c
  2760   00177A  32E8               	rrcf	wreg,f,c
  2761   00177C  0B07               	andlw	7
  2762   00177E  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2763   001780  0E08               	movlw	8
  2764   001782  600E               	cpfslt	??_MCAL_DIO_TogglePinValue^0,c
  2765   001784  EFC6  F00B         	goto	u1831
  2766   001788  EFC8  F00B         	goto	u1830
  2767   00178C                     u1831:
  2768   00178C  EFD2  F00B         	goto	l2197
  2769   001790                     u1830:
  2770   001790  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2771   001792  6ED9               	movwf	fsr2l,c
  2772   001794  6ADA               	clrf	fsr2h,c
  2773   001796  ACDF               	btfss	indf2,6,c
  2774   001798  EFD0  F00B         	goto	u1841
  2775   00179C  EFD2  F00B         	goto	u1840
  2776   0017A0                     u1841:
  2777   0017A0  EFD8  F00C         	goto	l2227
  2778   0017A4                     u1840:
  2779   0017A4                     l2197:
  2780                           
  2781                           ;MCAL/DIO/DIO_Prog.c: 395:     {;MCAL/DIO/DIO_Prog.c: 396:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
  2782   0017A4  0E00               	movlw	0
  2783   0017A6  6E11               	movwf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,c
  2784                           
  2785                           ;MCAL/DIO/DIO_Prog.c: 397:     }
  2786   0017A8  EFF3  F00C         	goto	l2229
  2787   0017AC                     l2199:
  2788                           
  2789                           ;MCAL/DIO/DIO_Prog.c: 403:                 ((*((volatile LATA_t *)0xF89)).LATA_REGISTER 
      +                          ^= (1 << Copy_PinInfo->Pin_Num));
  2790   0017AC  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2791   0017AE  6ED9               	movwf	fsr2l,c
  2792   0017B0  6ADA               	clrf	fsr2h,c
  2793   0017B2  30DF               	rrcf	223,w,c
  2794   0017B4  32E8               	rrcf	wreg,f,c
  2795   0017B6  32E8               	rrcf	wreg,f,c
  2796   0017B8  0B07               	andlw	7
  2797   0017BA  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2798   0017BC  0E01               	movlw	1
  2799   0017BE  6E0F               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2800   0017C0  2A0E               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2801   0017C2  EFE5  F00B         	goto	u1854
  2802   0017C6                     u1855:
  2803   0017C6  90D8               	bcf	status,0,c
  2804   0017C8  360F               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2805   0017CA                     u1854:
  2806   0017CA  2E0E               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2807   0017CC  EFE3  F00B         	goto	u1855
  2808   0017D0  500F               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2809   0017D2  1A89               	xorwf	137,f,c	;volatile
  2810                           
  2811                           ;MCAL/DIO/DIO_Prog.c: 404:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2812   0017D4  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2813   0017D6  6ED9               	movwf	fsr2l,c
  2814   0017D8  6ADA               	clrf	fsr2h,c
  2815   0017DA  BEDF               	btfsc	indf2,7,c
  2816   0017DC  EFF2  F00B         	goto	u1861
  2817   0017E0  EFF5  F00B         	goto	u1860
  2818   0017E4                     u1861:
  2819   0017E4  0E01               	movlw	1
  2820   0017E6  EFF6  F00B         	goto	u1866
  2821   0017EA                     u1860:
  2822   0017EA  0E00               	movlw	0
  2823   0017EC                     u1866:
  2824   0017EC  0AFF               	xorlw	255
  2825   0017EE  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2826   0017F0  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2827   0017F2  6ED9               	movwf	fsr2l,c
  2828   0017F4  6ADA               	clrf	fsr2h,c
  2829   0017F6  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2830   0017F8  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2831   0017FA  50DF               	movf	223,w,c
  2832   0017FC  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2833   0017FE  0B7F               	andlw	-129
  2834   001800  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2835   001802  6EDF               	movwf	223,c
  2836   001804                     l2201:
  2837                           
  2838                           ;MCAL/DIO/DIO_Prog.c: 405:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2839   001804  0E01               	movlw	1
  2840   001806  6E11               	movwf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,c
  2841                           
  2842                           ;MCAL/DIO/DIO_Prog.c: 406:                 break;
  2843   001808  EFF3  F00C         	goto	l2229
  2844   00180C                     l2203:
  2845                           
  2846                           ;MCAL/DIO/DIO_Prog.c: 408:                 ((*((volatile LATB_t *)0xF8A)).LATB_REGISTER 
      +                          ^= (1 << Copy_PinInfo->Pin_Num));
  2847   00180C  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2848   00180E  6ED9               	movwf	fsr2l,c
  2849   001810  6ADA               	clrf	fsr2h,c
  2850   001812  30DF               	rrcf	223,w,c
  2851   001814  32E8               	rrcf	wreg,f,c
  2852   001816  32E8               	rrcf	wreg,f,c
  2853   001818  0B07               	andlw	7
  2854   00181A  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2855   00181C  0E01               	movlw	1
  2856   00181E  6E0F               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2857   001820  2A0E               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2858   001822  EF15  F00C         	goto	u1874
  2859   001826                     u1875:
  2860   001826  90D8               	bcf	status,0,c
  2861   001828  360F               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2862   00182A                     u1874:
  2863   00182A  2E0E               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2864   00182C  EF13  F00C         	goto	u1875
  2865   001830  500F               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2866   001832  1A8A               	xorwf	138,f,c	;volatile
  2867                           
  2868                           ;MCAL/DIO/DIO_Prog.c: 409:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2869   001834  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2870   001836  6ED9               	movwf	fsr2l,c
  2871   001838  6ADA               	clrf	fsr2h,c
  2872   00183A  BEDF               	btfsc	indf2,7,c
  2873   00183C  EF22  F00C         	goto	u1881
  2874   001840  EF25  F00C         	goto	u1880
  2875   001844                     u1881:
  2876   001844  0E01               	movlw	1
  2877   001846  EF26  F00C         	goto	u1886
  2878   00184A                     u1880:
  2879   00184A  0E00               	movlw	0
  2880   00184C                     u1886:
  2881   00184C  0AFF               	xorlw	255
  2882   00184E  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2883   001850  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2884   001852  6ED9               	movwf	fsr2l,c
  2885   001854  6ADA               	clrf	fsr2h,c
  2886   001856  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2887   001858  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2888   00185A  50DF               	movf	223,w,c
  2889   00185C  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2890   00185E  0B7F               	andlw	-129
  2891   001860  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2892   001862  6EDF               	movwf	223,c
  2893   001864  EF02  F00C         	goto	l2201
  2894   001868                     l2207:
  2895                           
  2896                           ;MCAL/DIO/DIO_Prog.c: 413:                 ((*((volatile LATC_t *)0xF8B)).LATC_REGISTER 
      +                          ^= (1 << Copy_PinInfo->Pin_Num));
  2897   001868  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2898   00186A  6ED9               	movwf	fsr2l,c
  2899   00186C  6ADA               	clrf	fsr2h,c
  2900   00186E  30DF               	rrcf	223,w,c
  2901   001870  32E8               	rrcf	wreg,f,c
  2902   001872  32E8               	rrcf	wreg,f,c
  2903   001874  0B07               	andlw	7
  2904   001876  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2905   001878  0E01               	movlw	1
  2906   00187A  6E0F               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2907   00187C  2A0E               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2908   00187E  EF43  F00C         	goto	u1894
  2909   001882                     u1895:
  2910   001882  90D8               	bcf	status,0,c
  2911   001884  360F               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2912   001886                     u1894:
  2913   001886  2E0E               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2914   001888  EF41  F00C         	goto	u1895
  2915   00188C  500F               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2916   00188E  1A8B               	xorwf	139,f,c	;volatile
  2917                           
  2918                           ;MCAL/DIO/DIO_Prog.c: 414:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2919   001890  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2920   001892  6ED9               	movwf	fsr2l,c
  2921   001894  6ADA               	clrf	fsr2h,c
  2922   001896  BEDF               	btfsc	indf2,7,c
  2923   001898  EF50  F00C         	goto	u1901
  2924   00189C  EF53  F00C         	goto	u1900
  2925   0018A0                     u1901:
  2926   0018A0  0E01               	movlw	1
  2927   0018A2  EF54  F00C         	goto	u1906
  2928   0018A6                     u1900:
  2929   0018A6  0E00               	movlw	0
  2930   0018A8                     u1906:
  2931   0018A8  0AFF               	xorlw	255
  2932   0018AA  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2933   0018AC  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2934   0018AE  6ED9               	movwf	fsr2l,c
  2935   0018B0  6ADA               	clrf	fsr2h,c
  2936   0018B2  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2937   0018B4  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2938   0018B6  50DF               	movf	223,w,c
  2939   0018B8  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2940   0018BA  0B7F               	andlw	-129
  2941   0018BC  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2942   0018BE  6EDF               	movwf	223,c
  2943   0018C0  EF02  F00C         	goto	l2201
  2944   0018C4                     l2211:
  2945                           
  2946                           ;MCAL/DIO/DIO_Prog.c: 418:                 ((*((volatile LATD_t *)0xF8C)).LATD_REGISTER 
      +                          ^= (1 << Copy_PinInfo->Pin_Num));
  2947   0018C4  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2948   0018C6  6ED9               	movwf	fsr2l,c
  2949   0018C8  6ADA               	clrf	fsr2h,c
  2950   0018CA  30DF               	rrcf	223,w,c
  2951   0018CC  32E8               	rrcf	wreg,f,c
  2952   0018CE  32E8               	rrcf	wreg,f,c
  2953   0018D0  0B07               	andlw	7
  2954   0018D2  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2955   0018D4  0E01               	movlw	1
  2956   0018D6  6E0F               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2957   0018D8  2A0E               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2958   0018DA  EF71  F00C         	goto	u1914
  2959   0018DE                     u1915:
  2960   0018DE  90D8               	bcf	status,0,c
  2961   0018E0  360F               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2962   0018E2                     u1914:
  2963   0018E2  2E0E               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2964   0018E4  EF6F  F00C         	goto	u1915
  2965   0018E8  500F               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2966   0018EA  1A8C               	xorwf	140,f,c	;volatile
  2967                           
  2968                           ;MCAL/DIO/DIO_Prog.c: 419:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2969   0018EC  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2970   0018EE  6ED9               	movwf	fsr2l,c
  2971   0018F0  6ADA               	clrf	fsr2h,c
  2972   0018F2  BEDF               	btfsc	indf2,7,c
  2973   0018F4  EF7E  F00C         	goto	u1921
  2974   0018F8  EF81  F00C         	goto	u1920
  2975   0018FC                     u1921:
  2976   0018FC  0E01               	movlw	1
  2977   0018FE  EF82  F00C         	goto	u1926
  2978   001902                     u1920:
  2979   001902  0E00               	movlw	0
  2980   001904                     u1926:
  2981   001904  0AFF               	xorlw	255
  2982   001906  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2983   001908  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2984   00190A  6ED9               	movwf	fsr2l,c
  2985   00190C  6ADA               	clrf	fsr2h,c
  2986   00190E  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2987   001910  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2988   001912  50DF               	movf	223,w,c
  2989   001914  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2990   001916  0B7F               	andlw	-129
  2991   001918  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2992   00191A  6EDF               	movwf	223,c
  2993   00191C  EF02  F00C         	goto	l2201
  2994   001920                     l2215:
  2995                           
  2996                           ;MCAL/DIO/DIO_Prog.c: 423:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  2997   001920  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2998   001922  6ED9               	movwf	fsr2l,c
  2999   001924  6ADA               	clrf	fsr2h,c
  3000   001926  30DF               	rrcf	223,w,c
  3001   001928  32E8               	rrcf	wreg,f,c
  3002   00192A  32E8               	rrcf	wreg,f,c
  3003   00192C  0B07               	andlw	7
  3004   00192E  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3005   001930  0E02               	movlw	2
  3006   001932  640E               	cpfsgt	??_MCAL_DIO_TogglePinValue^0,c
  3007   001934  EF9E  F00C         	goto	u1931
  3008   001938  EFA0  F00C         	goto	u1930
  3009   00193C                     u1931:
  3010   00193C  EFA2  F00C         	goto	l2219
  3011   001940                     u1930:
  3012   001940  EFD2  F00B         	goto	l2197
  3013   001944                     l2219:
  3014                           
  3015                           ;MCAL/DIO/DIO_Prog.c: 428:                 ((*((volatile LATE_t *)0xF8D)).LATE_REGISTER 
      +                          ^= (1 << Copy_PinInfo->Pin_Num));
  3016   001944  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3017   001946  6ED9               	movwf	fsr2l,c
  3018   001948  6ADA               	clrf	fsr2h,c
  3019   00194A  30DF               	rrcf	223,w,c
  3020   00194C  32E8               	rrcf	wreg,f,c
  3021   00194E  32E8               	rrcf	wreg,f,c
  3022   001950  0B07               	andlw	7
  3023   001952  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3024   001954  0E01               	movlw	1
  3025   001956  6E0F               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  3026   001958  2A0E               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  3027   00195A  EFB1  F00C         	goto	u1944
  3028   00195E                     u1945:
  3029   00195E  90D8               	bcf	status,0,c
  3030   001960  360F               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  3031   001962                     u1944:
  3032   001962  2E0E               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  3033   001964  EFAF  F00C         	goto	u1945
  3034   001968  508D               	movf	141,w,c	;volatile
  3035   00196A  0B07               	andlw	7
  3036   00196C  6E10               	movwf	(??_MCAL_DIO_TogglePinValue+2)^0,c
  3037   00196E  500F               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  3038   001970  1A10               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,f,c
  3039   001972  508D               	movf	141,w,c	;volatile
  3040   001974  1810               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,w,c
  3041   001976  0BF8               	andlw	-8
  3042   001978  1810               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,w,c
  3043   00197A  6E8D               	movwf	141,c	;volatile
  3044                           
  3045                           ;MCAL/DIO/DIO_Prog.c: 429:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  3046   00197C  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3047   00197E  6ED9               	movwf	fsr2l,c
  3048   001980  6ADA               	clrf	fsr2h,c
  3049   001982  BEDF               	btfsc	indf2,7,c
  3050   001984  EFC6  F00C         	goto	u1951
  3051   001988  EFC9  F00C         	goto	u1950
  3052   00198C                     u1951:
  3053   00198C  0E01               	movlw	1
  3054   00198E  EFCA  F00C         	goto	u1956
  3055   001992                     u1950:
  3056   001992  0E00               	movlw	0
  3057   001994                     u1956:
  3058   001994  0AFF               	xorlw	255
  3059   001996  6E0E               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3060   001998  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3061   00199A  6ED9               	movwf	fsr2l,c
  3062   00199C  6ADA               	clrf	fsr2h,c
  3063   00199E  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3064   0019A0  320E               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3065   0019A2  50DF               	movf	223,w,c
  3066   0019A4  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3067   0019A6  0B7F               	andlw	-129
  3068   0019A8  180E               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3069   0019AA  6EDF               	movwf	223,c
  3070   0019AC  EF02  F00C         	goto	l2201
  3071   0019B0                     l2227:
  3072   0019B0  500D               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3073   0019B2  6ED9               	movwf	fsr2l,c
  3074   0019B4  6ADA               	clrf	fsr2h,c
  3075   0019B6  50DF               	movf	223,w,c
  3076   0019B8  0B07               	andlw	7
  3077                           
  3078                           ; Switch size 1, requested type "simple"
  3079                           ; Number of cases is 5, Range of values is 0 to 4
  3080                           ; switch strategies available:
  3081                           ; Name         Instructions Cycles
  3082                           ; simple_byte           16     9 (average)
  3083                           ;	Chosen strategy is simple_byte
  3084   0019BA  0A00               	xorlw	0	; case 0
  3085   0019BC  B4D8               	btfsc	status,2,c
  3086   0019BE  EFD6  F00B         	goto	l2199
  3087   0019C2  0A01               	xorlw	1	; case 1
  3088   0019C4  B4D8               	btfsc	status,2,c
  3089   0019C6  EF06  F00C         	goto	l2203
  3090   0019CA  0A03               	xorlw	3	; case 2
  3091   0019CC  B4D8               	btfsc	status,2,c
  3092   0019CE  EF34  F00C         	goto	l2207
  3093   0019D2  0A01               	xorlw	1	; case 3
  3094   0019D4  B4D8               	btfsc	status,2,c
  3095   0019D6  EF62  F00C         	goto	l2211
  3096   0019DA  0A07               	xorlw	7	; case 4
  3097   0019DC  B4D8               	btfsc	status,2,c
  3098   0019DE  EF90  F00C         	goto	l2215
  3099   0019E2  EFD2  F00B         	goto	l2197
  3100   0019E6                     l2229:
  3101                           
  3102                           ;MCAL/DIO/DIO_Prog.c: 437:     return Local_ErrorStatus;
  3103   0019E6  5011               	movf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,w,c
  3104   0019E8  0012               	return		;funcret
  3105   0019EA                     __end_of_MCAL_DIO_TogglePinValue:
  3106                           	callstack 0
  3107                           
  3108                           	psect	rparam
  3109   000000                     
  3110                           	psect	idloc
  3111                           
  3112                           ;Config register IDLOC0 @ 0x200000
  3113                           ;	unspecified, using default values
  3114   200000                     	org	2097152
  3115   200000  FF                 	db	255
  3116                           
  3117                           ;Config register IDLOC1 @ 0x200001
  3118                           ;	unspecified, using default values
  3119   200001                     	org	2097153
  3120   200001  FF                 	db	255
  3121                           
  3122                           ;Config register IDLOC2 @ 0x200002
  3123                           ;	unspecified, using default values
  3124   200002                     	org	2097154
  3125   200002  FF                 	db	255
  3126                           
  3127                           ;Config register IDLOC3 @ 0x200003
  3128                           ;	unspecified, using default values
  3129   200003                     	org	2097155
  3130   200003  FF                 	db	255
  3131                           
  3132                           ;Config register IDLOC4 @ 0x200004
  3133                           ;	unspecified, using default values
  3134   200004                     	org	2097156
  3135   200004  FF                 	db	255
  3136                           
  3137                           ;Config register IDLOC5 @ 0x200005
  3138                           ;	unspecified, using default values
  3139   200005                     	org	2097157
  3140   200005  FF                 	db	255
  3141                           
  3142                           ;Config register IDLOC6 @ 0x200006
  3143                           ;	unspecified, using default values
  3144   200006                     	org	2097158
  3145   200006  FF                 	db	255
  3146                           
  3147                           ;Config register IDLOC7 @ 0x200007
  3148                           ;	unspecified, using default values
  3149   200007                     	org	2097159
  3150   200007  FF                 	db	255
  3151                           
  3152                           	psect	config
  3153                           
  3154                           ; Padding undefined space
  3155   300000                     	org	3145728
  3156   300000  FF                 	db	255
  3157                           
  3158                           ;Config register CONFIG1H @ 0x300001
  3159                           ;	Oscillator Selection bits
  3160                           ;	FOSC = HS, HS oscillator
  3161                           ;	Fail-Safe Clock Monitor Enable bit
  3162                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3163                           ;	Internal/External Oscillator Switchover bit
  3164                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3165   300001                     	org	3145729
  3166   300001  02                 	db	2
  3167                           
  3168                           ;Config register CONFIG2L @ 0x300002
  3169                           ;	Power-up Timer Enable bit
  3170                           ;	PWRT = OFF, PWRT disabled
  3171                           ;	Brown-out Reset Enable bits
  3172                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3173                           ;	Brown Out Reset Voltage bits
  3174                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3175   300002                     	org	3145730
  3176   300002  19                 	db	25
  3177                           
  3178                           ;Config register CONFIG2H @ 0x300003
  3179                           ;	Watchdog Timer Enable bit
  3180                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3181                           ;	Watchdog Timer Postscale Select bits
  3182                           ;	WDTPS = 32768, 1:32768
  3183   300003                     	org	3145731
  3184   300003  1E                 	db	30
  3185                           
  3186                           ; Padding undefined space
  3187   300004                     	org	3145732
  3188   300004  FF                 	db	255
  3189                           
  3190                           ;Config register CONFIG3H @ 0x300005
  3191                           ;	CCP2 MUX bit
  3192                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3193                           ;	PORTB A/D Enable bit
  3194                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3195                           ;	Low-Power Timer1 Oscillator Enable bit
  3196                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3197                           ;	HFINTOSC Fast Start-up
  3198                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3199                           ;	MCLR Pin Enable bit
  3200                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3201   300005                     	org	3145733
  3202   300005  89                 	db	137
  3203                           
  3204                           ;Config register CONFIG4L @ 0x300006
  3205                           ;	Stack Full/Underflow Reset Enable bit
  3206                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3207                           ;	Single-Supply ICSP Enable bit
  3208                           ;	LVP = OFF, Single-Supply ICSP disabled
  3209                           ;	Extended Instruction Set Enable bit
  3210                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3211                           ;	Background Debugger Enable bit
  3212                           ;	DEBUG = 0x1, unprogrammed default
  3213   300006                     	org	3145734
  3214   300006  81                 	db	129
  3215                           
  3216                           ; Padding undefined space
  3217   300007                     	org	3145735
  3218   300007  FF                 	db	255
  3219                           
  3220                           ;Config register CONFIG5L @ 0x300008
  3221                           ;	Code Protection Block 0
  3222                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3223                           ;	Code Protection Block 1
  3224                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3225                           ;	Code Protection Block 2
  3226                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3227                           ;	Code Protection Block 3
  3228                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3229   300008                     	org	3145736
  3230   300008  0F                 	db	15
  3231                           
  3232                           ;Config register CONFIG5H @ 0x300009
  3233                           ;	Boot Block Code Protection bit
  3234                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3235                           ;	Data EEPROM Code Protection bit
  3236                           ;	CPD = OFF, Data EEPROM not code-protected
  3237   300009                     	org	3145737
  3238   300009  C0                 	db	192
  3239                           
  3240                           ;Config register CONFIG6L @ 0x30000A
  3241                           ;	Write Protection Block 0
  3242                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3243                           ;	Write Protection Block 1
  3244                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3245                           ;	Write Protection Block 2
  3246                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3247                           ;	Write Protection Block 3
  3248                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3249   30000A                     	org	3145738
  3250   30000A  0F                 	db	15
  3251                           
  3252                           ;Config register CONFIG6H @ 0x30000B
  3253                           ;	Configuration Register Write Protection bit
  3254                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3255                           ;	Boot Block Write Protection bit
  3256                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3257                           ;	Data EEPROM Write Protection bit
  3258                           ;	WRTD = OFF, Data EEPROM not write-protected
  3259   30000B                     	org	3145739
  3260   30000B  E0                 	db	224
  3261                           
  3262                           ;Config register CONFIG7L @ 0x30000C
  3263                           ;	Table Read Protection Block 0
  3264                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3265                           ;	Table Read Protection Block 1
  3266                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3267                           ;	Table Read Protection Block 2
  3268                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3269                           ;	Table Read Protection Block 3
  3270                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3271   30000C                     	org	3145740
  3272   30000C  0F                 	db	15
  3273                           
  3274                           ;Config register CONFIG7H @ 0x30000D
  3275                           ;	Boot Block Table Read Protection bit
  3276                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3277   30000D                     	org	3145741
  3278   30000D  40                 	db	64
  3279                           tosu	equ	0xFFF
  3280                           tosh	equ	0xFFE
  3281                           tosl	equ	0xFFD
  3282                           stkptr	equ	0xFFC
  3283                           pclatu	equ	0xFFB
  3284                           pclath	equ	0xFFA
  3285                           pcl	equ	0xFF9
  3286                           tblptru	equ	0xFF8
  3287                           tblptrh	equ	0xFF7
  3288                           tblptrl	equ	0xFF6
  3289                           tablat	equ	0xFF5
  3290                           prodh	equ	0xFF4
  3291                           prodl	equ	0xFF3
  3292                           indf0	equ	0xFEF
  3293                           postinc0	equ	0xFEE
  3294                           postdec0	equ	0xFED
  3295                           preinc0	equ	0xFEC
  3296                           plusw0	equ	0xFEB
  3297                           fsr0h	equ	0xFEA
  3298                           fsr0l	equ	0xFE9
  3299                           wreg	equ	0xFE8
  3300                           indf1	equ	0xFE7
  3301                           postinc1	equ	0xFE6
  3302                           postdec1	equ	0xFE5
  3303                           preinc1	equ	0xFE4
  3304                           plusw1	equ	0xFE3
  3305                           fsr1h	equ	0xFE2
  3306                           fsr1l	equ	0xFE1
  3307                           bsr	equ	0xFE0
  3308                           indf2	equ	0xFDF
  3309                           postinc2	equ	0xFDE
  3310                           postdec2	equ	0xFDD
  3311                           preinc2	equ	0xFDC
  3312                           plusw2	equ	0xFDB
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        11
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    HAL_LED_LEDBlink@Copy_LED	PTR struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    HAL_LED_LEDConfig@Copy_LED	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    HAL_Push_Button_BtnConfig@Copy_Btn	PTR const struct . size(1) Largest target is 1
		 -> Btn(COMRAM[1]), 

    HAL_Push_Button_ReadBtn@Copy_Btn	PTR struct . size(1) Largest target is 1
		 -> Btn(COMRAM[1]), 

    HAL_Push_Button_ReadBtn@Copy_BtnStatus	PTR unsigned char  size(1) Largest target is 1
		 -> Global_BtnRead(COMRAM[1]), 

    MCAL_DIO_ReadPinValue@Copy_PinInfo	PTR const struct . size(1) Largest target is 1
		 -> HAL_Push_Button_ReadBtn@Btn(COMRAM[1]), 

    MCAL_DIO_ReadPinValue@Copy_PinValue	PTR enum E228 size(1) Largest target is 1
		 -> HAL_Push_Button_ReadBtn@Local_BtnStatus(COMRAM[1]), 

    MCAL_DIO_SetPinDirection@Copy_PinInfo	PTR const struct . size(1) Largest target is 1
		 -> HAL_LED_LEDArrayConfig@LED(COMRAM[1]), HAL_LED_LEDConfig@LED(COMRAM[1]), HAL_Push_Button_BtnConfig@Btn(COMRAM[1]), 

    MCAL_DIO_SetPinValue@Copy_PinInfo	PTR struct . size(1) Largest target is 1
		 -> HAL_LED_LEDArrayPatternBlink@LED(COMRAM[1]), HAL_LED_LEDArrayPatternOff@LED(COMRAM[1]), HAL_LED_LEDArrayPatternOn@LED(COMRAM[1]), HAL_LED_LEDConfig@LED(COMRAM[1]), 
		 -> HAL_LED_LEDOff@LED(COMRAM[1]), HAL_LED_LEDOn@LED(COMRAM[1]), 

    MCAL_DIO_TogglePinValue@Copy_PinInfo	PTR struct . size(1) Largest target is 1
		 -> HAL_LED_LEDBlink@LED(COMRAM[1]), HAL_LED_LEDToggle@LED(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_HAL_Push_Button_ReadBtn
    _HAL_Push_Button_ReadBtn->_MCAL_DIO_ReadPinValue
    _HAL_Push_Button_BtnConfig->_MCAL_DIO_SetPinDirection
    _HAL_LED_LEDConfig->_MCAL_DIO_SetPinValue
    _HAL_LED_LEDBlink->_MCAL_DIO_TogglePinValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6795
                   _HAL_LED_LEDBlink
                  _HAL_LED_LEDConfig
          _HAL_Push_Button_BtnConfig
            _HAL_Push_Button_ReadBtn
 ---------------------------------------------------------------------------------
 (1) _HAL_Push_Button_ReadBtn                              7     5      2    1828
                                              6 COMRAM     6     4      2
              _MCAL_DIO_ReadPinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_ReadPinValue                                6     4      2    1136
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _HAL_Push_Button_BtnConfig                            4     3      1     977
                                              4 COMRAM     3     2      1
           _MCAL_DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _HAL_LED_LEDConfig                                    4     3      1    3004
                                              7 COMRAM     3     2      1
           _MCAL_DIO_SetPinDirection
               _MCAL_DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_SetPinValue                                 7     5      2    1958
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_SetPinDirection                             4     3      1     736
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _HAL_LED_LEDBlink                                     6     5      1     986
                                              5 COMRAM     5     4      1
            _MCAL_DIO_TogglePinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_TogglePinValue                              5     4      1     677
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HAL_LED_LEDBlink
     _MCAL_DIO_TogglePinValue
   _HAL_LED_LEDConfig
     _MCAL_DIO_SetPinDirection
     _MCAL_DIO_SetPinValue
   _HAL_Push_Button_BtnConfig
     _MCAL_DIO_SetPinDirection
   _HAL_Push_Button_ReadBtn
     _MCAL_DIO_ReadPinValue

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      38        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFR           A0      0       0      37        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      23       1       36.8%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      12        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Apr 13 10:43:20 2024

          __end_of_HAL_Push_Button_ReadBtn 1D9C                                         l40 1DDC  
                                       l25 1FCE                                         l50 1E68  
                                       l80 1FBC                                        l202 176E  
                                      l143 1F12                                        l135 1EAA  
                                      l313 1C1C                                        l163 1D9A  
                                      l329 19E8                                        l277 1426  
                                      _Btn 0022                                        _key 0019  
                                      wreg 0FE8        MCAL_DIO_ReadPinValue@Local_PinValue 0012  
                                     l2011 1512                                       l2021 1574  
                                     l2005 14B2                                       l2101 1168  
                                     l2031 15FA                                       l2023 15A0  
                                     l2007 14DE                                       l2111 11AE  
                                     l2201 1804                                       l2033 1602  
                                     l2041 165C                                       l2009 14E6  
                                     l2017 1540                                       l2113 11D6  
                                     l2211 18C4                                       l2203 180C  
                                     l2051 16DC                                       l2043 1688  
                                     l2035 162E                                       l2019 156C  
                                     l2131 1296                                       l2115 11EA  
                                     l2123 1228                                       l2107 117C  
                                     l2045 168C                                       l2029 15CE  
                                     l2141 12FE                                       l2133 12C0  
                                     l2125 1252                                       l2117 1214  
                                     l2109 11A6                                       l2215 1920  
                                     l2207 1868                                       l2063 1736  
                                     l2151 1372                                       l2143 1302  
                                     l2127 125A                                       l2071 1012  
                                     l2311 1C1A                                       l2049 16B0  
                                     l2057 170A                                       l2065 176C  
                                     l2153 13B0                                       l2129 1282  
                                     l2081 107E                                       l2073 1032  
                                     l2321 1DD8                                       l2241 1A2A  
                                     l2233 19EA                                       l2401 1D64  
                                     l2219 1944                                       l2227 19B0  
                                     l2411 1F14                                       l2147 1326  
                                     l2139 12D4                                       l2083 1092  
                                     l2091 10D0                                       l2075 1046  
                                     l2323 1DE0                                       l2315 1D9C  
                                     l2243 1A54                                       l2235 19EE  
                                     l2403 1D74                                       l2229 19E6  
                                     l2421 1F54                                       l2413 1F18  
                                     l2149 135E                                       l2093 10FA  
                                     l2085 10BC                                       l2077 104E  
                                     l2165 13EE                                       l2069 1012  
                                     l2333 1E44                                       l2325 1E16  
                                     l2317 1D9C                                       l2341 1E6A  
                                     l2253 1A86                                       l2245 1A64  
                                     l2309 1BE4                                       l2237 1A0E  
                                     l2405 1D88                                       l2191 1770  
                                     l2431 1F80                                       l2415 1F1C  
                                     l2159 13C4                                       l2095 1102  
                                     l2079 1056                                       l2167 1424  
                                     l2327 1E18                                       l2319 1DB8  
                                     l2351 1EE4                                       l2343 1E6A  
                                     l2255 1AB0                                       l2247 1A74  
                                     l2239 1A22                                       l2407 1D9A  
                                     l2193 1770                                       l2441 1FAC  
                                     l2433 1F8C                                       l2417 1F32  
                                     l2097 112A                                       l2337 1E68  
                                     l2329 1E28                                       l2353 1EE6  
                                     l2345 1E86                                       l2281 1B5C  
                                     l2265 1AD4                                       l2257 1AC0  
                                     l2249 1A7E                                       l2195 1790  
                                     l2435 1F8C                                       l2427 1F64  
                                     l2419 1F52                                       l2099 113E  
                                     l2355 1EF6                                       l2347 1EA6  
                                     l2267 1AFE                                       l2371 1C5C  
                                     l2363 1C1E                                       l2443 1FBE  
                                     l2197 17A4                                       l2437 1FA2  
                                     l2429 1F7C                                       l2349 1EAE  
                                     l2293 1B94                                       l2277 1B22  
                                     l2269 1B0E                                       l2381 1CA2  
                                     l2373 1C5E                                       l2365 1C22  
                                     l2445 1FDA                                       l2199 17AC  
                                     l2439 1FAA                                       l2359 1F12  
                                     l2295 1BC0                                       l2279 1B4C  
                                     l2383 1CB2                                       l2391 1D02  
                                     l2375 1C6E                                       l2367 1C26  
                                     l2447 1FEA                                       l2297 1BD0  
                                     l2289 1B70                                       l2385 1CD0  
                                     l2393 1D16                                       l2377 1C8A  
                                     l2369 1C3C                                       l2395 1D2A  
                                     l2387 1CDC                                       l2379 1C8E  
                                     l2661 13D8                                       l2653 10E4  
                                     l2397 1D3A                                       l2389 1CEC  
                                     l2655 1190                                       l2399 1D58  
                                     l2657 123C                                       l2659 12E8  
                                     l1991 1428                                       l1993 1448  
                                     l1995 1450                                       l1997 1458  
                                     l1989 1428                                       l1999 1484  
                                     u2000 1A74                                       u2001 1A70  
                                     u2100 1B90                                       u2020 1AC0  
                                     u2101 1B8C                                       u2021 1ABC  
                                     u2030 1AD0                                       u2014 1AA4  
                                     u2031 1ACC                                       u2015 1AA0  
                                     u2200 1EA6                                       u2120 1BD0  
                                     u2201 1EA2                                       u2121 1BCC  
                                     u2130 1BE0                                       u2114 1BB4  
                                     u2050 1B0E                                       u2131 1BDC  
                                     u2115 1BB0                                       u2051 1B0A  
                                     u2140 1DB8                                       u2220 1F0E  
                                     u2060 1B1E                                       u2044 1AF2  
                                     u2300 1D74                                       u2141 1DB4  
                                     u2221 1F0A                                       u2061 1B1A  
                                     u2045 1AEE                                       u2301 1D70  
                                     u1430 1448                                       u2150 1DD8  
                                     u1431 1444                                       u2151 1DD4  
                                     u2215 1EF4                                       u2320 1F7C  
                                     u1520 15E4                                       u1504 1592  
                                     u1600 1032                                       u2080 1B5C  
                                     u2240 1C8A                                       u2321 1F78  
                                     u1521 15DE                                       u1505 158E  
                                     u1601 102E                                       u2217 1EF6  
                                     u2081 1B58                                       u2241 1C86  
                                     u2330 1FBC                                       u1514 15BE  
                                     u1610 1046                                       u2170 1E40  
                                     u2090 1B6C                                       u2074 1B40  
                                     u2250 1CA2                                       u2331 1FB8  
                                     u2315 1F62                                       u1515 15BA  
                                     u1611 1042                                       u2171 1E3C  
                                     u2091 1B68                                       u2075 1B3C  
                                     u2251 1C9E                                       u2235 1C6C  
                                     u1460 14C8                                       u1444 1476  
                                     u2180 1E64                                       u2260 1CB2  
                                     u2340 1FEA                                       u2317 1F64  
                                     u1461 14C2                                       u1445 1472  
                                     u2181 1E60                                       u2165 1E26  
                                     u2261 1CAE                                       u2237 1C6E  
                                     u2341 1FE6                                       u1550 1672  
                                     u1534 1620                                       u1526 15E6  
                                     u1454 14A2                                       u2190 1E86  
                                     u2270 1CEC                                       u1551 166C  
                                     u1535 161C                                       u1455 149E  
                                     u2167 1E28                                       u2191 1E82  
                                     u2271 1CE8                                       u1560 16AC  
                                     u1544 164C                                       u1704 11CC  
                                     u1624 1074                                       u2280 1D2A  
                                     u1561 16A8                                       u1545 1648  
                                     u1705 11C8                                       u1625 1070  
                                     u2281 1D26                                       u1490 1556  
                                     u1474 1504                                       u1466 14CA  
                                     u2290 1D3A                                       u1491 1550  
                                     u1475 1500                                       u1715 11E4  
                                     u1635 108C                                       u2291 1D36  
                                     u1900 18A6                                       u1556 1674  
                                     u1484 1530                                       u1724 1208  
                                     u1716 11E6                                       u1644 10B0  
                                     u1636 108E                                       u1901 18A0  
                                     u1485 152C                                       u1805 136C  
                                     u1725 1204                                       u1645 10AC  
                                     u1830 1790                                       u1590 1720  
                                     u1574 16CE                                       u1814 1390  
                                     u1806 136E                                       u1831 178C  
                                     u1591 171A                                       u1575 16CA  
                                     u1815 138C                                       u1735 1222  
                                     u1655 10CA                                       u1920 1902  
                                     u1840 17A4                                       u1584 16FA  
                                     u1496 1558                                       u1744 1278  
                                     u1736 1224                                       u1664 1120  
                                     u1656 10CC                                       u1921 18FC  
                                     u1841 17A0                                       u1585 16F6  
                                     u1825 13BE                                       u1745 1274  
                                     u1665 111C                                       u1930 1940  
                                     u1914 18E2                                       u1906 18A8  
                                     u1826 13C0                                       u1931 193C  
                                     u1915 18DE                                       u1755 1290  
                                     u1675 1138                                       u1860 17EA  
                                     u1596 1722                                       u1780 1322  
                                     u1764 12B4                                       u1756 1292  
                                     u1684 115C                                       u1676 113A  
                                     u1861 17E4                                       u1781 131E  
                                     u1765 12B0                                       u1685 1158  
                                     u2637 1CBC                                       u1950 1992  
                                     u1926 1904                                       u1854 17CA  
                                     u1951 198C                                       u1855 17C6  
                                     u1775 12CE                                       u1695 1176  
                                     u2647 1D44                                       u1944 1962  
                                     u1880 184A                                       u1776 12D0  
                                     u1696 1178                                       u1960 1A0E  
                                     u1945 195E                                       u1881 1844  
                                     u2657 1F96                                       u1961 1A0A  
                                     u1874 182A                                       u1866 17EC  
                                     u1794 1344                                       u1970 1A22  
                                     u1875 1826                                       u1795 1340  
                                     u1971 1A1E                                       u1956 1994  
                                     u1894 1886                                       u1886 184C  
                                     u1990 1A64                                       u1895 1882  
                                     u1991 1A60                                       u1984 1A48  
                                     u1985 1A44                       _MCAL_DIO_SetPinValue 1012  
                                     _led1 0023                                       _main 1FBE  
                                     fsr2h 0FDA                                       indf2 0FDF  
                                     fsr1l 0FE1                                       fsr2l 0FD9  
                                     start 0000                     ?_MCAL_DIO_ReadPinValue 000D  
                _HAL_Push_Button_BtnConfig 1E6A                               ___param_bank 0000  
                                    ?_main 000D                      ?_MCAL_DIO_SetPinValue 000D  
                                    tablat 0FF5                                      status 0FD8  
                          __initialization 1FFA                               __end_of_main 1FFA  
                  _MCAL_DIO_TogglePinValue 1770          HAL_Push_Button_BtnConfig@Copy_Btn 0011  
                                   ??_main 0019                              __activetblptr 0002  
                                   clear_0 2020                     HAL_LED_LEDToggle@F2841 0008  
                                   isa$std 0001                  HAL_LED_LEDConfig@Copy_LED 0014  
                             __pdataCOMRAM 0019                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                     ??_MCAL_DIO_SetPinValue 000F  
                               __accesstop 0060                    __end_of__initialization 2026  
                            ___rparam_used 0001                  ??_MCAL_DIO_TogglePinValue 000E  
                           __pcstackCOMRAM 000D         MCAL_DIO_ReadPinValue@Copy_PinValue 000E  
 MCAL_DIO_TogglePinValue@Local_ErrorStatus 0011                      HAL_LED_LEDBlink@F2847 0007  
                         _HAL_LED_LEDBlink 1F14                 __end_of_Local_KeyPadLayout 1011  
                  ??_MCAL_DIO_ReadPinValue 000F                   HAL_LED_LEDBlink@Copy_LED 0012  
                ?_MCAL_DIO_SetPinDirection 000D                    _HAL_Push_Button_ReadBtn 1C1E  
        HAL_LED_LEDArrayPatternBlink@F2874 0003               HAL_Push_Button_ReadBtn@F2819 0001  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 1000                                    __pcinit 1FFA  
                                  __ramtop 1000     MCAL_DIO_ReadPinValue@Local_ErrorStatus 0011  
                                  __ptext0 1FBE                                    __ptext1 1C1E  
                                  __ptext2 19EA                                    __ptext3 1E6A  
                                  __ptext4 1D9C                                    __ptext5 1012  
                                  __ptext6 1428                                    __ptext7 1F14  
                                  __ptext8 1770       MCAL_DIO_SetPinDirection@Copy_PinInfo 000D  
                     end_of_initialization 2026            HAL_LED_LEDArrayPatternOff@F2866 0004  
                            __Lmediumconst 0000                                    postdec1 0FE5  
                                  postinc0 0FEE      MCAL_DIO_SetPinValue@Local_ErrorStatus 0013  
                ??_HAL_Push_Button_ReadBtn 0015                   __end_of_HAL_LED_LEDBlink 1FBE  
                            __pidataCOMRAM 2030                        start_initialization 1FFA  
                        _HAL_LED_LEDConfig 1D9C                         ?_HAL_LED_LEDConfig 0014  
                       _Local_KeyPadLayout 1001           __end_of_MCAL_DIO_SetPinDirection 1770  
                      ??_HAL_LED_LEDConfig 0015              __end_of_MCAL_DIO_ReadPinValue 1C1E  
         MCAL_DIO_SetPinValue@Copy_PinInfo 000D                  __end_of_HAL_LED_LEDConfig 1E6A  
                              __pbssCOMRAM 0001                   ?_MCAL_DIO_TogglePinValue 000D  
                     HAL_LED_LEDConfig@LED 0016        MCAL_DIO_TogglePinValue@Copy_PinInfo 000D  
    HAL_Push_Button_ReadBtn@Copy_BtnStatus 0014                     HAL_LED_LEDConfig@F2826 000B  
                              __smallconst 1000                HAL_LED_LEDArrayConfig@F2853 0006  
               ?_HAL_Push_Button_BtnConfig 0011                 HAL_Push_Button_ReadBtn@Btn 0017  
           HAL_LED_LEDArrayPatternOn@F2860 0005                             _Global_BtnRead 0021  
                 _MCAL_DIO_SetPinDirection 1428            __end_of_MCAL_DIO_TogglePinValue 19EA  
        __end_of_HAL_Push_Button_BtnConfig 1F14                                  copy_data0 200E  
          HAL_Push_Button_ReadBtn@Copy_Btn 0013                          ?_HAL_LED_LEDBlink 0012  
                       ??_HAL_LED_LEDBlink 0013                                   __Hrparam 0000  
                                 __Lrparam 0000             HAL_Push_Button_BtnConfig@F2812 0002  
MCAL_DIO_SetPinDirection@Local_ErrorStatus 0010                        HAL_LED_LEDBlink@LED 0016  
                      HAL_LED_LEDOff@F2836 0009          MCAL_DIO_SetPinValue@Copy_PinValue 000E  
        MCAL_DIO_ReadPinValue@Copy_PinInfo 000D        HAL_LED_LEDBlink@Local_BlinkingTimes 0015  
                             _ReturnStatus 000C                                   isa$xinst 0000  
             __end_of_MCAL_DIO_SetPinValue 1428                   ?_HAL_Push_Button_ReadBtn 0013  
                       HAL_LED_LEDOn@F2831 000A                      _MCAL_DIO_ReadPinValue 19EA  
             HAL_Push_Button_BtnConfig@Btn 0013                ??_HAL_Push_Button_BtnConfig 0012  
               ??_MCAL_DIO_SetPinDirection 000E     HAL_Push_Button_ReadBtn@Local_BtnStatus 0018  
