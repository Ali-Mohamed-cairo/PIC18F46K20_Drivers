

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Jul 09 06:01:20 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Version 2.20
    28                           ; Generated 05/05/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F46K20 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     
    62                           	psect	idataCOMRAM
    63   002040                     __pidataCOMRAM:
    64                           	callstack 0
    65                           
    66                           ;initializer for _key
    67   002040  01                 	db	1
    68   002041  09                 	db	9
    69   002042  11                 	db	17
    70   002043  19                 	db	25
    71   002044  21                 	db	33
    72   002045  29                 	db	41
    73   002046  31                 	db	49
    74   002047  39                 	db	57
    75                           
    76                           ;initializer for _Global_BtnRead
    77   002048  01                 	db	1
    78                           
    79                           ;initializer for _Btn
    80   002049  03                 	db	3
    81                           
    82                           ;initializer for _led1
    83   00204A  02                 	db	2
    84                           
    85                           	psect	smallconst
    86   001000                     __psmallconst:
    87                           	callstack 0
    88   001000  00                 	db	0
    89   001001                     _Local_KeyPadLayout@KeyPad_Config$F177:
    90                           	callstack 0
    91   001001  31                 	db	49
    92   001002  32                 	db	50
    93   001003  33                 	db	51
    94   001004  41                 	db	65
    95   001005  34                 	db	52
    96   001006  35                 	db	53
    97   001007  36                 	db	54
    98   001008  42                 	db	66
    99   001009  37                 	db	55
   100   00100A  38                 	db	56
   101   00100B  39                 	db	57
   102   00100C  43                 	db	67
   103   00100D  2A                 	db	42
   104   00100E  30                 	db	48
   105   00100F  23                 	db	35
   106   001010  44                 	db	68
   107   001011                     __end_of_Local_KeyPadLayout@KeyPad_Config$F177:
   108                           	callstack 0
   109   001011  31                 	db	49
   110   001012  32                 	db	50
   111   001013  33                 	db	51
   112   001014  41                 	db	65
   113   001015  34                 	db	52
   114   001016  35                 	db	53
   115   001017  36                 	db	54
   116   001018  42                 	db	66
   117   001019  37                 	db	55
   118   00101A  38                 	db	56
   119   00101B  39                 	db	57
   120   00101C  43                 	db	67
   121   00101D  2A                 	db	42
   122   00101E  30                 	db	48
   123   00101F  23                 	db	35
   124   001020  44                 	db	68
   125   001021                     __end_of_Local_KeyPadLayout:
   126                           	callstack 0
   127   000000                     _PORTB	set	3969
   128   001021  00                 	db	0	; dummy byte at the end
   129   000000                     
   130                           ; #config settings
   131                           
   132                           	psect	cinit
   133   00200A                     __pcinit:
   134                           	callstack 0
   135   00200A                     start_initialization:
   136                           	callstack 0
   137   00200A                     __initialization:
   138                           	callstack 0
   139                           
   140                           ; Initialize objects allocated to COMRAM (11 bytes)
   141                           ; load TBLPTR registers with __pidataCOMRAM
   142   00200A  0E40               	movlw	low __pidataCOMRAM
   143   00200C  6EF6               	movwf	tblptrl,c
   144   00200E  0E20               	movlw	high __pidataCOMRAM
   145   002010  6EF7               	movwf	tblptrh,c
   146   002012  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   147   002014  6EF8               	movwf	tblptru,c
   148   002016  EE00  F046         	lfsr	0,__pdataCOMRAM
   149   00201A  EE10 F00B          	lfsr	1,11
   150   00201E                     copy_data0:
   151   00201E  0009               	tblrd		*+
   152   002020  CFF5 FFEE          	movff	tablat,postinc0
   153   002024  50E5               	movf	postdec1,w,c
   154   002026  50E1               	movf	fsr1l,w,c
   155   002028  E1FA               	bnz	copy_data0
   156                           
   157                           ; Clear objects allocated to COMRAM (57 bytes)
   158   00202A  EE00  F001         	lfsr	0,__pbssCOMRAM
   159   00202E  0E39               	movlw	57
   160   002030                     clear_0:
   161   002030  6AEE               	clrf	postinc0,c
   162   002032  06E8               	decf	wreg,f,c
   163   002034  E1FD               	bnz	clear_0
   164   002036                     end_of_initialization:
   165                           	callstack 0
   166   002036                     __end_of__initialization:
   167                           	callstack 0
   168   002036  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   169   002038  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   170   00203A  0100               	movlb	0
   171   00203C  EFE7  F00F         	goto	_main	;jump to C main() function
   172                           
   173                           	psect	bssCOMRAM
   174   000001                     __pbssCOMRAM:
   175                           	callstack 0
   176   000001                     _OSCF_CallBack:
   177                           	callstack 0
   178   000001                     	ds	2
   179   000003                     _C1_CallBack:
   180                           	callstack 0
   181   000003                     	ds	2
   182   000005                     _C2_CallBack:
   183                           	callstack 0
   184   000005                     	ds	2
   185   000007                     _EE_CallBack:
   186                           	callstack 0
   187   000007                     	ds	2
   188   000009                     _BCL_CallBack:
   189                           	callstack 0
   190   000009                     	ds	2
   191   00000B                     _HLVD_CallBack:
   192                           	callstack 0
   193   00000B                     	ds	2
   194   00000D                     _TMR3_CallBack:
   195                           	callstack 0
   196   00000D                     	ds	2
   197   00000F                     _CCP2_CallBack:
   198                           	callstack 0
   199   00000F                     	ds	2
   200   000011                     _PSP_CallBack:
   201                           	callstack 0
   202   000011                     	ds	2
   203   000013                     _AD_CallBack:
   204                           	callstack 0
   205   000013                     	ds	2
   206   000015                     _RC_CallBack:
   207                           	callstack 0
   208   000015                     	ds	2
   209   000017                     _TX_CallBack:
   210                           	callstack 0
   211   000017                     	ds	2
   212   000019                     _SSP_CallBack:
   213                           	callstack 0
   214   000019                     	ds	2
   215   00001B                     _CCP1_CallBack:
   216                           	callstack 0
   217   00001B                     	ds	2
   218   00001D                     _TMR2_CallBack:
   219                           	callstack 0
   220   00001D                     	ds	2
   221   00001F                     _TMR1_CallBack:
   222                           	callstack 0
   223   00001F                     	ds	2
   224   000021                     _TMR0_CallBack:
   225                           	callstack 0
   226   000021                     	ds	2
   227   000023                     _IOCB_CallBack:
   228                           	callstack 0
   229   000023                     	ds	2
   230   000025                     _EXTINT2_CallBack:
   231                           	callstack 0
   232   000025                     	ds	2
   233   000027                     _EXTINT1_CallBack:
   234                           	callstack 0
   235   000027                     	ds	2
   236   000029                     _EXTINT0_CallBack:
   237                           	callstack 0
   238   000029                     	ds	2
   239   00002B                     MCAL_Interrupt_EXTIntStatus@F3091:
   240                           	callstack 0
   241   00002B                     	ds	1
   242   00002C                     MCAL_Interrupt_EXTIntStatus@F3089:
   243                           	callstack 0
   244   00002C                     	ds	1
   245   00002D                     MCAL_Interrupt_EXTIntStatus@F3087:
   246                           	callstack 0
   247   00002D                     	ds	1
   248   00002E                     HAL_Push_Button_ReadBtn@F2823:
   249                           	callstack 0
   250   00002E                     	ds	1
   251   00002F                     HAL_Push_Button_BtnConfig@F2816:
   252                           	callstack 0
   253   00002F                     	ds	1
   254   000030                     HAL_LED_LEDArrayPatternBlink@F2878:
   255                           	callstack 0
   256   000030                     	ds	1
   257   000031                     HAL_LED_LEDArrayPatternOff@F2870:
   258                           	callstack 0
   259   000031                     	ds	1
   260   000032                     HAL_LED_LEDArrayPatternOn@F2864:
   261                           	callstack 0
   262   000032                     	ds	1
   263   000033                     HAL_LED_LEDArrayConfig@F2857:
   264                           	callstack 0
   265   000033                     	ds	1
   266   000034                     HAL_LED_LEDBlink@F2851:
   267                           	callstack 0
   268   000034                     	ds	1
   269   000035                     HAL_LED_LEDToggle@F2845:
   270                           	callstack 0
   271   000035                     	ds	1
   272   000036                     HAL_LED_LEDOff@F2840:
   273                           	callstack 0
   274   000036                     	ds	1
   275   000037                     HAL_LED_LEDOn@F2835:
   276                           	callstack 0
   277   000037                     	ds	1
   278   000038                     HAL_LED_LEDConfig@F2830:
   279                           	callstack 0
   280   000038                     	ds	1
   281   000039                     _ReturnStatus:
   282                           	callstack 0
   283   000039                     	ds	1
   284                           
   285                           	psect	dataCOMRAM
   286   000046                     __pdataCOMRAM:
   287                           	callstack 0
   288   000046                     _key:
   289                           	callstack 0
   290   000046                     	ds	8
   291   00004E                     _Global_BtnRead:
   292                           	callstack 0
   293   00004E                     	ds	1
   294   00004F                     _Btn:
   295                           	callstack 0
   296   00004F                     	ds	1
   297   000050                     _led1:
   298                           	callstack 0
   299   000050                     	ds	1
   300                           
   301                           	psect	cstackCOMRAM
   302   00003A                     __pcstackCOMRAM:
   303                           	callstack 0
   304   00003A                     MCAL_DIO_SetPinDirection@Copy_PinInfo:
   305                           	callstack 0
   306   00003A                     MCAL_DIO_SetPinValue@Copy_PinInfo:
   307                           	callstack 0
   308   00003A                     MCAL_DIO_ReadPinValue@Copy_PinInfo:
   309                           	callstack 0
   310   00003A                     MCAL_DIO_TogglePinValue@Copy_PinInfo:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x0
   314   00003A                     	ds	1
   315   00003B                     ??_MCAL_DIO_SetPinDirection:
   316   00003B                     ??_MCAL_DIO_TogglePinValue:
   317   00003B                     MCAL_DIO_SetPinValue@Copy_PinValue:
   318                           	callstack 0
   319   00003B                     MCAL_DIO_ReadPinValue@Copy_PinValue:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0x1
   323   00003B                     	ds	1
   324   00003C                     ??_MCAL_DIO_SetPinValue:
   325   00003C                     ??_MCAL_DIO_ReadPinValue:
   326                           
   327                           ; 1 bytes @ 0x2
   328   00003C                     	ds	1
   329   00003D                     MCAL_DIO_SetPinDirection@Local_ErrorStatus:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x3
   333   00003D                     	ds	1
   334   00003E                     HAL_Push_Button_BtnConfig@Copy_Btn:
   335                           	callstack 0
   336   00003E                     MCAL_DIO_ReadPinValue@Local_ErrorStatus:
   337                           	callstack 0
   338   00003E                     MCAL_DIO_TogglePinValue@Local_ErrorStatus:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x4
   342   00003E                     	ds	1
   343   00003F                     ??_HAL_Push_Button_BtnConfig:
   344   00003F                     HAL_LED_LEDBlink@Copy_LED:
   345                           	callstack 0
   346   00003F                     MCAL_DIO_ReadPinValue@Local_PinValue:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x5
   350   00003F                     	ds	1
   351   000040                     ??_HAL_LED_LEDBlink:
   352   000040                     HAL_Push_Button_BtnConfig@Btn:
   353                           	callstack 0
   354   000040                     HAL_Push_Button_ReadBtn@Copy_Btn:
   355                           	callstack 0
   356   000040                     MCAL_DIO_SetPinValue@Local_ErrorStatus:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x6
   360   000040                     	ds	1
   361   000041                     HAL_LED_LEDConfig@Copy_LED:
   362                           	callstack 0
   363   000041                     HAL_Push_Button_ReadBtn@Copy_BtnStatus:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0x7
   367   000041                     	ds	1
   368   000042                     ??_HAL_LED_LEDConfig:
   369   000042                     ??_HAL_Push_Button_ReadBtn:
   370   000042                     HAL_LED_LEDBlink@Local_BlinkingTimes:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x8
   374   000042                     	ds	1
   375   000043                     HAL_LED_LEDConfig@LED:
   376                           	callstack 0
   377   000043                     HAL_LED_LEDBlink@LED:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x9
   381   000043                     	ds	1
   382   000044                     HAL_Push_Button_ReadBtn@Btn:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0xA
   386   000044                     	ds	1
   387   000045                     HAL_Push_Button_ReadBtn@Local_BtnStatus:
   388                           	callstack 0
   389                           
   390                           ; 1 bytes @ 0xB
   391   000045                     	ds	1
   392   000046                     
   393                           ; 1 bytes @ 0xC
   394 ;;
   395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   396 ;;
   397 ;; *************** function _main *****************
   398 ;; Defined at:
   399 ;;		line 68 in file "main.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  2   24[None  ] int 
   406 ;; Registers used:
   407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;Total ram usage:        0 bytes
   418 ;; Hardware stack levels required when called: 3
   419 ;; This function calls:
   420 ;;		_HAL_LED_LEDBlink
   421 ;;		_HAL_LED_LEDConfig
   422 ;;		_HAL_Push_Button_BtnConfig
   423 ;;		_HAL_Push_Button_ReadBtn
   424 ;; This function is called by:
   425 ;;		Startup code after reset
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text0
   430   001FCE                     __ptext0:
   431                           	callstack 0
   432   001FCE                     _main:
   433                           	callstack 28
   434   001FCE                     
   435                           ;main.c: 70:     HAL_LED_LEDConfig(&led1);
   436   001FCE  0E50               	movlw	low _led1
   437   001FD0  6E41               	movwf	HAL_LED_LEDConfig@Copy_LED^0,c
   438   001FD2  ECD6  F00E         	call	_HAL_LED_LEDConfig	;wreg free
   439                           
   440                           ;main.c: 71:     HAL_Push_Button_BtnConfig(&Btn);
   441   001FD6  0E4F               	movlw	low _Btn
   442   001FD8  6E3E               	movwf	HAL_Push_Button_BtnConfig@Copy_Btn^0,c
   443   001FDA  EC3D  F00F         	call	_HAL_Push_Button_BtnConfig	;wreg free
   444   001FDE                     l25:
   445                           
   446                           ;main.c: 84:     {;main.c: 85:         HAL_Push_Button_ReadBtn(&Btn, &Global_BtnRead);
   447   001FDE  0E4F               	movlw	low _Btn
   448   001FE0  6E40               	movwf	HAL_Push_Button_ReadBtn@Copy_Btn^0,c
   449   001FE2  0E4E               	movlw	low _Global_BtnRead
   450   001FE4  6E41               	movwf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,c
   451   001FE6  EC17  F00E         	call	_HAL_Push_Button_ReadBtn	;wreg free
   452   001FEA                     
   453                           ;main.c: 86:         if(Global_BtnRead == Btn_D_Pressed)
   454   001FEA  044E               	decf	_Global_BtnRead^0,w,c
   455   001FEC  A4D8               	btfss	status,2,c
   456   001FEE  EFFB  F00F         	goto	u3161
   457   001FF2  EFFD  F00F         	goto	u3160
   458   001FF6                     u3161:
   459   001FF6  EFEF  F00F         	goto	l25
   460   001FFA                     u3160:
   461   001FFA                     
   462                           ;main.c: 87:         {;main.c: 88:             HAL_LED_LEDBlink(&led1);
   463   001FFA  0E50               	movlw	low _led1
   464   001FFC  6E3F               	movwf	HAL_LED_LEDBlink@Copy_LED^0,c
   465   001FFE  EC92  F00F         	call	_HAL_LED_LEDBlink	;wreg free
   466   002002  EFEF  F00F         	goto	l25
   467   002006  EFA7  F000         	goto	start
   468   00200A                     __end_of_main:
   469                           	callstack 0
   470                           
   471 ;; *************** function _HAL_Push_Button_ReadBtn *****************
   472 ;; Defined at:
   473 ;;		line 42 in file "HAL/Push_Button/Push_Button_Prog.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;  Copy_Btn        1    6[COMRAM] PTR struct .
   476 ;;		 -> Btn(1), 
   477 ;;  Copy_BtnStat    1    7[COMRAM] PTR unsigned char 
   478 ;;		 -> Global_BtnRead(1), 
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  Local_BtnSta    1   11[COMRAM] unsigned char 
   481 ;;  Btn             1   10[COMRAM] struct .
   482 ;;  Local_ErrorS    1    0        unsigned char 
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      unsigned char 
   485 ;; Registers used:
   486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 0/0
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   496 ;;Total ram usage:        6 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 2
   499 ;; This function calls:
   500 ;;		_MCAL_DIO_ReadPinValue
   501 ;; This function is called by:
   502 ;;		_main
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text1
   507   001C2E                     __ptext1:
   508                           	callstack 0
   509   001C2E                     _HAL_Push_Button_ReadBtn:
   510                           	callstack 28
   511   001C2E                     
   512                           ;HAL/Push_Button/Push_Button_Prog.c: 45:     uint8 Local_BtnStatus = Btn_D_Released;
   513   001C2E  0E00               	movlw	0
   514   001C30  6E45               	movwf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,c
   515   001C32                     
   516                           ;HAL/Push_Button/Push_Button_Prog.c: 46:     Pin_Conig_t Btn = {
   517   001C32  C02E  F044         	movff	HAL_Push_Button_ReadBtn@F2823,HAL_Push_Button_ReadBtn@Btn
   518   001C36  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   519   001C38  6ED9               	movwf	fsr2l,c
   520   001C3A  6ADA               	clrf	fsr2h,c
   521   001C3C  50DF               	movf	223,w,c
   522   001C3E  0B07               	andlw	7
   523   001C40  6E42               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   524   001C42  5044               	movf	HAL_Push_Button_ReadBtn@Btn^0,w,c
   525   001C44  1842               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   526   001C46  0BF8               	andlw	-8
   527   001C48  1842               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   528   001C4A  6E44               	movwf	HAL_Push_Button_ReadBtn@Btn^0,c
   529   001C4C  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   530   001C4E  6ED9               	movwf	fsr2l,c
   531   001C50  6ADA               	clrf	fsr2h,c
   532   001C52  30DF               	rrcf	223,w,c
   533   001C54  32E8               	rrcf	wreg,f,c
   534   001C56  32E8               	rrcf	wreg,f,c
   535   001C58  0B07               	andlw	7
   536   001C5A  6E42               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   537   001C5C  4642               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   538   001C5E  4642               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   539   001C60  4642               	rlncf	??_HAL_Push_Button_ReadBtn^0,f,c
   540   001C62  5044               	movf	HAL_Push_Button_ReadBtn@Btn^0,w,c
   541   001C64  1842               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   542   001C66  0BC7               	andlw	-57
   543   001C68  1842               	xorwf	??_HAL_Push_Button_ReadBtn^0,w,c
   544   001C6A  6E44               	movwf	HAL_Push_Button_ReadBtn@Btn^0,c
   545   001C6C  8C44               	bsf	HAL_Push_Button_ReadBtn@Btn^0,6,c
   546   001C6E  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   547   001C70  6ED9               	movwf	fsr2l,c
   548   001C72  6ADA               	clrf	fsr2h,c
   549   001C74  AEDF               	btfss	indf2,7,c
   550   001C76  D002               	bra	u3055
   551   001C78  8E44               	bsf	HAL_Push_Button_ReadBtn@Btn^0,7,c
   552   001C7A  D001               	bra	u3057
   553   001C7C                     u3055:
   554   001C7C  9E44               	bcf	HAL_Push_Button_ReadBtn@Btn^0,7,c
   555   001C7E                     u3057:
   556   001C7E                     
   557                           ;HAL/Push_Button/Push_Button_Prog.c: 52:     if(!MCAL_DIO_ReadPinValue(&Btn, &Local_BtnS
      +                          tatus))
   558   001C7E  0E44               	movlw	low HAL_Push_Button_ReadBtn@Btn
   559   001C80  6E3A               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   560   001C82  0E45               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   561   001C84  6E3B               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   562   001C86  ECFD  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   563   001C8A  0900               	iorlw	0
   564   001C8C  A4D8               	btfss	status,2,c
   565   001C8E  EF4B  F00E         	goto	u3061
   566   001C92  EF4D  F00E         	goto	u3060
   567   001C96                     u3061:
   568   001C96  EF4F  F00E         	goto	l3509
   569   001C9A                     u3060:
   570   001C9A                     
   571                           ;HAL/Push_Button/Push_Button_Prog.c: 55:     }
   572   001C9A  EFD5  F00E         	goto	l222
   573   001C9E                     l3509:
   574                           
   575                           ;HAL/Push_Button/Push_Button_Prog.c: 57:     {;HAL/Push_Button/Push_Button_Prog.c: 58:  
      +                                 if(Copy_Btn->Connection_Meth == 0)
   576   001C9E  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   577   001CA0  6ED9               	movwf	fsr2l,c
   578   001CA2  6ADA               	clrf	fsr2h,c
   579   001CA4  BCDF               	btfsc	indf2,6,c
   580   001CA6  EF57  F00E         	goto	u3071
   581   001CAA  EF59  F00E         	goto	u3070
   582   001CAE                     u3071:
   583   001CAE  EF93  F00E         	goto	l3523
   584   001CB2                     u3070:
   585   001CB2                     
   586                           ;HAL/Push_Button/Push_Button_Prog.c: 59:         {;HAL/Push_Button/Push_Button_Prog.c: 6
      +                          0:             if(Local_BtnStatus == Btn_D_Pressed)
   587   001CB2  0445               	decf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   588   001CB4  A4D8               	btfss	status,2,c
   589   001CB6  EF5F  F00E         	goto	u3081
   590   001CBA  EF61  F00E         	goto	u3080
   591   001CBE                     u3081:
   592   001CBE  EF89  F00E         	goto	l3521
   593   001CC2                     u3080:
   594   001CC2                     
   595                           ;HAL/Push_Button/Push_Button_Prog.c: 61:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 62:                 _delay((unsigned long)((120)*(16000000/4000.0)));
   596   001CC2  0E03               	movlw	3
   597   001CC4  6E43               	movwf	(??_HAL_Push_Button_ReadBtn+1)^0,c
   598   001CC6  0E70               	movlw	112
   599   001CC8  6E42               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   600   001CCA  0E5C               	movlw	92
   601   001CCC                     u3787:
   602   001CCC  2EE8               	decfsz	wreg,f,c
   603   001CCE  D7FE               	bra	u3787
   604   001CD0  2E42               	decfsz	??_HAL_Push_Button_ReadBtn^0,f,c
   605   001CD2  D7FC               	bra	u3787
   606   001CD4  2E43               	decfsz	(??_HAL_Push_Button_ReadBtn+1)^0,f,c
   607   001CD6  D7FA               	bra	u3787
   608   001CD8  F000 F000          	nop2	
   609                           
   610                           ;HAL/Push_Button/Push_Button_Prog.c: 63:                 while(Local_BtnStatus != Btn_D_
      +                          Released)
   611   001CDC  EF76  F00E         	goto	l3517
   612   001CE0                     l3515:
   613                           
   614                           ;HAL/Push_Button/Push_Button_Prog.c: 64:                 {;HAL/Push_Button/Push_Button_P
      +                          rog.c: 65:                     MCAL_DIO_ReadPinValue(&Btn, &Local_BtnStatus);
   615   001CE0  0E44               	movlw	low HAL_Push_Button_ReadBtn@Btn
   616   001CE2  6E3A               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   617   001CE4  0E45               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   618   001CE6  6E3B               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   619   001CE8  ECFD  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   620   001CEC                     l3517:
   621                           
   622                           ;HAL/Push_Button/Push_Button_Prog.c: 63:                 while(Local_BtnStatus != Btn_D_
      +                          Released)
   623   001CEC  5045               	movf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   624   001CEE  A4D8               	btfss	status,2,c
   625   001CF0  EF7C  F00E         	goto	u3091
   626   001CF4  EF7E  F00E         	goto	u3090
   627   001CF8                     u3091:
   628   001CF8  EF70  F00E         	goto	l3515
   629   001CFC                     u3090:
   630   001CFC                     
   631                           ;HAL/Push_Button/Push_Button_Prog.c: 67:                 *Copy_BtnStatus = Btn_D_Pressed
      +                          ;
   632   001CFC  5041               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   633   001CFE  6ED9               	movwf	fsr2l,c
   634   001D00  6ADA               	clrf	fsr2h,c
   635   001D02  0E01               	movlw	1
   636   001D04  6EDF               	movwf	indf2,c
   637                           
   638                           ;HAL/Push_Button/Push_Button_Prog.c: 68:                 Copy_Btn->Last_Status = Btn_D_P
      +                          ressed;
   639   001D06  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   640   001D08  6ED9               	movwf	fsr2l,c
   641   001D0A  6ADA               	clrf	fsr2h,c
   642   001D0C  8EDF               	bsf	indf2,7,c
   643                           
   644                           ;HAL/Push_Button/Push_Button_Prog.c: 69:             }
   645   001D0E  EFD5  F00E         	goto	l3537
   646   001D12                     l3521:
   647                           
   648                           ;HAL/Push_Button/Push_Button_Prog.c: 71:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 72:                 *Copy_BtnStatus = Btn_D_Released;
   649   001D12  5041               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   650   001D14  6ED9               	movwf	fsr2l,c
   651   001D16  6ADA               	clrf	fsr2h,c
   652   001D18  6ADF               	clrf	indf2,c
   653                           
   654                           ;HAL/Push_Button/Push_Button_Prog.c: 73:                 Copy_Btn->Last_Status = Btn_D_R
      +                          eleased;
   655   001D1A  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   656   001D1C  6ED9               	movwf	fsr2l,c
   657   001D1E  6ADA               	clrf	fsr2h,c
   658   001D20  9EDF               	bcf	indf2,7,c
   659   001D22  EFD5  F00E         	goto	l3537
   660   001D26                     l3523:
   661   001D26  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   662   001D28  6ED9               	movwf	fsr2l,c
   663   001D2A  6ADA               	clrf	fsr2h,c
   664   001D2C  ACDF               	btfss	indf2,6,c
   665   001D2E  EF9B  F00E         	goto	u3101
   666   001D32  EF9D  F00E         	goto	u3100
   667   001D36                     u3101:
   668   001D36  EFD5  F00E         	goto	l3537
   669   001D3A                     u3100:
   670   001D3A                     
   671                           ;HAL/Push_Button/Push_Button_Prog.c: 77:         {;HAL/Push_Button/Push_Button_Prog.c: 7
      +                          8:             if(Local_BtnStatus == Btn_U_Pressed)
   672   001D3A  5045               	movf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   673   001D3C  A4D8               	btfss	status,2,c
   674   001D3E  EFA3  F00E         	goto	u3111
   675   001D42  EFA5  F00E         	goto	u3110
   676   001D46                     u3111:
   677   001D46  EFCC  F00E         	goto	l3535
   678   001D4A                     u3110:
   679   001D4A                     
   680                           ;HAL/Push_Button/Push_Button_Prog.c: 79:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 80:                 _delay((unsigned long)((120)*(16000000/4000.0)));
   681   001D4A  0E03               	movlw	3
   682   001D4C  6E43               	movwf	(??_HAL_Push_Button_ReadBtn+1)^0,c
   683   001D4E  0E70               	movlw	112
   684   001D50  6E42               	movwf	??_HAL_Push_Button_ReadBtn^0,c
   685   001D52  0E5C               	movlw	92
   686   001D54                     u3797:
   687   001D54  2EE8               	decfsz	wreg,f,c
   688   001D56  D7FE               	bra	u3797
   689   001D58  2E42               	decfsz	??_HAL_Push_Button_ReadBtn^0,f,c
   690   001D5A  D7FC               	bra	u3797
   691   001D5C  2E43               	decfsz	(??_HAL_Push_Button_ReadBtn+1)^0,f,c
   692   001D5E  D7FA               	bra	u3797
   693   001D60  F000 F000          	nop2	
   694                           
   695                           ;HAL/Push_Button/Push_Button_Prog.c: 81:                 while(Local_BtnStatus != Btn_U_
      +                          Released)
   696   001D64  EFBA  F00E         	goto	l3531
   697   001D68                     l3529:
   698                           
   699                           ;HAL/Push_Button/Push_Button_Prog.c: 82:                 {;HAL/Push_Button/Push_Button_P
      +                          rog.c: 83:                     MCAL_DIO_ReadPinValue(&Btn, &Local_BtnStatus);
   700   001D68  0E44               	movlw	low HAL_Push_Button_ReadBtn@Btn
   701   001D6A  6E3A               	movwf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,c
   702   001D6C  0E45               	movlw	low HAL_Push_Button_ReadBtn@Local_BtnStatus
   703   001D6E  6E3B               	movwf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,c
   704   001D70  ECFD  F00C         	call	_MCAL_DIO_ReadPinValue	;wreg free
   705   001D74                     l3531:
   706                           
   707                           ;HAL/Push_Button/Push_Button_Prog.c: 81:                 while(Local_BtnStatus != Btn_U_
      +                          Released)
   708   001D74  0445               	decf	HAL_Push_Button_ReadBtn@Local_BtnStatus^0,w,c
   709   001D76  A4D8               	btfss	status,2,c
   710   001D78  EFC0  F00E         	goto	u3121
   711   001D7C  EFC2  F00E         	goto	u3120
   712   001D80                     u3121:
   713   001D80  EFB4  F00E         	goto	l3529
   714   001D84                     u3120:
   715   001D84                     
   716                           ;HAL/Push_Button/Push_Button_Prog.c: 85:                 *Copy_BtnStatus = Btn_U_Pressed
      +                          ;
   717   001D84  5041               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   718   001D86  6ED9               	movwf	fsr2l,c
   719   001D88  6ADA               	clrf	fsr2h,c
   720   001D8A  6ADF               	clrf	indf2,c
   721                           
   722                           ;HAL/Push_Button/Push_Button_Prog.c: 86:                 Copy_Btn->Last_Status = Btn_U_P
      +                          ressed;
   723   001D8C  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   724   001D8E  6ED9               	movwf	fsr2l,c
   725   001D90  6ADA               	clrf	fsr2h,c
   726   001D92  9EDF               	bcf	indf2,7,c
   727                           
   728                           ;HAL/Push_Button/Push_Button_Prog.c: 87:             }
   729   001D94  EFD5  F00E         	goto	l3537
   730   001D98                     l3535:
   731                           
   732                           ;HAL/Push_Button/Push_Button_Prog.c: 89:             {;HAL/Push_Button/Push_Button_Prog.
      +                          c: 90:                 *Copy_BtnStatus = Btn_U_Released;
   733   001D98  5041               	movf	HAL_Push_Button_ReadBtn@Copy_BtnStatus^0,w,c
   734   001D9A  6ED9               	movwf	fsr2l,c
   735   001D9C  6ADA               	clrf	fsr2h,c
   736   001D9E  0E01               	movlw	1
   737   001DA0  6EDF               	movwf	indf2,c
   738                           
   739                           ;HAL/Push_Button/Push_Button_Prog.c: 91:                 Copy_Btn->Last_Status = Btn_U_R
      +                          eleased;
   740   001DA2  5040               	movf	HAL_Push_Button_ReadBtn@Copy_Btn^0,w,c
   741   001DA4  6ED9               	movwf	fsr2l,c
   742   001DA6  6ADA               	clrf	fsr2h,c
   743   001DA8  8EDF               	bsf	indf2,7,c
   744   001DAA                     l3537:
   745   001DAA                     l222:
   746   001DAA  0012               	return		;funcret
   747   001DAC                     __end_of_HAL_Push_Button_ReadBtn:
   748                           	callstack 0
   749                           
   750 ;; *************** function _MCAL_DIO_ReadPinValue *****************
   751 ;; Defined at:
   752 ;;		line 307 in file "MCAL/DIO/DIO_Prog.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  Copy_PinInfo    1    0[COMRAM] PTR const struct .
   755 ;;		 -> HAL_Push_Button_ReadBtn@Btn(1), 
   756 ;;  Copy_PinValu    1    1[COMRAM] PTR enum E228
   757 ;;		 -> HAL_Push_Button_ReadBtn@Local_BtnStatus(1), HAL_KeyPad_KeyPadReadNumber@Local_ScanColVal(1), HAL_KeyPad_KeyPadRe
      +adCharacter@Local_ScanColVal(1), 
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  Local_PinVal    1    5[COMRAM] unsigned char 
   760 ;;  Local_ErrorS    1    4[COMRAM] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      unsigned char 
   763 ;; Registers used:
   764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   765 ;; Tracked objects:
   766 ;;		On entry : 0/0
   767 ;;		On exit  : 0/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   771 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   773 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;Total ram usage:        6 bytes
   775 ;; Hardware stack levels used: 1
   776 ;; Hardware stack levels required when called: 1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_HAL_Push_Button_ReadBtn
   781 ;;		_HAL_KeyPad_KeyPadReadCharacter
   782 ;;		_HAL_KeyPad_KeyPadReadNumber
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text2
   787   0019FA                     __ptext2:
   788                           	callstack 0
   789   0019FA                     _MCAL_DIO_ReadPinValue:
   790                           	callstack 28
   791   0019FA                     
   792                           ;MCAL/DIO/DIO_Prog.c: 310:     uint8 Local_PinValue = 6;
   793   0019FA  0E06               	movlw	6
   794   0019FC  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   795   0019FE                     
   796                           ;MCAL/DIO/DIO_Prog.c: 311:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_OUTPUT)
   797   0019FE  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   798   001A00  6ED9               	movwf	fsr2l,c
   799   001A02  6ADA               	clrf	fsr2h,c
   800   001A04  30DF               	rrcf	223,w,c
   801   001A06  32E8               	rrcf	wreg,f,c
   802   001A08  32E8               	rrcf	wreg,f,c
   803   001A0A  0B07               	andlw	7
   804   001A0C  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   805   001A0E  0E08               	movlw	8
   806   001A10  603C               	cpfslt	??_MCAL_DIO_ReadPinValue^0,c
   807   001A12  EF0D  F00D         	goto	u2781
   808   001A16  EF0F  F00D         	goto	u2780
   809   001A1A                     u2781:
   810   001A1A  EF19  F00D         	goto	l3369
   811   001A1E                     u2780:
   812   001A1E  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   813   001A20  6ED9               	movwf	fsr2l,c
   814   001A22  6ADA               	clrf	fsr2h,c
   815   001A24  BCDF               	btfsc	indf2,6,c
   816   001A26  EF17  F00D         	goto	u2791
   817   001A2A  EF19  F00D         	goto	u2790
   818   001A2E                     u2791:
   819   001A2E  EFFA  F00D         	goto	l3439
   820   001A32                     u2790:
   821   001A32                     l3369:
   822                           
   823                           ;MCAL/DIO/DIO_Prog.c: 312:     {;MCAL/DIO/DIO_Prog.c: 313:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
   824   001A32  0E00               	movlw	0
   825   001A34  6E3E               	movwf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,c
   826                           
   827                           ;MCAL/DIO/DIO_Prog.c: 314:     }
   828   001A36  EF15  F00E         	goto	l3441
   829   001A3A                     l3371:
   830                           
   831                           ;MCAL/DIO/DIO_Prog.c: 320:                 Local_PinValue = ((((*((volatile PORTA_t *)0x
      +                          F80)).PORTA_REGISTER) >> Copy_PinInfo->Pin_Num) & 1);
   832   001A3A  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   833   001A3C  6ED9               	movwf	fsr2l,c
   834   001A3E  6ADA               	clrf	fsr2h,c
   835   001A40  30DF               	rrcf	223,w,c
   836   001A42  32E8               	rrcf	wreg,f,c
   837   001A44  32E8               	rrcf	wreg,f,c
   838   001A46  0B07               	andlw	7
   839   001A48  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   840   001A4A  CF80 F03D          	movff	3968,??_MCAL_DIO_ReadPinValue+1	;volatile
   841   001A4E  2A3C               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   842   001A50  EF2C  F00D         	goto	u2804
   843   001A54                     u2805:
   844   001A54  90D8               	bcf	status,0,c
   845   001A56  323D               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   846   001A58                     u2804:
   847   001A58  2E3C               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   848   001A5A  EF2A  F00D         	goto	u2805
   849   001A5E  503D               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   850   001A60  0B01               	andlw	1
   851   001A62  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   852   001A64                     
   853                           ;MCAL/DIO/DIO_Prog.c: 321:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   854   001A64  043F               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   855   001A66  B4D8               	btfsc	status,2,c
   856   001A68  EF38  F00D         	goto	u2811
   857   001A6C  EF3A  F00D         	goto	u2810
   858   001A70                     u2811:
   859   001A70  EF42  F00D         	goto	l3377
   860   001A74                     u2810:
   861   001A74  503F               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   862   001A76  A4D8               	btfss	status,2,c
   863   001A78  EF40  F00D         	goto	u2821
   864   001A7C  EF42  F00D         	goto	u2820
   865   001A80                     u2821:
   866   001A80  EF19  F00D         	goto	l3369
   867   001A84                     u2820:
   868   001A84                     l3377:
   869                           
   870                           ;MCAL/DIO/DIO_Prog.c: 322:                 {;MCAL/DIO/DIO_Prog.c: 323:                  
      +                             *Copy_PinValue = Local_PinValue;
   871   001A84  503B               	movf	MCAL_DIO_ReadPinValue@Copy_PinValue^0,w,c
   872   001A86  6ED9               	movwf	fsr2l,c
   873   001A88  6ADA               	clrf	fsr2h,c
   874   001A8A  C03F  FFDF         	movff	MCAL_DIO_ReadPinValue@Local_PinValue,indf2
   875   001A8E                     
   876                           ;MCAL/DIO/DIO_Prog.c: 324:                     Local_ErrorStatus = (Std_ReturnType)0x01;
   877   001A8E  0E01               	movlw	1
   878   001A90  6E3E               	movwf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,c
   879                           
   880                           ;MCAL/DIO/DIO_Prog.c: 325:                 }
   881   001A92  EF15  F00E         	goto	l3441
   882   001A96                     l3383:
   883                           
   884                           ;MCAL/DIO/DIO_Prog.c: 332:                 Local_PinValue = ((((*((volatile PORTB_t *)0x
      +                          F81)).PORTB_REGISTER) >> Copy_PinInfo->Pin_Num) & 1);
   885   001A96  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   886   001A98  6ED9               	movwf	fsr2l,c
   887   001A9A  6ADA               	clrf	fsr2h,c
   888   001A9C  30DF               	rrcf	223,w,c
   889   001A9E  32E8               	rrcf	wreg,f,c
   890   001AA0  32E8               	rrcf	wreg,f,c
   891   001AA2  0B07               	andlw	7
   892   001AA4  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   893   001AA6  CF81 F03D          	movff	3969,??_MCAL_DIO_ReadPinValue+1	;volatile
   894   001AAA  2A3C               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   895   001AAC  EF5A  F00D         	goto	u2834
   896   001AB0                     u2835:
   897   001AB0  90D8               	bcf	status,0,c
   898   001AB2  323D               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   899   001AB4                     u2834:
   900   001AB4  2E3C               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   901   001AB6  EF58  F00D         	goto	u2835
   902   001ABA  503D               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   903   001ABC  0B01               	andlw	1
   904   001ABE  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   905   001AC0                     
   906                           ;MCAL/DIO/DIO_Prog.c: 333:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   907   001AC0  043F               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   908   001AC2  B4D8               	btfsc	status,2,c
   909   001AC4  EF66  F00D         	goto	u2841
   910   001AC8  EF68  F00D         	goto	u2840
   911   001ACC                     u2841:
   912   001ACC  EF42  F00D         	goto	l3377
   913   001AD0                     u2840:
   914   001AD0  503F               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   915   001AD2  A4D8               	btfss	status,2,c
   916   001AD4  EF6E  F00D         	goto	u2851
   917   001AD8  EF70  F00D         	goto	u2850
   918   001ADC                     u2851:
   919   001ADC  EF19  F00D         	goto	l3369
   920   001AE0                     u2850:
   921   001AE0  EF42  F00D         	goto	l3377
   922   001AE4                     l3395:
   923                           
   924                           ;MCAL/DIO/DIO_Prog.c: 344:                 Local_PinValue = ((((*((volatile PORTC_t *)0x
      +                          F82)).PORTC_REGISTER) >> Copy_PinInfo->Pin_Num) & 1);
   925   001AE4  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   926   001AE6  6ED9               	movwf	fsr2l,c
   927   001AE8  6ADA               	clrf	fsr2h,c
   928   001AEA  30DF               	rrcf	223,w,c
   929   001AEC  32E8               	rrcf	wreg,f,c
   930   001AEE  32E8               	rrcf	wreg,f,c
   931   001AF0  0B07               	andlw	7
   932   001AF2  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   933   001AF4  CF82 F03D          	movff	3970,??_MCAL_DIO_ReadPinValue+1	;volatile
   934   001AF8  2A3C               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   935   001AFA  EF81  F00D         	goto	u2864
   936   001AFE                     u2865:
   937   001AFE  90D8               	bcf	status,0,c
   938   001B00  323D               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   939   001B02                     u2864:
   940   001B02  2E3C               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   941   001B04  EF7F  F00D         	goto	u2865
   942   001B08  503D               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   943   001B0A  0B01               	andlw	1
   944   001B0C  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   945   001B0E                     
   946                           ;MCAL/DIO/DIO_Prog.c: 345:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   947   001B0E  043F               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   948   001B10  B4D8               	btfsc	status,2,c
   949   001B12  EF8D  F00D         	goto	u2871
   950   001B16  EF8F  F00D         	goto	u2870
   951   001B1A                     u2871:
   952   001B1A  EF42  F00D         	goto	l3377
   953   001B1E                     u2870:
   954   001B1E  503F               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   955   001B20  A4D8               	btfss	status,2,c
   956   001B22  EF95  F00D         	goto	u2881
   957   001B26  EF97  F00D         	goto	u2880
   958   001B2A                     u2881:
   959   001B2A  EF19  F00D         	goto	l3369
   960   001B2E                     u2880:
   961   001B2E  EF42  F00D         	goto	l3377
   962   001B32                     l3407:
   963                           
   964                           ;MCAL/DIO/DIO_Prog.c: 356:                 Local_PinValue = ((((*((volatile PORTD_t *)0x
      +                          F83)).PORTD_REGISTER) >> Copy_PinInfo->Pin_Num) & 1);
   965   001B32  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
   966   001B34  6ED9               	movwf	fsr2l,c
   967   001B36  6ADA               	clrf	fsr2h,c
   968   001B38  30DF               	rrcf	223,w,c
   969   001B3A  32E8               	rrcf	wreg,f,c
   970   001B3C  32E8               	rrcf	wreg,f,c
   971   001B3E  0B07               	andlw	7
   972   001B40  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
   973   001B42  CF83 F03D          	movff	3971,??_MCAL_DIO_ReadPinValue+1	;volatile
   974   001B46  2A3C               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
   975   001B48  EFA8  F00D         	goto	u2894
   976   001B4C                     u2895:
   977   001B4C  90D8               	bcf	status,0,c
   978   001B4E  323D               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
   979   001B50                     u2894:
   980   001B50  2E3C               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
   981   001B52  EFA6  F00D         	goto	u2895
   982   001B56  503D               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
   983   001B58  0B01               	andlw	1
   984   001B5A  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
   985   001B5C                     
   986                           ;MCAL/DIO/DIO_Prog.c: 357:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
   987   001B5C  043F               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   988   001B5E  B4D8               	btfsc	status,2,c
   989   001B60  EFB4  F00D         	goto	u2901
   990   001B64  EFB6  F00D         	goto	u2900
   991   001B68                     u2901:
   992   001B68  EF42  F00D         	goto	l3377
   993   001B6C                     u2900:
   994   001B6C  503F               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
   995   001B6E  A4D8               	btfss	status,2,c
   996   001B70  EFBC  F00D         	goto	u2911
   997   001B74  EFBE  F00D         	goto	u2910
   998   001B78                     u2911:
   999   001B78  EF19  F00D         	goto	l3369
  1000   001B7C                     u2910:
  1001   001B7C  EF42  F00D         	goto	l3377
  1002   001B80                     l3419:
  1003                           
  1004                           ;MCAL/DIO/DIO_Prog.c: 368:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  1005   001B80  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
  1006   001B82  6ED9               	movwf	fsr2l,c
  1007   001B84  6ADA               	clrf	fsr2h,c
  1008   001B86  30DF               	rrcf	223,w,c
  1009   001B88  32E8               	rrcf	wreg,f,c
  1010   001B8A  32E8               	rrcf	wreg,f,c
  1011   001B8C  0B07               	andlw	7
  1012   001B8E  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
  1013   001B90  0E02               	movlw	2
  1014   001B92  643C               	cpfsgt	??_MCAL_DIO_ReadPinValue^0,c
  1015   001B94  EFCE  F00D         	goto	u2921
  1016   001B98  EFD0  F00D         	goto	u2920
  1017   001B9C                     u2921:
  1018   001B9C  EFD2  F00D         	goto	l3423
  1019   001BA0                     u2920:
  1020   001BA0  EF19  F00D         	goto	l3369
  1021   001BA4                     l3423:
  1022                           
  1023                           ;MCAL/DIO/DIO_Prog.c: 373:                 Local_PinValue = ((((*((volatile PORTE_t *)0x
      +                          F84)).PORTE_REGISTER) >> Copy_PinInfo->Pin_Num) & 1);
  1024   001BA4  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
  1025   001BA6  6ED9               	movwf	fsr2l,c
  1026   001BA8  6ADA               	clrf	fsr2h,c
  1027   001BAA  30DF               	rrcf	223,w,c
  1028   001BAC  32E8               	rrcf	wreg,f,c
  1029   001BAE  32E8               	rrcf	wreg,f,c
  1030   001BB0  0B07               	andlw	7
  1031   001BB2  6E3C               	movwf	??_MCAL_DIO_ReadPinValue^0,c
  1032   001BB4  5084               	movf	132,w,c	;volatile
  1033   001BB6  0B0F               	andlw	15
  1034   001BB8  6E3D               	movwf	(??_MCAL_DIO_ReadPinValue+1)^0,c
  1035   001BBA  2A3C               	incf	??_MCAL_DIO_ReadPinValue^0,f,c
  1036   001BBC  EFE2  F00D         	goto	u2934
  1037   001BC0                     u2935:
  1038   001BC0  90D8               	bcf	status,0,c
  1039   001BC2  323D               	rrcf	(??_MCAL_DIO_ReadPinValue+1)^0,f,c
  1040   001BC4                     u2934:
  1041   001BC4  2E3C               	decfsz	??_MCAL_DIO_ReadPinValue^0,f,c
  1042   001BC6  EFE0  F00D         	goto	u2935
  1043   001BCA  503D               	movf	(??_MCAL_DIO_ReadPinValue+1)^0,w,c
  1044   001BCC  0B01               	andlw	1
  1045   001BCE  6E3F               	movwf	MCAL_DIO_ReadPinValue@Local_PinValue^0,c
  1046   001BD0                     
  1047                           ;MCAL/DIO/DIO_Prog.c: 374:                 if(Local_PinValue == DIO_HIGH || Local_PinVal
      +                          ue == DIO_LOW)
  1048   001BD0  043F               	decf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
  1049   001BD2  B4D8               	btfsc	status,2,c
  1050   001BD4  EFEE  F00D         	goto	u2941
  1051   001BD8  EFF0  F00D         	goto	u2940
  1052   001BDC                     u2941:
  1053   001BDC  EF42  F00D         	goto	l3377
  1054   001BE0                     u2940:
  1055   001BE0  503F               	movf	MCAL_DIO_ReadPinValue@Local_PinValue^0,w,c
  1056   001BE2  A4D8               	btfss	status,2,c
  1057   001BE4  EFF6  F00D         	goto	u2951
  1058   001BE8  EFF8  F00D         	goto	u2950
  1059   001BEC                     u2951:
  1060   001BEC  EF19  F00D         	goto	l3369
  1061   001BF0                     u2950:
  1062   001BF0  EF42  F00D         	goto	l3377
  1063   001BF4                     l3439:
  1064   001BF4  503A               	movf	MCAL_DIO_ReadPinValue@Copy_PinInfo^0,w,c
  1065   001BF6  6ED9               	movwf	fsr2l,c
  1066   001BF8  6ADA               	clrf	fsr2h,c
  1067   001BFA  50DF               	movf	223,w,c
  1068   001BFC  0B07               	andlw	7
  1069                           
  1070                           ; Switch size 1, requested type "simple"
  1071                           ; Number of cases is 5, Range of values is 0 to 4
  1072                           ; switch strategies available:
  1073                           ; Name         Instructions Cycles
  1074                           ; simple_byte           16     9 (average)
  1075                           ;	Chosen strategy is simple_byte
  1076   001BFE  0A00               	xorlw	0	; case 0
  1077   001C00  B4D8               	btfsc	status,2,c
  1078   001C02  EF1D  F00D         	goto	l3371
  1079   001C06  0A01               	xorlw	1	; case 1
  1080   001C08  B4D8               	btfsc	status,2,c
  1081   001C0A  EF4B  F00D         	goto	l3383
  1082   001C0E  0A03               	xorlw	3	; case 2
  1083   001C10  B4D8               	btfsc	status,2,c
  1084   001C12  EF72  F00D         	goto	l3395
  1085   001C16  0A01               	xorlw	1	; case 3
  1086   001C18  B4D8               	btfsc	status,2,c
  1087   001C1A  EF99  F00D         	goto	l3407
  1088   001C1E  0A07               	xorlw	7	; case 4
  1089   001C20  B4D8               	btfsc	status,2,c
  1090   001C22  EFC0  F00D         	goto	l3419
  1091   001C26  EF19  F00D         	goto	l3369
  1092   001C2A                     l3441:
  1093                           
  1094                           ;MCAL/DIO/DIO_Prog.c: 389:     return Local_ErrorStatus;
  1095   001C2A  503E               	movf	MCAL_DIO_ReadPinValue@Local_ErrorStatus^0,w,c
  1096   001C2C  0012               	return		;funcret
  1097   001C2E                     __end_of_MCAL_DIO_ReadPinValue:
  1098                           	callstack 0
  1099                           
  1100 ;; *************** function _HAL_Push_Button_BtnConfig *****************
  1101 ;; Defined at:
  1102 ;;		line 16 in file "HAL/Push_Button/Push_Button_Prog.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  Copy_Btn        1    4[COMRAM] PTR const struct .
  1105 ;;		 -> Btn(1), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  Btn             1    6[COMRAM] struct .
  1108 ;;  Local_ErrorS    1    0        unsigned char 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      unsigned char 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1118 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1121 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;Total ram usage:        3 bytes
  1123 ;; Hardware stack levels used: 1
  1124 ;; Hardware stack levels required when called: 2
  1125 ;; This function calls:
  1126 ;;		_MCAL_DIO_SetPinDirection
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           	psect	text3
  1133   001E7A                     __ptext3:
  1134                           	callstack 0
  1135   001E7A                     _HAL_Push_Button_BtnConfig:
  1136                           	callstack 28
  1137   001E7A                     
  1138                           ;HAL/Push_Button/Push_Button_Prog.c: 19:     if(Copy_Btn->PORT_ID > Btn_PORTE || Copy_Bt
      +                          n->Pin_Num > Btn_PIN7)
  1139   001E7A  503E               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1140   001E7C  6ED9               	movwf	fsr2l,c
  1141   001E7E  6ADA               	clrf	fsr2h,c
  1142   001E80  50DF               	movf	223,w,c
  1143   001E82  0B07               	andlw	7
  1144   001E84  6E3F               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1145   001E86  0E05               	movlw	5
  1146   001E88  603F               	cpfslt	??_HAL_Push_Button_BtnConfig^0,c
  1147   001E8A  EF49  F00F         	goto	u3011
  1148   001E8E  EF4B  F00F         	goto	u3010
  1149   001E92                     u3011:
  1150   001E92  EF5B  F00F         	goto	l3477
  1151   001E96                     u3010:
  1152   001E96  503E               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1153   001E98  6ED9               	movwf	fsr2l,c
  1154   001E9A  6ADA               	clrf	fsr2h,c
  1155   001E9C  30DF               	rrcf	223,w,c
  1156   001E9E  32E8               	rrcf	wreg,f,c
  1157   001EA0  32E8               	rrcf	wreg,f,c
  1158   001EA2  0B07               	andlw	7
  1159   001EA4  6E3F               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1160   001EA6  0E07               	movlw	7
  1161   001EA8  643F               	cpfsgt	??_HAL_Push_Button_BtnConfig^0,c
  1162   001EAA  EF59  F00F         	goto	u3021
  1163   001EAE  EF5B  F00F         	goto	u3020
  1164   001EB2                     u3021:
  1165   001EB2  EF5D  F00F         	goto	l194
  1166   001EB6                     u3020:
  1167   001EB6                     l3477:
  1168                           
  1169                           ;HAL/Push_Button/Push_Button_Prog.c: 22:     }
  1170   001EB6  EF91  F00F         	goto	l202
  1171   001EBA                     l194:
  1172                           
  1173                           ;HAL/Push_Button/Push_Button_Prog.c: 24:     {;HAL/Push_Button/Push_Button_Prog.c: 25:  
      +                                 Pin_Conig_t Btn = {
  1174   001EBA  C02F  F040         	movff	HAL_Push_Button_BtnConfig@F2816,HAL_Push_Button_BtnConfig@Btn
  1175   001EBE  503E               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1176   001EC0  6ED9               	movwf	fsr2l,c
  1177   001EC2  6ADA               	clrf	fsr2h,c
  1178   001EC4  50DF               	movf	223,w,c
  1179   001EC6  0B07               	andlw	7
  1180   001EC8  6E3F               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1181   001ECA  5040               	movf	HAL_Push_Button_BtnConfig@Btn^0,w,c
  1182   001ECC  183F               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1183   001ECE  0BF8               	andlw	-8
  1184   001ED0  183F               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1185   001ED2  6E40               	movwf	HAL_Push_Button_BtnConfig@Btn^0,c
  1186   001ED4  503E               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1187   001ED6  6ED9               	movwf	fsr2l,c
  1188   001ED8  6ADA               	clrf	fsr2h,c
  1189   001EDA  30DF               	rrcf	223,w,c
  1190   001EDC  32E8               	rrcf	wreg,f,c
  1191   001EDE  32E8               	rrcf	wreg,f,c
  1192   001EE0  0B07               	andlw	7
  1193   001EE2  6E3F               	movwf	??_HAL_Push_Button_BtnConfig^0,c
  1194   001EE4  463F               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1195   001EE6  463F               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1196   001EE8  463F               	rlncf	??_HAL_Push_Button_BtnConfig^0,f,c
  1197   001EEA  5040               	movf	HAL_Push_Button_BtnConfig@Btn^0,w,c
  1198   001EEC  183F               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1199   001EEE  0BC7               	andlw	-57
  1200   001EF0  183F               	xorwf	??_HAL_Push_Button_BtnConfig^0,w,c
  1201   001EF2  6E40               	movwf	HAL_Push_Button_BtnConfig@Btn^0,c
  1202   001EF4  8C40               	bsf	HAL_Push_Button_BtnConfig@Btn^0,6,c
  1203   001EF6  503E               	movf	HAL_Push_Button_BtnConfig@Copy_Btn^0,w,c
  1204   001EF8  6ED9               	movwf	fsr2l,c
  1205   001EFA  6ADA               	clrf	fsr2h,c
  1206   001EFC  AEDF               	btfss	indf2,7,c
  1207   001EFE  D002               	bra	u3035
  1208   001F00  8E40               	bsf	HAL_Push_Button_BtnConfig@Btn^0,7,c
  1209   001F02  D001               	bra	u3037
  1210   001F04                     u3035:
  1211   001F04  9E40               	bcf	HAL_Push_Button_BtnConfig@Btn^0,7,c
  1212   001F06                     u3037:
  1213   001F06                     
  1214                           ;HAL/Push_Button/Push_Button_Prog.c: 31:         if(!MCAL_DIO_SetPinDirection(&Btn))
  1215   001F06  0E40               	movlw	low HAL_Push_Button_BtnConfig@Btn
  1216   001F08  6E3A               	movwf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,c
  1217   001F0A  EC1C  F00A         	call	_MCAL_DIO_SetPinDirection	;wreg free
  1218   001F0E  0900               	iorlw	0
  1219   001F10  A4D8               	btfss	status,2,c
  1220   001F12  EF8D  F00F         	goto	u3041
  1221   001F16  EF8F  F00F         	goto	u3040
  1222   001F1A                     u3041:
  1223   001F1A  EF91  F00F         	goto	l3489
  1224   001F1E                     u3040:
  1225   001F1E  EF5B  F00F         	goto	l3477
  1226   001F22                     l3489:
  1227   001F22                     l202:
  1228   001F22  0012               	return		;funcret
  1229   001F24                     __end_of_HAL_Push_Button_BtnConfig:
  1230                           	callstack 0
  1231                           
  1232 ;; *************** function _HAL_LED_LEDConfig *****************
  1233 ;; Defined at:
  1234 ;;		line 15 in file "HAL/LED/LED_Prog.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  Copy_LED        1    7[COMRAM] PTR const struct .
  1237 ;;		 -> led1(1), 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  LED             1    9[COMRAM] struct .
  1240 ;;  Local_ErrorS    1    0        unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      unsigned char 
  1243 ;; Registers used:
  1244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1253 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used: 1
  1256 ;; Hardware stack levels required when called: 2
  1257 ;; This function calls:
  1258 ;;		_MCAL_DIO_SetPinDirection
  1259 ;;		_MCAL_DIO_SetPinValue
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           	psect	text4
  1266   001DAC                     __ptext4:
  1267                           	callstack 0
  1268   001DAC                     _HAL_LED_LEDConfig:
  1269                           	callstack 28
  1270   001DAC                     
  1271                           ;HAL/LED/LED_Prog.c: 18:     if(Copy_LED->PORT_ID > LED_PORTE || Copy_LED->Pin_Num > LED
      +                          _PIN7)
  1272   001DAC  5041               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1273   001DAE  6ED9               	movwf	fsr2l,c
  1274   001DB0  6ADA               	clrf	fsr2h,c
  1275   001DB2  50DF               	movf	223,w,c
  1276   001DB4  0B07               	andlw	7
  1277   001DB6  6E42               	movwf	??_HAL_LED_LEDConfig^0,c
  1278   001DB8  0E05               	movlw	5
  1279   001DBA  6042               	cpfslt	??_HAL_LED_LEDConfig^0,c
  1280   001DBC  EFE2  F00E         	goto	u2961
  1281   001DC0  EFE4  F00E         	goto	u2960
  1282   001DC4                     u2961:
  1283   001DC4  EFF4  F00E         	goto	l3451
  1284   001DC8                     u2960:
  1285   001DC8  5041               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1286   001DCA  6ED9               	movwf	fsr2l,c
  1287   001DCC  6ADA               	clrf	fsr2h,c
  1288   001DCE  30DF               	rrcf	223,w,c
  1289   001DD0  32E8               	rrcf	wreg,f,c
  1290   001DD2  32E8               	rrcf	wreg,f,c
  1291   001DD4  0B07               	andlw	7
  1292   001DD6  6E42               	movwf	??_HAL_LED_LEDConfig^0,c
  1293   001DD8  0E07               	movlw	7
  1294   001DDA  6442               	cpfsgt	??_HAL_LED_LEDConfig^0,c
  1295   001DDC  EFF2  F00E         	goto	u2971
  1296   001DE0  EFF4  F00E         	goto	u2970
  1297   001DE4                     u2971:
  1298   001DE4  EFF6  F00E         	goto	l99
  1299   001DE8                     u2970:
  1300   001DE8                     l3451:
  1301                           
  1302                           ;HAL/LED/LED_Prog.c: 21:     }
  1303   001DE8  EF3C  F00F         	goto	l109
  1304   001DEC                     l99:
  1305                           
  1306                           ;HAL/LED/LED_Prog.c: 23:     {;HAL/LED/LED_Prog.c: 24:         Pin_Conig_t LED = {
  1307   001DEC  C038  F043         	movff	HAL_LED_LEDConfig@F2830,HAL_LED_LEDConfig@LED
  1308   001DF0  5041               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1309   001DF2  6ED9               	movwf	fsr2l,c
  1310   001DF4  6ADA               	clrf	fsr2h,c
  1311   001DF6  50DF               	movf	223,w,c
  1312   001DF8  0B07               	andlw	7
  1313   001DFA  6E42               	movwf	??_HAL_LED_LEDConfig^0,c
  1314   001DFC  5043               	movf	HAL_LED_LEDConfig@LED^0,w,c
  1315   001DFE  1842               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1316   001E00  0BF8               	andlw	-8
  1317   001E02  1842               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1318   001E04  6E43               	movwf	HAL_LED_LEDConfig@LED^0,c
  1319   001E06  5041               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1320   001E08  6ED9               	movwf	fsr2l,c
  1321   001E0A  6ADA               	clrf	fsr2h,c
  1322   001E0C  30DF               	rrcf	223,w,c
  1323   001E0E  32E8               	rrcf	wreg,f,c
  1324   001E10  32E8               	rrcf	wreg,f,c
  1325   001E12  0B07               	andlw	7
  1326   001E14  6E42               	movwf	??_HAL_LED_LEDConfig^0,c
  1327   001E16  4642               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1328   001E18  4642               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1329   001E1A  4642               	rlncf	??_HAL_LED_LEDConfig^0,f,c
  1330   001E1C  5043               	movf	HAL_LED_LEDConfig@LED^0,w,c
  1331   001E1E  1842               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1332   001E20  0BC7               	andlw	-57
  1333   001E22  1842               	xorwf	??_HAL_LED_LEDConfig^0,w,c
  1334   001E24  6E43               	movwf	HAL_LED_LEDConfig@LED^0,c
  1335   001E26  9C43               	bcf	HAL_LED_LEDConfig@LED^0,6,c
  1336   001E28  5041               	movf	HAL_LED_LEDConfig@Copy_LED^0,w,c
  1337   001E2A  6ED9               	movwf	fsr2l,c
  1338   001E2C  6ADA               	clrf	fsr2h,c
  1339   001E2E  ACDF               	btfss	indf2,6,c
  1340   001E30  D002               	bra	u2985
  1341   001E32  8E43               	bsf	HAL_LED_LEDConfig@LED^0,7,c
  1342   001E34  D001               	bra	u2987
  1343   001E36                     u2985:
  1344   001E36  9E43               	bcf	HAL_LED_LEDConfig@LED^0,7,c
  1345   001E38                     u2987:
  1346   001E38                     
  1347                           ;HAL/LED/LED_Prog.c: 30:         if(!MCAL_DIO_SetPinDirection(&LED))
  1348   001E38  0E43               	movlw	low HAL_LED_LEDConfig@LED
  1349   001E3A  6E3A               	movwf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,c
  1350   001E3C  EC1C  F00A         	call	_MCAL_DIO_SetPinDirection	;wreg free
  1351   001E40  0900               	iorlw	0
  1352   001E42  A4D8               	btfss	status,2,c
  1353   001E44  EF26  F00F         	goto	u2991
  1354   001E48  EF28  F00F         	goto	u2990
  1355   001E4C                     u2991:
  1356   001E4C  EF2A  F00F         	goto	l3463
  1357   001E50                     u2990:
  1358   001E50  EFF4  F00E         	goto	l3451
  1359   001E54                     l3463:
  1360   001E54  0E43               	movlw	low HAL_LED_LEDConfig@LED
  1361   001E56  6E3A               	movwf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,c
  1362   001E58  0E00               	movlw	0
  1363   001E5A  BE43               	btfsc	HAL_LED_LEDConfig@LED^0,7,c
  1364   001E5C  0E01               	movlw	1
  1365   001E5E  6E3B               	movwf	MCAL_DIO_SetPinValue@Copy_PinValue^0,c
  1366   001E60  EC11  F008         	call	_MCAL_DIO_SetPinValue	;wreg free
  1367   001E64  0900               	iorlw	0
  1368   001E66  A4D8               	btfss	status,2,c
  1369   001E68  EF38  F00F         	goto	u3001
  1370   001E6C  EF3A  F00F         	goto	u3000
  1371   001E70                     u3001:
  1372   001E70  EF3C  F00F         	goto	l3467
  1373   001E74                     u3000:
  1374   001E74  EFF4  F00E         	goto	l3451
  1375   001E78                     l3467:
  1376   001E78                     l109:
  1377   001E78  0012               	return		;funcret
  1378   001E7A                     __end_of_HAL_LED_LEDConfig:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _MCAL_DIO_SetPinValue *****************
  1382 ;; Defined at:
  1383 ;;		line 199 in file "MCAL/DIO/DIO_Prog.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  Copy_PinInfo    1    0[COMRAM] PTR struct .
  1386 ;;		 -> HAL_LED_LEDArrayPatternBlink@LED(1), HAL_LED_LEDArrayPatternOff@LED(1), HAL_LED_LEDArrayPatternOn@LED(1), HAL_LE
      +D_LEDOff@LED(1), 
  1387 ;;		 -> HAL_LED_LEDOn@LED(1), HAL_LED_LEDConfig@LED(1), 
  1388 ;;  Copy_PinValu    1    1[COMRAM] enum E228
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  Local_ErrorS    1    6[COMRAM] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      unsigned char 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        7 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_HAL_LED_LEDConfig
  1411 ;;		_HAL_KeyPad_KeyPadInit
  1412 ;;		_HAL_LED_LEDOn
  1413 ;;		_HAL_LED_LEDOff
  1414 ;;		_HAL_LED_LEDArrayPatternOn
  1415 ;;		_HAL_LED_LEDArrayPatternOff
  1416 ;;		_HAL_LED_LEDArrayPatternBlink
  1417 ;;		_MCAL_DIO_InitializePinOutput
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text5
  1422   001022                     __ptext5:
  1423                           	callstack 0
  1424   001022                     _MCAL_DIO_SetPinValue:
  1425                           	callstack 28
  1426   001022                     
  1427                           ;MCAL/DIO/DIO_Prog.c: 202:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_INPUT)
  1428   001022  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1429   001024  6ED9               	movwf	fsr2l,c
  1430   001026  6ADA               	clrf	fsr2h,c
  1431   001028  30DF               	rrcf	223,w,c
  1432   00102A  32E8               	rrcf	wreg,f,c
  1433   00102C  32E8               	rrcf	wreg,f,c
  1434   00102E  0B07               	andlw	7
  1435   001030  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1436   001032  0E08               	movlw	8
  1437   001034  603C               	cpfslt	??_MCAL_DIO_SetPinValue^0,c
  1438   001036  EF1F  F008         	goto	u2421
  1439   00103A  EF21  F008         	goto	u2420
  1440   00103E                     u2421:
  1441   00103E  EF2B  F008         	goto	l3205
  1442   001042                     u2420:
  1443   001042  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1444   001044  6ED9               	movwf	fsr2l,c
  1445   001046  6ADA               	clrf	fsr2h,c
  1446   001048  ACDF               	btfss	indf2,6,c
  1447   00104A  EF29  F008         	goto	u2431
  1448   00104E  EF2B  F008         	goto	u2430
  1449   001052                     u2431:
  1450   001052  EFFF  F009         	goto	l3295
  1451   001056                     u2430:
  1452   001056                     l3205:
  1453                           
  1454                           ;MCAL/DIO/DIO_Prog.c: 203:     {;MCAL/DIO/DIO_Prog.c: 204:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
  1455   001056  0E00               	movlw	0
  1456   001058  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1457                           
  1458                           ;MCAL/DIO/DIO_Prog.c: 205:     }
  1459   00105A  EF1A  F00A         	goto	l3297
  1460   00105E                     l3207:
  1461                           
  1462                           ;MCAL/DIO/DIO_Prog.c: 211:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1463   00105E  0E01               	movlw	1
  1464   001060  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1465                           
  1466                           ;MCAL/DIO/DIO_Prog.c: 212:                 switch(Copy_PinValue)
  1467   001062  EF70  F008         	goto	l3221
  1468   001066                     l3209:
  1469                           
  1470                           ;MCAL/DIO/DIO_Prog.c: 215:                         (((*((volatile LATA_t *)0xF89)).LATA_
      +                          REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  1471   001066  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1472   001068  6ED9               	movwf	fsr2l,c
  1473   00106A  6ADA               	clrf	fsr2h,c
  1474   00106C  30DF               	rrcf	223,w,c
  1475   00106E  32E8               	rrcf	wreg,f,c
  1476   001070  32E8               	rrcf	wreg,f,c
  1477   001072  0B07               	andlw	7
  1478   001074  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1479   001076  0E01               	movlw	1
  1480   001078  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1481   00107A  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1482   00107C  EF42  F008         	goto	u2444
  1483   001080                     u2445:
  1484   001080  90D8               	bcf	status,0,c
  1485   001082  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1486   001084                     u2444:
  1487   001084  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1488   001086  EF40  F008         	goto	u2445
  1489   00108A  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1490   00108C  1289               	iorwf	137,f,c	;volatile
  1491   00108E                     
  1492                           ;MCAL/DIO/DIO_Prog.c: 216:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1493   00108E  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1494   001090  6ED9               	movwf	fsr2l,c
  1495   001092  6ADA               	clrf	fsr2h,c
  1496   001094  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1497   001096  D002               	bra	u2455
  1498   001098  9EDF               	bcf	indf2,7,c
  1499   00109A  D001               	bra	u2456
  1500   00109C                     u2455:
  1501   00109C  8EDF               	bsf	indf2,7,c
  1502   00109E                     u2456:
  1503                           
  1504                           ;MCAL/DIO/DIO_Prog.c: 217:                         break;
  1505   00109E  EF1A  F00A         	goto	l3297
  1506   0010A2                     l3213:
  1507                           
  1508                           ;MCAL/DIO/DIO_Prog.c: 219:                         (((*((volatile LATA_t *)0xF89)).LATA_
      +                          REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  1509   0010A2  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1510   0010A4  6ED9               	movwf	fsr2l,c
  1511   0010A6  6ADA               	clrf	fsr2h,c
  1512   0010A8  30DF               	rrcf	223,w,c
  1513   0010AA  32E8               	rrcf	wreg,f,c
  1514   0010AC  32E8               	rrcf	wreg,f,c
  1515   0010AE  0B07               	andlw	7
  1516   0010B0  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1517   0010B2  0E01               	movlw	1
  1518   0010B4  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1519   0010B6  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1520   0010B8  EF60  F008         	goto	u2464
  1521   0010BC                     u2465:
  1522   0010BC  90D8               	bcf	status,0,c
  1523   0010BE  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1524   0010C0                     u2464:
  1525   0010C0  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1526   0010C2  EF5E  F008         	goto	u2465
  1527   0010C6  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1528   0010C8  0AFF               	xorlw	255
  1529   0010CA  1689               	andwf	137,f,c	;volatile
  1530   0010CC                     
  1531                           ;MCAL/DIO/DIO_Prog.c: 220:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1532   0010CC  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1533   0010CE  6ED9               	movwf	fsr2l,c
  1534   0010D0  6ADA               	clrf	fsr2h,c
  1535   0010D2  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1536   0010D4  D002               	bra	u2475
  1537   0010D6  9EDF               	bcf	indf2,7,c
  1538   0010D8  D001               	bra	u2476
  1539   0010DA                     u2475:
  1540   0010DA  8EDF               	bsf	indf2,7,c
  1541   0010DC                     u2476:
  1542                           
  1543                           ;MCAL/DIO/DIO_Prog.c: 221:                         break;
  1544   0010DC  EF1A  F00A         	goto	l3297
  1545   0010E0                     l3221:
  1546   0010E0  503B               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1547   0010E2  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1548   0010E4  6A3D               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1549                           
  1550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1551                           ; Switch size 1, requested type "simple"
  1552                           ; Number of cases is 1, Range of values is 0 to 0
  1553                           ; switch strategies available:
  1554                           ; Name         Instructions Cycles
  1555                           ; simple_byte            4     3 (average)
  1556                           ;	Chosen strategy is simple_byte
  1557   0010E6  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1558   0010E8  0A00               	xorlw	0	; case 0
  1559   0010EA  B4D8               	btfsc	status,2,c
  1560   0010EC  EF7A  F008         	goto	l3993
  1561   0010F0  EF2B  F008         	goto	l3205
  1562   0010F4                     l3993:
  1563                           
  1564                           ; Switch size 1, requested type "simple"
  1565                           ; Number of cases is 2, Range of values is 0 to 1
  1566                           ; switch strategies available:
  1567                           ; Name         Instructions Cycles
  1568                           ; simple_byte            7     4 (average)
  1569                           ;	Chosen strategy is simple_byte
  1570   0010F4  503C               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1571   0010F6  0A00               	xorlw	0	; case 0
  1572   0010F8  B4D8               	btfsc	status,2,c
  1573   0010FA  EF51  F008         	goto	l3213
  1574   0010FE  0A01               	xorlw	1	; case 1
  1575   001100  B4D8               	btfsc	status,2,c
  1576   001102  EF33  F008         	goto	l3209
  1577   001106  EF2B  F008         	goto	l3205
  1578   00110A                     l3223:
  1579                           
  1580                           ;MCAL/DIO/DIO_Prog.c: 228:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1581   00110A  0E01               	movlw	1
  1582   00110C  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1583                           
  1584                           ;MCAL/DIO/DIO_Prog.c: 229:                 switch(Copy_PinValue)
  1585   00110E  EFC6  F008         	goto	l3237
  1586   001112                     l3225:
  1587                           
  1588                           ;MCAL/DIO/DIO_Prog.c: 232:                         (((*((volatile LATB_t *)0xF8A)).LATB_
      +                          REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  1589   001112  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1590   001114  6ED9               	movwf	fsr2l,c
  1591   001116  6ADA               	clrf	fsr2h,c
  1592   001118  30DF               	rrcf	223,w,c
  1593   00111A  32E8               	rrcf	wreg,f,c
  1594   00111C  32E8               	rrcf	wreg,f,c
  1595   00111E  0B07               	andlw	7
  1596   001120  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1597   001122  0E01               	movlw	1
  1598   001124  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1599   001126  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1600   001128  EF98  F008         	goto	u2484
  1601   00112C                     u2485:
  1602   00112C  90D8               	bcf	status,0,c
  1603   00112E  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1604   001130                     u2484:
  1605   001130  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1606   001132  EF96  F008         	goto	u2485
  1607   001136  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1608   001138  128A               	iorwf	138,f,c	;volatile
  1609   00113A                     
  1610                           ;MCAL/DIO/DIO_Prog.c: 233:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1611   00113A  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1612   00113C  6ED9               	movwf	fsr2l,c
  1613   00113E  6ADA               	clrf	fsr2h,c
  1614   001140  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1615   001142  D002               	bra	u2495
  1616   001144  9EDF               	bcf	indf2,7,c
  1617   001146  D001               	bra	u2496
  1618   001148                     u2495:
  1619   001148  8EDF               	bsf	indf2,7,c
  1620   00114A                     u2496:
  1621                           
  1622                           ;MCAL/DIO/DIO_Prog.c: 234:                         break;
  1623   00114A  EF1A  F00A         	goto	l3297
  1624   00114E                     l3229:
  1625                           
  1626                           ;MCAL/DIO/DIO_Prog.c: 236:                         (((*((volatile LATB_t *)0xF8A)).LATB_
      +                          REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  1627   00114E  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1628   001150  6ED9               	movwf	fsr2l,c
  1629   001152  6ADA               	clrf	fsr2h,c
  1630   001154  30DF               	rrcf	223,w,c
  1631   001156  32E8               	rrcf	wreg,f,c
  1632   001158  32E8               	rrcf	wreg,f,c
  1633   00115A  0B07               	andlw	7
  1634   00115C  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1635   00115E  0E01               	movlw	1
  1636   001160  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1637   001162  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1638   001164  EFB6  F008         	goto	u2504
  1639   001168                     u2505:
  1640   001168  90D8               	bcf	status,0,c
  1641   00116A  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1642   00116C                     u2504:
  1643   00116C  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1644   00116E  EFB4  F008         	goto	u2505
  1645   001172  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1646   001174  0AFF               	xorlw	255
  1647   001176  168A               	andwf	138,f,c	;volatile
  1648   001178                     
  1649                           ;MCAL/DIO/DIO_Prog.c: 237:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1650   001178  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1651   00117A  6ED9               	movwf	fsr2l,c
  1652   00117C  6ADA               	clrf	fsr2h,c
  1653   00117E  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1654   001180  D002               	bra	u2515
  1655   001182  9EDF               	bcf	indf2,7,c
  1656   001184  D001               	bra	u2516
  1657   001186                     u2515:
  1658   001186  8EDF               	bsf	indf2,7,c
  1659   001188                     u2516:
  1660                           
  1661                           ;MCAL/DIO/DIO_Prog.c: 238:                         break;
  1662   001188  EF1A  F00A         	goto	l3297
  1663   00118C                     l3237:
  1664   00118C  503B               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1665   00118E  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1666   001190  6A3D               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1667                           
  1668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1669                           ; Switch size 1, requested type "simple"
  1670                           ; Number of cases is 1, Range of values is 0 to 0
  1671                           ; switch strategies available:
  1672                           ; Name         Instructions Cycles
  1673                           ; simple_byte            4     3 (average)
  1674                           ;	Chosen strategy is simple_byte
  1675   001192  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1676   001194  0A00               	xorlw	0	; case 0
  1677   001196  B4D8               	btfsc	status,2,c
  1678   001198  EFD0  F008         	goto	l3995
  1679   00119C  EF2B  F008         	goto	l3205
  1680   0011A0                     l3995:
  1681                           
  1682                           ; Switch size 1, requested type "simple"
  1683                           ; Number of cases is 2, Range of values is 0 to 1
  1684                           ; switch strategies available:
  1685                           ; Name         Instructions Cycles
  1686                           ; simple_byte            7     4 (average)
  1687                           ;	Chosen strategy is simple_byte
  1688   0011A0  503C               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1689   0011A2  0A00               	xorlw	0	; case 0
  1690   0011A4  B4D8               	btfsc	status,2,c
  1691   0011A6  EFA7  F008         	goto	l3229
  1692   0011AA  0A01               	xorlw	1	; case 1
  1693   0011AC  B4D8               	btfsc	status,2,c
  1694   0011AE  EF89  F008         	goto	l3225
  1695   0011B2  EF2B  F008         	goto	l3205
  1696   0011B6                     l3239:
  1697                           
  1698                           ;MCAL/DIO/DIO_Prog.c: 245:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1699   0011B6  0E01               	movlw	1
  1700   0011B8  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1701                           
  1702                           ;MCAL/DIO/DIO_Prog.c: 246:                 switch(Copy_PinValue)
  1703   0011BA  EF1C  F009         	goto	l3253
  1704   0011BE                     l3241:
  1705                           
  1706                           ;MCAL/DIO/DIO_Prog.c: 249:                         (((*((volatile LATC_t *)0xF8B)).LATC_
      +                          REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  1707   0011BE  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1708   0011C0  6ED9               	movwf	fsr2l,c
  1709   0011C2  6ADA               	clrf	fsr2h,c
  1710   0011C4  30DF               	rrcf	223,w,c
  1711   0011C6  32E8               	rrcf	wreg,f,c
  1712   0011C8  32E8               	rrcf	wreg,f,c
  1713   0011CA  0B07               	andlw	7
  1714   0011CC  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1715   0011CE  0E01               	movlw	1
  1716   0011D0  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1717   0011D2  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1718   0011D4  EFEE  F008         	goto	u2524
  1719   0011D8                     u2525:
  1720   0011D8  90D8               	bcf	status,0,c
  1721   0011DA  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1722   0011DC                     u2524:
  1723   0011DC  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1724   0011DE  EFEC  F008         	goto	u2525
  1725   0011E2  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1726   0011E4  128B               	iorwf	139,f,c	;volatile
  1727   0011E6                     
  1728                           ;MCAL/DIO/DIO_Prog.c: 250:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1729   0011E6  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1730   0011E8  6ED9               	movwf	fsr2l,c
  1731   0011EA  6ADA               	clrf	fsr2h,c
  1732   0011EC  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1733   0011EE  D002               	bra	u2535
  1734   0011F0  9EDF               	bcf	indf2,7,c
  1735   0011F2  D001               	bra	u2536
  1736   0011F4                     u2535:
  1737   0011F4  8EDF               	bsf	indf2,7,c
  1738   0011F6                     u2536:
  1739                           
  1740                           ;MCAL/DIO/DIO_Prog.c: 251:                         break;
  1741   0011F6  EF1A  F00A         	goto	l3297
  1742   0011FA                     l3245:
  1743                           
  1744                           ;MCAL/DIO/DIO_Prog.c: 253:                         (((*((volatile LATC_t *)0xF8B)).LATC_
      +                          REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  1745   0011FA  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1746   0011FC  6ED9               	movwf	fsr2l,c
  1747   0011FE  6ADA               	clrf	fsr2h,c
  1748   001200  30DF               	rrcf	223,w,c
  1749   001202  32E8               	rrcf	wreg,f,c
  1750   001204  32E8               	rrcf	wreg,f,c
  1751   001206  0B07               	andlw	7
  1752   001208  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1753   00120A  0E01               	movlw	1
  1754   00120C  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1755   00120E  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1756   001210  EF0C  F009         	goto	u2544
  1757   001214                     u2545:
  1758   001214  90D8               	bcf	status,0,c
  1759   001216  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1760   001218                     u2544:
  1761   001218  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1762   00121A  EF0A  F009         	goto	u2545
  1763   00121E  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1764   001220  0AFF               	xorlw	255
  1765   001222  168B               	andwf	139,f,c	;volatile
  1766   001224                     
  1767                           ;MCAL/DIO/DIO_Prog.c: 254:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1768   001224  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1769   001226  6ED9               	movwf	fsr2l,c
  1770   001228  6ADA               	clrf	fsr2h,c
  1771   00122A  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1772   00122C  D002               	bra	u2555
  1773   00122E  9EDF               	bcf	indf2,7,c
  1774   001230  D001               	bra	u2556
  1775   001232                     u2555:
  1776   001232  8EDF               	bsf	indf2,7,c
  1777   001234                     u2556:
  1778                           
  1779                           ;MCAL/DIO/DIO_Prog.c: 255:                         break;
  1780   001234  EF1A  F00A         	goto	l3297
  1781   001238                     l3253:
  1782   001238  503B               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1783   00123A  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1784   00123C  6A3D               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1785                           
  1786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1787                           ; Switch size 1, requested type "simple"
  1788                           ; Number of cases is 1, Range of values is 0 to 0
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte            4     3 (average)
  1792                           ;	Chosen strategy is simple_byte
  1793   00123E  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1794   001240  0A00               	xorlw	0	; case 0
  1795   001242  B4D8               	btfsc	status,2,c
  1796   001244  EF26  F009         	goto	l3997
  1797   001248  EF2B  F008         	goto	l3205
  1798   00124C                     l3997:
  1799                           
  1800                           ; Switch size 1, requested type "simple"
  1801                           ; Number of cases is 2, Range of values is 0 to 1
  1802                           ; switch strategies available:
  1803                           ; Name         Instructions Cycles
  1804                           ; simple_byte            7     4 (average)
  1805                           ;	Chosen strategy is simple_byte
  1806   00124C  503C               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1807   00124E  0A00               	xorlw	0	; case 0
  1808   001250  B4D8               	btfsc	status,2,c
  1809   001252  EFFD  F008         	goto	l3245
  1810   001256  0A01               	xorlw	1	; case 1
  1811   001258  B4D8               	btfsc	status,2,c
  1812   00125A  EFDF  F008         	goto	l3241
  1813   00125E  EF2B  F008         	goto	l3205
  1814   001262                     l3255:
  1815                           
  1816                           ;MCAL/DIO/DIO_Prog.c: 262:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1817   001262  0E01               	movlw	1
  1818   001264  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1819                           
  1820                           ;MCAL/DIO/DIO_Prog.c: 263:                 switch(Copy_PinValue)
  1821   001266  EF72  F009         	goto	l3269
  1822   00126A                     l3257:
  1823                           
  1824                           ;MCAL/DIO/DIO_Prog.c: 266:                         (((*((volatile LATD_t *)0xF8C)).LATD_
      +                          REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  1825   00126A  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1826   00126C  6ED9               	movwf	fsr2l,c
  1827   00126E  6ADA               	clrf	fsr2h,c
  1828   001270  30DF               	rrcf	223,w,c
  1829   001272  32E8               	rrcf	wreg,f,c
  1830   001274  32E8               	rrcf	wreg,f,c
  1831   001276  0B07               	andlw	7
  1832   001278  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1833   00127A  0E01               	movlw	1
  1834   00127C  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1835   00127E  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1836   001280  EF44  F009         	goto	u2564
  1837   001284                     u2565:
  1838   001284  90D8               	bcf	status,0,c
  1839   001286  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1840   001288                     u2564:
  1841   001288  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1842   00128A  EF42  F009         	goto	u2565
  1843   00128E  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1844   001290  128C               	iorwf	140,f,c	;volatile
  1845   001292                     
  1846                           ;MCAL/DIO/DIO_Prog.c: 267:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1847   001292  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1848   001294  6ED9               	movwf	fsr2l,c
  1849   001296  6ADA               	clrf	fsr2h,c
  1850   001298  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1851   00129A  D002               	bra	u2575
  1852   00129C  9EDF               	bcf	indf2,7,c
  1853   00129E  D001               	bra	u2576
  1854   0012A0                     u2575:
  1855   0012A0  8EDF               	bsf	indf2,7,c
  1856   0012A2                     u2576:
  1857                           
  1858                           ;MCAL/DIO/DIO_Prog.c: 268:                         break;
  1859   0012A2  EF1A  F00A         	goto	l3297
  1860   0012A6                     l3261:
  1861                           
  1862                           ;MCAL/DIO/DIO_Prog.c: 270:                         (((*((volatile LATD_t *)0xF8C)).LATD_
      +                          REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  1863   0012A6  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1864   0012A8  6ED9               	movwf	fsr2l,c
  1865   0012AA  6ADA               	clrf	fsr2h,c
  1866   0012AC  30DF               	rrcf	223,w,c
  1867   0012AE  32E8               	rrcf	wreg,f,c
  1868   0012B0  32E8               	rrcf	wreg,f,c
  1869   0012B2  0B07               	andlw	7
  1870   0012B4  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1871   0012B6  0E01               	movlw	1
  1872   0012B8  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1873   0012BA  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1874   0012BC  EF62  F009         	goto	u2584
  1875   0012C0                     u2585:
  1876   0012C0  90D8               	bcf	status,0,c
  1877   0012C2  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1878   0012C4                     u2584:
  1879   0012C4  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1880   0012C6  EF60  F009         	goto	u2585
  1881   0012CA  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1882   0012CC  0AFF               	xorlw	255
  1883   0012CE  168C               	andwf	140,f,c	;volatile
  1884   0012D0                     
  1885                           ;MCAL/DIO/DIO_Prog.c: 271:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1886   0012D0  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1887   0012D2  6ED9               	movwf	fsr2l,c
  1888   0012D4  6ADA               	clrf	fsr2h,c
  1889   0012D6  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1890   0012D8  D002               	bra	u2595
  1891   0012DA  9EDF               	bcf	indf2,7,c
  1892   0012DC  D001               	bra	u2596
  1893   0012DE                     u2595:
  1894   0012DE  8EDF               	bsf	indf2,7,c
  1895   0012E0                     u2596:
  1896                           
  1897                           ;MCAL/DIO/DIO_Prog.c: 272:                         break;
  1898   0012E0  EF1A  F00A         	goto	l3297
  1899   0012E4                     l3269:
  1900   0012E4  503B               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  1901   0012E6  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1902   0012E8  6A3D               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1903                           
  1904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1905                           ; Switch size 1, requested type "simple"
  1906                           ; Number of cases is 1, Range of values is 0 to 0
  1907                           ; switch strategies available:
  1908                           ; Name         Instructions Cycles
  1909                           ; simple_byte            4     3 (average)
  1910                           ;	Chosen strategy is simple_byte
  1911   0012EA  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1912   0012EC  0A00               	xorlw	0	; case 0
  1913   0012EE  B4D8               	btfsc	status,2,c
  1914   0012F0  EF7C  F009         	goto	l3999
  1915   0012F4  EF2B  F008         	goto	l3205
  1916   0012F8                     l3999:
  1917                           
  1918                           ; Switch size 1, requested type "simple"
  1919                           ; Number of cases is 2, Range of values is 0 to 1
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte            7     4 (average)
  1923                           ;	Chosen strategy is simple_byte
  1924   0012F8  503C               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  1925   0012FA  0A00               	xorlw	0	; case 0
  1926   0012FC  B4D8               	btfsc	status,2,c
  1927   0012FE  EF53  F009         	goto	l3261
  1928   001302  0A01               	xorlw	1	; case 1
  1929   001304  B4D8               	btfsc	status,2,c
  1930   001306  EF35  F009         	goto	l3257
  1931   00130A  EF2B  F008         	goto	l3205
  1932   00130E                     l3271:
  1933                           
  1934                           ;MCAL/DIO/DIO_Prog.c: 279:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  1935   00130E  0E01               	movlw	1
  1936   001310  6E40               	movwf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,c
  1937   001312                     
  1938                           ;MCAL/DIO/DIO_Prog.c: 280:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  1939   001312  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1940   001314  6ED9               	movwf	fsr2l,c
  1941   001316  6ADA               	clrf	fsr2h,c
  1942   001318  30DF               	rrcf	223,w,c
  1943   00131A  32E8               	rrcf	wreg,f,c
  1944   00131C  32E8               	rrcf	wreg,f,c
  1945   00131E  0B07               	andlw	7
  1946   001320  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1947   001322  0E02               	movlw	2
  1948   001324  643C               	cpfsgt	??_MCAL_DIO_SetPinValue^0,c
  1949   001326  EF97  F009         	goto	u2601
  1950   00132A  EF99  F009         	goto	u2600
  1951   00132E                     u2601:
  1952   00132E  EFEA  F009         	goto	l3289
  1953   001332                     u2600:
  1954   001332  EF2B  F008         	goto	l3205
  1955   001336                     l3277:
  1956                           
  1957                           ;MCAL/DIO/DIO_Prog.c: 288:                         (((*((volatile LATE_t *)0xF8D)).LATE_
      +                          REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  1958   001336  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1959   001338  6ED9               	movwf	fsr2l,c
  1960   00133A  6ADA               	clrf	fsr2h,c
  1961   00133C  30DF               	rrcf	223,w,c
  1962   00133E  32E8               	rrcf	wreg,f,c
  1963   001340  32E8               	rrcf	wreg,f,c
  1964   001342  0B07               	andlw	7
  1965   001344  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  1966   001346  0E01               	movlw	1
  1967   001348  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  1968   00134A  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  1969   00134C  EFAA  F009         	goto	u2614
  1970   001350                     u2615:
  1971   001350  90D8               	bcf	status,0,c
  1972   001352  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  1973   001354                     u2614:
  1974   001354  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  1975   001356  EFA8  F009         	goto	u2615
  1976   00135A  508D               	movf	141,w,c	;volatile
  1977   00135C  0B07               	andlw	7
  1978   00135E  6E3E               	movwf	(??_MCAL_DIO_SetPinValue+2)^0,c
  1979   001360  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  1980   001362  123E               	iorwf	(??_MCAL_DIO_SetPinValue+2)^0,f,c
  1981   001364  508D               	movf	141,w,c	;volatile
  1982   001366  183E               	xorwf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  1983   001368  0BF8               	andlw	-8
  1984   00136A  183E               	xorwf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  1985   00136C  6E8D               	movwf	141,c	;volatile
  1986   00136E                     
  1987                           ;MCAL/DIO/DIO_Prog.c: 289:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  1988   00136E  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  1989   001370  6ED9               	movwf	fsr2l,c
  1990   001372  6ADA               	clrf	fsr2h,c
  1991   001374  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  1992   001376  D002               	bra	u2625
  1993   001378  9EDF               	bcf	indf2,7,c
  1994   00137A  D001               	bra	u2626
  1995   00137C                     u2625:
  1996   00137C  8EDF               	bsf	indf2,7,c
  1997   00137E                     u2626:
  1998                           
  1999                           ;MCAL/DIO/DIO_Prog.c: 290:                         break;
  2000   00137E  EF1A  F00A         	goto	l3297
  2001   001382                     l3281:
  2002                           
  2003                           ;MCAL/DIO/DIO_Prog.c: 292:                         (((*((volatile LATE_t *)0xF8D)).LATE_
      +                          REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2004   001382  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  2005   001384  6ED9               	movwf	fsr2l,c
  2006   001386  6ADA               	clrf	fsr2h,c
  2007   001388  30DF               	rrcf	223,w,c
  2008   00138A  32E8               	rrcf	wreg,f,c
  2009   00138C  32E8               	rrcf	wreg,f,c
  2010   00138E  0B07               	andlw	7
  2011   001390  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  2012   001392  0E01               	movlw	1
  2013   001394  6E3D               	movwf	(??_MCAL_DIO_SetPinValue+1)^0,c
  2014   001396  2A3C               	incf	??_MCAL_DIO_SetPinValue^0,f,c
  2015   001398  EFD0  F009         	goto	u2634
  2016   00139C                     u2635:
  2017   00139C  90D8               	bcf	status,0,c
  2018   00139E  363D               	rlcf	(??_MCAL_DIO_SetPinValue+1)^0,f,c
  2019   0013A0                     u2634:
  2020   0013A0  2E3C               	decfsz	??_MCAL_DIO_SetPinValue^0,f,c
  2021   0013A2  EFCE  F009         	goto	u2635
  2022   0013A6  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  2023   0013A8  0AFF               	xorlw	255
  2024   0013AA  6E3E               	movwf	(??_MCAL_DIO_SetPinValue+2)^0,c
  2025   0013AC  508D               	movf	141,w,c	;volatile
  2026   0013AE  0B07               	andlw	7
  2027   0013B0  6E3F               	movwf	(??_MCAL_DIO_SetPinValue+3)^0,c
  2028   0013B2  503E               	movf	(??_MCAL_DIO_SetPinValue+2)^0,w,c
  2029   0013B4  163F               	andwf	(??_MCAL_DIO_SetPinValue+3)^0,f,c
  2030   0013B6  508D               	movf	141,w,c	;volatile
  2031   0013B8  183F               	xorwf	(??_MCAL_DIO_SetPinValue+3)^0,w,c
  2032   0013BA  0BF8               	andlw	-8
  2033   0013BC  183F               	xorwf	(??_MCAL_DIO_SetPinValue+3)^0,w,c
  2034   0013BE  6E8D               	movwf	141,c	;volatile
  2035   0013C0                     
  2036                           ;MCAL/DIO/DIO_Prog.c: 293:                         Copy_PinInfo->Pin_Value = Copy_PinVal
      +                          ue;
  2037   0013C0  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  2038   0013C2  6ED9               	movwf	fsr2l,c
  2039   0013C4  6ADA               	clrf	fsr2h,c
  2040   0013C6  B03B               	btfsc	MCAL_DIO_SetPinValue@Copy_PinValue^0,0,c
  2041   0013C8  D002               	bra	u2645
  2042   0013CA  9EDF               	bcf	indf2,7,c
  2043   0013CC  D001               	bra	u2646
  2044   0013CE                     u2645:
  2045   0013CE  8EDF               	bsf	indf2,7,c
  2046   0013D0                     u2646:
  2047                           
  2048                           ;MCAL/DIO/DIO_Prog.c: 294:                         break;
  2049   0013D0  EF1A  F00A         	goto	l3297
  2050   0013D4                     l3289:
  2051   0013D4  503B               	movf	MCAL_DIO_SetPinValue@Copy_PinValue^0,w,c
  2052   0013D6  6E3C               	movwf	??_MCAL_DIO_SetPinValue^0,c
  2053   0013D8  6A3D               	clrf	(??_MCAL_DIO_SetPinValue+1)^0,c
  2054                           
  2055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2056                           ; Switch size 1, requested type "simple"
  2057                           ; Number of cases is 1, Range of values is 0 to 0
  2058                           ; switch strategies available:
  2059                           ; Name         Instructions Cycles
  2060                           ; simple_byte            4     3 (average)
  2061                           ;	Chosen strategy is simple_byte
  2062   0013DA  503D               	movf	(??_MCAL_DIO_SetPinValue+1)^0,w,c
  2063   0013DC  0A00               	xorlw	0	; case 0
  2064   0013DE  B4D8               	btfsc	status,2,c
  2065   0013E0  EFF4  F009         	goto	l4001
  2066   0013E4  EF2B  F008         	goto	l3205
  2067   0013E8                     l4001:
  2068                           
  2069                           ; Switch size 1, requested type "simple"
  2070                           ; Number of cases is 2, Range of values is 0 to 1
  2071                           ; switch strategies available:
  2072                           ; Name         Instructions Cycles
  2073                           ; simple_byte            7     4 (average)
  2074                           ;	Chosen strategy is simple_byte
  2075   0013E8  503C               	movf	??_MCAL_DIO_SetPinValue^0,w,c
  2076   0013EA  0A00               	xorlw	0	; case 0
  2077   0013EC  B4D8               	btfsc	status,2,c
  2078   0013EE  EFC1  F009         	goto	l3281
  2079   0013F2  0A01               	xorlw	1	; case 1
  2080   0013F4  B4D8               	btfsc	status,2,c
  2081   0013F6  EF9B  F009         	goto	l3277
  2082   0013FA  EF2B  F008         	goto	l3205
  2083   0013FE                     l3295:
  2084   0013FE  503A               	movf	MCAL_DIO_SetPinValue@Copy_PinInfo^0,w,c
  2085   001400  6ED9               	movwf	fsr2l,c
  2086   001402  6ADA               	clrf	fsr2h,c
  2087   001404  50DF               	movf	223,w,c
  2088   001406  0B07               	andlw	7
  2089                           
  2090                           ; Switch size 1, requested type "simple"
  2091                           ; Number of cases is 5, Range of values is 0 to 4
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte           16     9 (average)
  2095                           ;	Chosen strategy is simple_byte
  2096   001408  0A00               	xorlw	0	; case 0
  2097   00140A  B4D8               	btfsc	status,2,c
  2098   00140C  EF2F  F008         	goto	l3207
  2099   001410  0A01               	xorlw	1	; case 1
  2100   001412  B4D8               	btfsc	status,2,c
  2101   001414  EF85  F008         	goto	l3223
  2102   001418  0A03               	xorlw	3	; case 2
  2103   00141A  B4D8               	btfsc	status,2,c
  2104   00141C  EFDB  F008         	goto	l3239
  2105   001420  0A01               	xorlw	1	; case 3
  2106   001422  B4D8               	btfsc	status,2,c
  2107   001424  EF31  F009         	goto	l3255
  2108   001428  0A07               	xorlw	7	; case 4
  2109   00142A  B4D8               	btfsc	status,2,c
  2110   00142C  EF87  F009         	goto	l3271
  2111   001430  EF2B  F008         	goto	l3205
  2112   001434                     l3297:
  2113                           
  2114                           ;MCAL/DIO/DIO_Prog.c: 305:     return Local_ErrorStatus;
  2115   001434  5040               	movf	MCAL_DIO_SetPinValue@Local_ErrorStatus^0,w,c
  2116   001436  0012               	return		;funcret
  2117   001438                     __end_of_MCAL_DIO_SetPinValue:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _MCAL_DIO_SetPinDirection *****************
  2121 ;; Defined at:
  2122 ;;		line 16 in file "MCAL/DIO/DIO_Prog.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  Copy_PinInfo    1    0[COMRAM] PTR const struct .
  2125 ;;		 -> MCAL_Interrupt_EXTIntStatus@INT2(1), MCAL_Interrupt_EXTIntStatus@INT1(1), MCAL_Interrupt_EXTIntStatus@INT0(1), H
      +AL_Push_Button_BtnConfig@Btn(1), 
  2126 ;;		 -> HAL_LED_LEDArrayConfig@LED(1), HAL_LED_LEDConfig@LED(1), 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  Local_ErrorS    1    3[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      unsigned char 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        4 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_HAL_LED_LEDConfig
  2149 ;;		_HAL_Push_Button_BtnConfig
  2150 ;;		_HAL_KeyPad_KeyPadInit
  2151 ;;		_HAL_LED_LEDArrayConfig
  2152 ;;		_MCAL_DIO_InitializePinOutput
  2153 ;;		_MCAL_Interrupt_EXTIntStatus
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text6
  2158   001438                     __ptext6:
  2159                           	callstack 0
  2160   001438                     _MCAL_DIO_SetPinDirection:
  2161                           	callstack 28
  2162   001438                     
  2163                           ;MCAL/DIO/DIO_Prog.c: 19:     if(Copy_PinInfo->Pin_Num > DIO_PIN7)
  2164   001438  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2165   00143A  6ED9               	movwf	fsr2l,c
  2166   00143C  6ADA               	clrf	fsr2h,c
  2167   00143E  30DF               	rrcf	223,w,c
  2168   001440  32E8               	rrcf	wreg,f,c
  2169   001442  32E8               	rrcf	wreg,f,c
  2170   001444  0B07               	andlw	7
  2171   001446  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2172   001448  0E07               	movlw	7
  2173   00144A  643B               	cpfsgt	??_MCAL_DIO_SetPinDirection^0,c
  2174   00144C  EF2A  F00A         	goto	u2251
  2175   001450  EF2C  F00A         	goto	u2250
  2176   001454                     u2251:
  2177   001454  EFA3  F00B         	goto	l3193
  2178   001458                     u2250:
  2179   001458                     l3123:
  2180                           
  2181                           ;MCAL/DIO/DIO_Prog.c: 20:     {;MCAL/DIO/DIO_Prog.c: 21:         Local_ErrorStatus = (St
      +                          d_ReturnType)0x00;
  2182   001458  0E00               	movlw	0
  2183   00145A  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2184                           
  2185                           ;MCAL/DIO/DIO_Prog.c: 22:     }
  2186   00145C  EFBE  F00B         	goto	l3195
  2187   001460                     l3125:
  2188                           
  2189                           ;MCAL/DIO/DIO_Prog.c: 28:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2190   001460  0E01               	movlw	1
  2191   001462  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2192                           
  2193                           ;MCAL/DIO/DIO_Prog.c: 29:                 switch(Copy_PinInfo->Pin_Direction)
  2194   001464  EF61  F00A         	goto	l3135
  2195   001468                     l3127:
  2196                           
  2197                           ;MCAL/DIO/DIO_Prog.c: 32:                         (((*((volatile TRISA_t *)0xF92)).TRISA
      +                          _REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  2198   001468  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2199   00146A  6ED9               	movwf	fsr2l,c
  2200   00146C  6ADA               	clrf	fsr2h,c
  2201   00146E  30DF               	rrcf	223,w,c
  2202   001470  32E8               	rrcf	wreg,f,c
  2203   001472  32E8               	rrcf	wreg,f,c
  2204   001474  0B07               	andlw	7
  2205   001476  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2206   001478  0E01               	movlw	1
  2207   00147A  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2208   00147C  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2209   00147E  EF43  F00A         	goto	u2264
  2210   001482                     u2265:
  2211   001482  90D8               	bcf	status,0,c
  2212   001484  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2213   001486                     u2264:
  2214   001486  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2215   001488  EF41  F00A         	goto	u2265
  2216   00148C  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2217   00148E  1292               	iorwf	146,f,c	;volatile
  2218                           
  2219                           ;MCAL/DIO/DIO_Prog.c: 33:                         break;
  2220   001490  EFBE  F00B         	goto	l3195
  2221   001494                     l3129:
  2222                           
  2223                           ;MCAL/DIO/DIO_Prog.c: 35:                         (((*((volatile TRISA_t *)0xF92)).TRISA
      +                          _REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2224   001494  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2225   001496  6ED9               	movwf	fsr2l,c
  2226   001498  6ADA               	clrf	fsr2h,c
  2227   00149A  30DF               	rrcf	223,w,c
  2228   00149C  32E8               	rrcf	wreg,f,c
  2229   00149E  32E8               	rrcf	wreg,f,c
  2230   0014A0  0B07               	andlw	7
  2231   0014A2  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2232   0014A4  0E01               	movlw	1
  2233   0014A6  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2234   0014A8  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2235   0014AA  EF59  F00A         	goto	u2274
  2236   0014AE                     u2275:
  2237   0014AE  90D8               	bcf	status,0,c
  2238   0014B0  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2239   0014B2                     u2274:
  2240   0014B2  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2241   0014B4  EF57  F00A         	goto	u2275
  2242   0014B8  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2243   0014BA  0AFF               	xorlw	255
  2244   0014BC  1692               	andwf	146,f,c	;volatile
  2245                           
  2246                           ;MCAL/DIO/DIO_Prog.c: 36:                         break;
  2247   0014BE  EFBE  F00B         	goto	l3195
  2248   0014C2                     l3135:
  2249   0014C2  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2250   0014C4  6ED9               	movwf	fsr2l,c
  2251   0014C6  6ADA               	clrf	fsr2h,c
  2252   0014C8  BCDF               	btfsc	indf2,6,c
  2253   0014CA  EF69  F00A         	goto	u2281
  2254   0014CE  EF6C  F00A         	goto	u2280
  2255   0014D2                     u2281:
  2256   0014D2  0E01               	movlw	1
  2257   0014D4  EF6D  F00A         	goto	u2286
  2258   0014D8                     u2280:
  2259   0014D8  0E00               	movlw	0
  2260   0014DA                     u2286:
  2261                           
  2262                           ; Switch size 1, requested type "simple"
  2263                           ; Number of cases is 2, Range of values is 0 to 1
  2264                           ; switch strategies available:
  2265                           ; Name         Instructions Cycles
  2266                           ; simple_byte            7     4 (average)
  2267                           ;	Chosen strategy is simple_byte
  2268   0014DA  0A00               	xorlw	0	; case 0
  2269   0014DC  B4D8               	btfsc	status,2,c
  2270   0014DE  EF4A  F00A         	goto	l3129
  2271   0014E2  0A01               	xorlw	1	; case 1
  2272   0014E4  B4D8               	btfsc	status,2,c
  2273   0014E6  EF34  F00A         	goto	l3127
  2274   0014EA  EF2C  F00A         	goto	l3123
  2275   0014EE                     l3137:
  2276                           
  2277                           ;MCAL/DIO/DIO_Prog.c: 43:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2278   0014EE  0E01               	movlw	1
  2279   0014F0  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2280                           
  2281                           ;MCAL/DIO/DIO_Prog.c: 44:                 switch(Copy_PinInfo->Pin_Direction)
  2282   0014F2  EFA8  F00A         	goto	l3147
  2283   0014F6                     l3139:
  2284                           
  2285                           ;MCAL/DIO/DIO_Prog.c: 47:                         (((*((volatile TRISB_t *)0xF93)).TRISB
      +                          _REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  2286   0014F6  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2287   0014F8  6ED9               	movwf	fsr2l,c
  2288   0014FA  6ADA               	clrf	fsr2h,c
  2289   0014FC  30DF               	rrcf	223,w,c
  2290   0014FE  32E8               	rrcf	wreg,f,c
  2291   001500  32E8               	rrcf	wreg,f,c
  2292   001502  0B07               	andlw	7
  2293   001504  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2294   001506  0E01               	movlw	1
  2295   001508  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2296   00150A  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2297   00150C  EF8A  F00A         	goto	u2294
  2298   001510                     u2295:
  2299   001510  90D8               	bcf	status,0,c
  2300   001512  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2301   001514                     u2294:
  2302   001514  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2303   001516  EF88  F00A         	goto	u2295
  2304   00151A  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2305   00151C  1293               	iorwf	147,f,c	;volatile
  2306                           
  2307                           ;MCAL/DIO/DIO_Prog.c: 48:                         break;
  2308   00151E  EFBE  F00B         	goto	l3195
  2309   001522                     l3141:
  2310                           
  2311                           ;MCAL/DIO/DIO_Prog.c: 50:                         (((*((volatile TRISB_t *)0xF93)).TRISB
      +                          _REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2312   001522  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2313   001524  6ED9               	movwf	fsr2l,c
  2314   001526  6ADA               	clrf	fsr2h,c
  2315   001528  30DF               	rrcf	223,w,c
  2316   00152A  32E8               	rrcf	wreg,f,c
  2317   00152C  32E8               	rrcf	wreg,f,c
  2318   00152E  0B07               	andlw	7
  2319   001530  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2320   001532  0E01               	movlw	1
  2321   001534  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2322   001536  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2323   001538  EFA0  F00A         	goto	u2304
  2324   00153C                     u2305:
  2325   00153C  90D8               	bcf	status,0,c
  2326   00153E  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2327   001540                     u2304:
  2328   001540  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2329   001542  EF9E  F00A         	goto	u2305
  2330   001546  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2331   001548  0AFF               	xorlw	255
  2332   00154A  1693               	andwf	147,f,c	;volatile
  2333                           
  2334                           ;MCAL/DIO/DIO_Prog.c: 51:                         break;
  2335   00154C  EFBE  F00B         	goto	l3195
  2336   001550                     l3147:
  2337   001550  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2338   001552  6ED9               	movwf	fsr2l,c
  2339   001554  6ADA               	clrf	fsr2h,c
  2340   001556  BCDF               	btfsc	indf2,6,c
  2341   001558  EFB0  F00A         	goto	u2311
  2342   00155C  EFB3  F00A         	goto	u2310
  2343   001560                     u2311:
  2344   001560  0E01               	movlw	1
  2345   001562  EFB4  F00A         	goto	u2316
  2346   001566                     u2310:
  2347   001566  0E00               	movlw	0
  2348   001568                     u2316:
  2349                           
  2350                           ; Switch size 1, requested type "simple"
  2351                           ; Number of cases is 2, Range of values is 0 to 1
  2352                           ; switch strategies available:
  2353                           ; Name         Instructions Cycles
  2354                           ; simple_byte            7     4 (average)
  2355                           ;	Chosen strategy is simple_byte
  2356   001568  0A00               	xorlw	0	; case 0
  2357   00156A  B4D8               	btfsc	status,2,c
  2358   00156C  EF91  F00A         	goto	l3141
  2359   001570  0A01               	xorlw	1	; case 1
  2360   001572  B4D8               	btfsc	status,2,c
  2361   001574  EF7B  F00A         	goto	l3139
  2362   001578  EF2C  F00A         	goto	l3123
  2363   00157C                     l3149:
  2364                           
  2365                           ;MCAL/DIO/DIO_Prog.c: 58:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2366   00157C  0E01               	movlw	1
  2367   00157E  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2368                           
  2369                           ;MCAL/DIO/DIO_Prog.c: 59:                 switch(Copy_PinInfo->Pin_Direction)
  2370   001580  EFEF  F00A         	goto	l3159
  2371   001584                     l3151:
  2372                           
  2373                           ;MCAL/DIO/DIO_Prog.c: 62:                         (((*((volatile TRISC_t *)0xF94)).TRISC
      +                          _REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  2374   001584  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2375   001586  6ED9               	movwf	fsr2l,c
  2376   001588  6ADA               	clrf	fsr2h,c
  2377   00158A  30DF               	rrcf	223,w,c
  2378   00158C  32E8               	rrcf	wreg,f,c
  2379   00158E  32E8               	rrcf	wreg,f,c
  2380   001590  0B07               	andlw	7
  2381   001592  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2382   001594  0E01               	movlw	1
  2383   001596  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2384   001598  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2385   00159A  EFD1  F00A         	goto	u2324
  2386   00159E                     u2325:
  2387   00159E  90D8               	bcf	status,0,c
  2388   0015A0  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2389   0015A2                     u2324:
  2390   0015A2  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2391   0015A4  EFCF  F00A         	goto	u2325
  2392   0015A8  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2393   0015AA  1294               	iorwf	148,f,c	;volatile
  2394                           
  2395                           ;MCAL/DIO/DIO_Prog.c: 63:                         break;
  2396   0015AC  EFBE  F00B         	goto	l3195
  2397   0015B0                     l3153:
  2398                           
  2399                           ;MCAL/DIO/DIO_Prog.c: 65:                         (((*((volatile TRISC_t *)0xF94)).TRISC
      +                          _REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2400   0015B0  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2401   0015B2  6ED9               	movwf	fsr2l,c
  2402   0015B4  6ADA               	clrf	fsr2h,c
  2403   0015B6  30DF               	rrcf	223,w,c
  2404   0015B8  32E8               	rrcf	wreg,f,c
  2405   0015BA  32E8               	rrcf	wreg,f,c
  2406   0015BC  0B07               	andlw	7
  2407   0015BE  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2408   0015C0  0E01               	movlw	1
  2409   0015C2  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2410   0015C4  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2411   0015C6  EFE7  F00A         	goto	u2334
  2412   0015CA                     u2335:
  2413   0015CA  90D8               	bcf	status,0,c
  2414   0015CC  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2415   0015CE                     u2334:
  2416   0015CE  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2417   0015D0  EFE5  F00A         	goto	u2335
  2418   0015D4  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2419   0015D6  0AFF               	xorlw	255
  2420   0015D8  1694               	andwf	148,f,c	;volatile
  2421                           
  2422                           ;MCAL/DIO/DIO_Prog.c: 66:                         break;
  2423   0015DA  EFBE  F00B         	goto	l3195
  2424   0015DE                     l3159:
  2425   0015DE  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2426   0015E0  6ED9               	movwf	fsr2l,c
  2427   0015E2  6ADA               	clrf	fsr2h,c
  2428   0015E4  BCDF               	btfsc	indf2,6,c
  2429   0015E6  EFF7  F00A         	goto	u2341
  2430   0015EA  EFFA  F00A         	goto	u2340
  2431   0015EE                     u2341:
  2432   0015EE  0E01               	movlw	1
  2433   0015F0  EFFB  F00A         	goto	u2346
  2434   0015F4                     u2340:
  2435   0015F4  0E00               	movlw	0
  2436   0015F6                     u2346:
  2437                           
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 2, Range of values is 0 to 1
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            7     4 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444   0015F6  0A00               	xorlw	0	; case 0
  2445   0015F8  B4D8               	btfsc	status,2,c
  2446   0015FA  EFD8  F00A         	goto	l3153
  2447   0015FE  0A01               	xorlw	1	; case 1
  2448   001600  B4D8               	btfsc	status,2,c
  2449   001602  EFC2  F00A         	goto	l3151
  2450   001606  EF2C  F00A         	goto	l3123
  2451   00160A                     l3161:
  2452                           
  2453                           ;MCAL/DIO/DIO_Prog.c: 73:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2454   00160A  0E01               	movlw	1
  2455   00160C  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2456                           
  2457                           ;MCAL/DIO/DIO_Prog.c: 74:                 switch(Copy_PinInfo->Pin_Direction)
  2458   00160E  EF36  F00B         	goto	l3171
  2459   001612                     l3163:
  2460                           
  2461                           ;MCAL/DIO/DIO_Prog.c: 77:                         (((*((volatile TRISD_t *)0xF95)).TRISD
      +                          _REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  2462   001612  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2463   001614  6ED9               	movwf	fsr2l,c
  2464   001616  6ADA               	clrf	fsr2h,c
  2465   001618  30DF               	rrcf	223,w,c
  2466   00161A  32E8               	rrcf	wreg,f,c
  2467   00161C  32E8               	rrcf	wreg,f,c
  2468   00161E  0B07               	andlw	7
  2469   001620  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2470   001622  0E01               	movlw	1
  2471   001624  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2472   001626  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2473   001628  EF18  F00B         	goto	u2354
  2474   00162C                     u2355:
  2475   00162C  90D8               	bcf	status,0,c
  2476   00162E  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2477   001630                     u2354:
  2478   001630  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2479   001632  EF16  F00B         	goto	u2355
  2480   001636  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2481   001638  1295               	iorwf	149,f,c	;volatile
  2482                           
  2483                           ;MCAL/DIO/DIO_Prog.c: 78:                         break;
  2484   00163A  EFBE  F00B         	goto	l3195
  2485   00163E                     l3165:
  2486                           
  2487                           ;MCAL/DIO/DIO_Prog.c: 80:                         (((*((volatile TRISD_t *)0xF95)).TRISD
      +                          _REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2488   00163E  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2489   001640  6ED9               	movwf	fsr2l,c
  2490   001642  6ADA               	clrf	fsr2h,c
  2491   001644  30DF               	rrcf	223,w,c
  2492   001646  32E8               	rrcf	wreg,f,c
  2493   001648  32E8               	rrcf	wreg,f,c
  2494   00164A  0B07               	andlw	7
  2495   00164C  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2496   00164E  0E01               	movlw	1
  2497   001650  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2498   001652  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2499   001654  EF2E  F00B         	goto	u2364
  2500   001658                     u2365:
  2501   001658  90D8               	bcf	status,0,c
  2502   00165A  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2503   00165C                     u2364:
  2504   00165C  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2505   00165E  EF2C  F00B         	goto	u2365
  2506   001662  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2507   001664  0AFF               	xorlw	255
  2508   001666  1695               	andwf	149,f,c	;volatile
  2509                           
  2510                           ;MCAL/DIO/DIO_Prog.c: 81:                         break;
  2511   001668  EFBE  F00B         	goto	l3195
  2512   00166C                     l3171:
  2513   00166C  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2514   00166E  6ED9               	movwf	fsr2l,c
  2515   001670  6ADA               	clrf	fsr2h,c
  2516   001672  BCDF               	btfsc	indf2,6,c
  2517   001674  EF3E  F00B         	goto	u2371
  2518   001678  EF41  F00B         	goto	u2370
  2519   00167C                     u2371:
  2520   00167C  0E01               	movlw	1
  2521   00167E  EF42  F00B         	goto	u2376
  2522   001682                     u2370:
  2523   001682  0E00               	movlw	0
  2524   001684                     u2376:
  2525                           
  2526                           ; Switch size 1, requested type "simple"
  2527                           ; Number of cases is 2, Range of values is 0 to 1
  2528                           ; switch strategies available:
  2529                           ; Name         Instructions Cycles
  2530                           ; simple_byte            7     4 (average)
  2531                           ;	Chosen strategy is simple_byte
  2532   001684  0A00               	xorlw	0	; case 0
  2533   001686  B4D8               	btfsc	status,2,c
  2534   001688  EF1F  F00B         	goto	l3165
  2535   00168C  0A01               	xorlw	1	; case 1
  2536   00168E  B4D8               	btfsc	status,2,c
  2537   001690  EF09  F00B         	goto	l3163
  2538   001694  EF2C  F00A         	goto	l3123
  2539   001698                     l3173:
  2540                           
  2541                           ;MCAL/DIO/DIO_Prog.c: 88:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2542   001698  0E01               	movlw	1
  2543   00169A  6E3D               	movwf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,c
  2544   00169C                     
  2545                           ;MCAL/DIO/DIO_Prog.c: 89:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  2546   00169C  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2547   00169E  6ED9               	movwf	fsr2l,c
  2548   0016A0  6ADA               	clrf	fsr2h,c
  2549   0016A2  30DF               	rrcf	223,w,c
  2550   0016A4  32E8               	rrcf	wreg,f,c
  2551   0016A6  32E8               	rrcf	wreg,f,c
  2552   0016A8  0B07               	andlw	7
  2553   0016AA  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2554   0016AC  0E02               	movlw	2
  2555   0016AE  643B               	cpfsgt	??_MCAL_DIO_SetPinDirection^0,c
  2556   0016B0  EF5C  F00B         	goto	u2381
  2557   0016B4  EF5E  F00B         	goto	u2380
  2558   0016B8                     u2381:
  2559   0016B8  EF8D  F00B         	goto	l3187
  2560   0016BC                     u2380:
  2561   0016BC  EF2C  F00A         	goto	l3123
  2562   0016C0                     l3179:
  2563                           
  2564                           ;MCAL/DIO/DIO_Prog.c: 97:                         (((*((volatile TRISE_t *)0xF96)).TRISE
      +                          _REGISTER) |= (1 << Copy_PinInfo->Pin_Num));
  2565   0016C0  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2566   0016C2  6ED9               	movwf	fsr2l,c
  2567   0016C4  6ADA               	clrf	fsr2h,c
  2568   0016C6  30DF               	rrcf	223,w,c
  2569   0016C8  32E8               	rrcf	wreg,f,c
  2570   0016CA  32E8               	rrcf	wreg,f,c
  2571   0016CC  0B07               	andlw	7
  2572   0016CE  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2573   0016D0  0E01               	movlw	1
  2574   0016D2  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2575   0016D4  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2576   0016D6  EF6F  F00B         	goto	u2394
  2577   0016DA                     u2395:
  2578   0016DA  90D8               	bcf	status,0,c
  2579   0016DC  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2580   0016DE                     u2394:
  2581   0016DE  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2582   0016E0  EF6D  F00B         	goto	u2395
  2583   0016E4  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2584   0016E6  1296               	iorwf	150,f,c	;volatile
  2585                           
  2586                           ;MCAL/DIO/DIO_Prog.c: 98:                         break;
  2587   0016E8  EFBE  F00B         	goto	l3195
  2588   0016EC                     l3181:
  2589                           
  2590                           ;MCAL/DIO/DIO_Prog.c: 100:                         (((*((volatile TRISE_t *)0xF96)).TRIS
      +                          E_REGISTER) &= (~(1 << Copy_PinInfo->Pin_Num)));
  2591   0016EC  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2592   0016EE  6ED9               	movwf	fsr2l,c
  2593   0016F0  6ADA               	clrf	fsr2h,c
  2594   0016F2  30DF               	rrcf	223,w,c
  2595   0016F4  32E8               	rrcf	wreg,f,c
  2596   0016F6  32E8               	rrcf	wreg,f,c
  2597   0016F8  0B07               	andlw	7
  2598   0016FA  6E3B               	movwf	??_MCAL_DIO_SetPinDirection^0,c
  2599   0016FC  0E01               	movlw	1
  2600   0016FE  6E3C               	movwf	(??_MCAL_DIO_SetPinDirection+1)^0,c
  2601   001700  2A3B               	incf	??_MCAL_DIO_SetPinDirection^0,f,c
  2602   001702  EF85  F00B         	goto	u2404
  2603   001706                     u2405:
  2604   001706  90D8               	bcf	status,0,c
  2605   001708  363C               	rlcf	(??_MCAL_DIO_SetPinDirection+1)^0,f,c
  2606   00170A                     u2404:
  2607   00170A  2E3B               	decfsz	??_MCAL_DIO_SetPinDirection^0,f,c
  2608   00170C  EF83  F00B         	goto	u2405
  2609   001710  503C               	movf	(??_MCAL_DIO_SetPinDirection+1)^0,w,c
  2610   001712  0AFF               	xorlw	255
  2611   001714  1696               	andwf	150,f,c	;volatile
  2612                           
  2613                           ;MCAL/DIO/DIO_Prog.c: 101:                         break;
  2614   001716  EFBE  F00B         	goto	l3195
  2615   00171A                     l3187:
  2616   00171A  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2617   00171C  6ED9               	movwf	fsr2l,c
  2618   00171E  6ADA               	clrf	fsr2h,c
  2619   001720  BCDF               	btfsc	indf2,6,c
  2620   001722  EF95  F00B         	goto	u2411
  2621   001726  EF98  F00B         	goto	u2410
  2622   00172A                     u2411:
  2623   00172A  0E01               	movlw	1
  2624   00172C  EF99  F00B         	goto	u2416
  2625   001730                     u2410:
  2626   001730  0E00               	movlw	0
  2627   001732                     u2416:
  2628                           
  2629                           ; Switch size 1, requested type "simple"
  2630                           ; Number of cases is 2, Range of values is 0 to 1
  2631                           ; switch strategies available:
  2632                           ; Name         Instructions Cycles
  2633                           ; simple_byte            7     4 (average)
  2634                           ;	Chosen strategy is simple_byte
  2635   001732  0A00               	xorlw	0	; case 0
  2636   001734  B4D8               	btfsc	status,2,c
  2637   001736  EF76  F00B         	goto	l3181
  2638   00173A  0A01               	xorlw	1	; case 1
  2639   00173C  B4D8               	btfsc	status,2,c
  2640   00173E  EF60  F00B         	goto	l3179
  2641   001742  EF2C  F00A         	goto	l3123
  2642   001746                     l3193:
  2643   001746  503A               	movf	MCAL_DIO_SetPinDirection@Copy_PinInfo^0,w,c
  2644   001748  6ED9               	movwf	fsr2l,c
  2645   00174A  6ADA               	clrf	fsr2h,c
  2646   00174C  50DF               	movf	223,w,c
  2647   00174E  0B07               	andlw	7
  2648                           
  2649                           ; Switch size 1, requested type "simple"
  2650                           ; Number of cases is 5, Range of values is 0 to 4
  2651                           ; switch strategies available:
  2652                           ; Name         Instructions Cycles
  2653                           ; simple_byte           16     9 (average)
  2654                           ;	Chosen strategy is simple_byte
  2655   001750  0A00               	xorlw	0	; case 0
  2656   001752  B4D8               	btfsc	status,2,c
  2657   001754  EF30  F00A         	goto	l3125
  2658   001758  0A01               	xorlw	1	; case 1
  2659   00175A  B4D8               	btfsc	status,2,c
  2660   00175C  EF77  F00A         	goto	l3137
  2661   001760  0A03               	xorlw	3	; case 2
  2662   001762  B4D8               	btfsc	status,2,c
  2663   001764  EFBE  F00A         	goto	l3149
  2664   001768  0A01               	xorlw	1	; case 3
  2665   00176A  B4D8               	btfsc	status,2,c
  2666   00176C  EF05  F00B         	goto	l3161
  2667   001770  0A07               	xorlw	7	; case 4
  2668   001772  B4D8               	btfsc	status,2,c
  2669   001774  EF4C  F00B         	goto	l3173
  2670   001778  EF2C  F00A         	goto	l3123
  2671   00177C                     l3195:
  2672                           
  2673                           ;MCAL/DIO/DIO_Prog.c: 112:     return Local_ErrorStatus;
  2674   00177C  503D               	movf	MCAL_DIO_SetPinDirection@Local_ErrorStatus^0,w,c
  2675   00177E  0012               	return		;funcret
  2676   001780                     __end_of_MCAL_DIO_SetPinDirection:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _HAL_LED_LEDBlink *****************
  2680 ;; Defined at:
  2681 ;;		line 106 in file "HAL/LED/LED_Prog.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  Copy_LED        1    5[COMRAM] PTR struct .
  2684 ;;		 -> led1(1), 
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;  LED             1    9[COMRAM] struct .
  2687 ;;  Local_Blinki    1    8[COMRAM] unsigned char 
  2688 ;;  Local_ErrorS    1    0        unsigned char 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        5 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 2
  2705 ;; This function calls:
  2706 ;;		_MCAL_DIO_TogglePinValue
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text7
  2713   001F24                     __ptext7:
  2714                           	callstack 0
  2715   001F24                     _HAL_LED_LEDBlink:
  2716                           	callstack 28
  2717   001F24                     
  2718                           ;HAL/LED/LED_Prog.c: 109:     uint8 Local_BlinkingTimes = 1;
  2719   001F24  0E01               	movlw	1
  2720   001F26  6E42               	movwf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,c
  2721   001F28                     
  2722                           ;HAL/LED/LED_Prog.c: 110:     Pin_Conig_t LED = {
  2723   001F28  C034  F043         	movff	HAL_LED_LEDBlink@F2851,HAL_LED_LEDBlink@LED
  2724   001F2C  503F               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2725   001F2E  6ED9               	movwf	fsr2l,c
  2726   001F30  6ADA               	clrf	fsr2h,c
  2727   001F32  50DF               	movf	223,w,c
  2728   001F34  0B07               	andlw	7
  2729   001F36  6E40               	movwf	??_HAL_LED_LEDBlink^0,c
  2730   001F38  5043               	movf	HAL_LED_LEDBlink@LED^0,w,c
  2731   001F3A  1840               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2732   001F3C  0BF8               	andlw	-8
  2733   001F3E  1840               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2734   001F40  6E43               	movwf	HAL_LED_LEDBlink@LED^0,c
  2735   001F42  503F               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2736   001F44  6ED9               	movwf	fsr2l,c
  2737   001F46  6ADA               	clrf	fsr2h,c
  2738   001F48  30DF               	rrcf	223,w,c
  2739   001F4A  32E8               	rrcf	wreg,f,c
  2740   001F4C  32E8               	rrcf	wreg,f,c
  2741   001F4E  0B07               	andlw	7
  2742   001F50  6E40               	movwf	??_HAL_LED_LEDBlink^0,c
  2743   001F52  4640               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2744   001F54  4640               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2745   001F56  4640               	rlncf	??_HAL_LED_LEDBlink^0,f,c
  2746   001F58  5043               	movf	HAL_LED_LEDBlink@LED^0,w,c
  2747   001F5A  1840               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2748   001F5C  0BC7               	andlw	-57
  2749   001F5E  1840               	xorwf	??_HAL_LED_LEDBlink^0,w,c
  2750   001F60  6E43               	movwf	HAL_LED_LEDBlink@LED^0,c
  2751   001F62  9C43               	bcf	HAL_LED_LEDBlink@LED^0,6,c
  2752   001F64  503F               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2753   001F66  6ED9               	movwf	fsr2l,c
  2754   001F68  6ADA               	clrf	fsr2h,c
  2755   001F6A  ACDF               	btfss	indf2,6,c
  2756   001F6C  D002               	bra	u3135
  2757   001F6E  8E43               	bsf	HAL_LED_LEDBlink@LED^0,7,c
  2758   001F70  D001               	bra	u3137
  2759   001F72                     u3135:
  2760   001F72  9E43               	bcf	HAL_LED_LEDBlink@LED^0,7,c
  2761   001F74                     u3137:
  2762   001F74                     l3557:
  2763                           
  2764                           ;HAL/LED/LED_Prog.c: 117:     {;HAL/LED/LED_Prog.c: 118:        if(!MCAL_DIO_TogglePinVa
      +                          lue(&LED))
  2765   001F74  0E43               	movlw	low HAL_LED_LEDBlink@LED
  2766   001F76  6E3A               	movwf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,c
  2767   001F78  ECC0  F00B         	call	_MCAL_DIO_TogglePinValue	;wreg free
  2768   001F7C  0900               	iorlw	0
  2769   001F7E  A4D8               	btfss	status,2,c
  2770   001F80  EFC4  F00F         	goto	u3141
  2771   001F84  EFC6  F00F         	goto	u3140
  2772   001F88                     u3141:
  2773   001F88  EFC8  F00F         	goto	l3561
  2774   001F8C                     u3140:
  2775   001F8C                     
  2776                           ;HAL/LED/LED_Prog.c: 121:        }
  2777   001F8C  EFCE  F00F         	goto	l3565
  2778   001F90                     l3561:
  2779                           
  2780                           ;HAL/LED/LED_Prog.c: 123:        {;HAL/LED/LED_Prog.c: 124:            Copy_LED->LED_Sta
      +                          tus = LED.Pin_Value;
  2781   001F90  503F               	movf	HAL_LED_LEDBlink@Copy_LED^0,w,c
  2782   001F92  6ED9               	movwf	fsr2l,c
  2783   001F94  6ADA               	clrf	fsr2h,c
  2784   001F96  8CDF               	bsf	indf2,6,c
  2785   001F98  AE43               	btfss	HAL_LED_LEDBlink@LED^0,7,c
  2786   001F9A  9CDF               	bcf	indf2,6,c
  2787   001F9C                     l3565:
  2788                           
  2789                           ;HAL/LED/LED_Prog.c: 127:         _delay((unsigned long)((250)*(16000000/4000.0)));
  2790   001F9C  0E06               	movlw	6
  2791   001F9E  6E41               	movwf	(??_HAL_LED_LEDBlink+1)^0,c
  2792   001FA0  0E13               	movlw	19
  2793   001FA2  6E40               	movwf	??_HAL_LED_LEDBlink^0,c
  2794   001FA4  0EAE               	movlw	174
  2795   001FA6                     u3807:
  2796   001FA6  2EE8               	decfsz	wreg,f,c
  2797   001FA8  D7FE               	bra	u3807
  2798   001FAA  2E40               	decfsz	??_HAL_LED_LEDBlink^0,f,c
  2799   001FAC  D7FC               	bra	u3807
  2800   001FAE  2E41               	decfsz	(??_HAL_LED_LEDBlink+1)^0,f,c
  2801   001FB0  D7FA               	bra	u3807
  2802   001FB2                     
  2803                           ;HAL/LED/LED_Prog.c: 128:         MCAL_DIO_TogglePinValue(&LED);
  2804   001FB2  0E43               	movlw	low HAL_LED_LEDBlink@LED
  2805   001FB4  6E3A               	movwf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,c
  2806   001FB6  ECC0  F00B         	call	_MCAL_DIO_TogglePinValue	;wreg free
  2807   001FBA                     
  2808                           ;HAL/LED/LED_Prog.c: 129:     }
  2809   001FBA  0642               	decf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,f,c
  2810   001FBC  5042               	movf	HAL_LED_LEDBlink@Local_BlinkingTimes^0,w,c
  2811   001FBE  A4D8               	btfss	status,2,c
  2812   001FC0  EFE4  F00F         	goto	u3151
  2813   001FC4  EFE6  F00F         	goto	u3150
  2814   001FC8                     u3151:
  2815   001FC8  EFBA  F00F         	goto	l3557
  2816   001FCC                     u3150:
  2817   001FCC  0012               	return		;funcret
  2818   001FCE                     __end_of_HAL_LED_LEDBlink:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _MCAL_DIO_TogglePinValue *****************
  2822 ;; Defined at:
  2823 ;;		line 391 in file "MCAL/DIO/DIO_Prog.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  Copy_PinInfo    1    0[COMRAM] PTR struct .
  2826 ;;		 -> HAL_LED_LEDBlink@LED(1), HAL_LED_LEDToggle@LED(1), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  Local_ErrorS    1    4[COMRAM] unsigned char 
  2829 ;; Return value:  Size  Location     Type
  2830 ;;                  1    wreg      unsigned char 
  2831 ;; Registers used:
  2832 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2833 ;; Tracked objects:
  2834 ;;		On entry : 0/0
  2835 ;;		On exit  : 0/0
  2836 ;;		Unchanged: 0/0
  2837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;Total ram usage:        5 bytes
  2843 ;; Hardware stack levels used: 1
  2844 ;; Hardware stack levels required when called: 1
  2845 ;; This function calls:
  2846 ;;		Nothing
  2847 ;; This function is called by:
  2848 ;;		_HAL_LED_LEDBlink
  2849 ;;		_HAL_KeyPad_KeyPadReadCharacter
  2850 ;;		_HAL_KeyPad_KeyPadReadNumber
  2851 ;;		_HAL_LED_LEDToggle
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text8
  2856   001780                     __ptext8:
  2857                           	callstack 0
  2858   001780                     _MCAL_DIO_TogglePinValue:
  2859                           	callstack 28
  2860   001780                     
  2861                           ;MCAL/DIO/DIO_Prog.c: 394:     if(Copy_PinInfo->Pin_Num > DIO_PIN7 || Copy_PinInfo->Pin_
      +                          Direction == DIO_PIN_INPUT)
  2862   001780  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2863   001782  6ED9               	movwf	fsr2l,c
  2864   001784  6ADA               	clrf	fsr2h,c
  2865   001786  30DF               	rrcf	223,w,c
  2866   001788  32E8               	rrcf	wreg,f,c
  2867   00178A  32E8               	rrcf	wreg,f,c
  2868   00178C  0B07               	andlw	7
  2869   00178E  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2870   001790  0E08               	movlw	8
  2871   001792  603B               	cpfslt	??_MCAL_DIO_TogglePinValue^0,c
  2872   001794  EFCE  F00B         	goto	u2651
  2873   001798  EFD0  F00B         	goto	u2650
  2874   00179C                     u2651:
  2875   00179C  EFDA  F00B         	goto	l3327
  2876   0017A0                     u2650:
  2877   0017A0  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2878   0017A2  6ED9               	movwf	fsr2l,c
  2879   0017A4  6ADA               	clrf	fsr2h,c
  2880   0017A6  ACDF               	btfss	indf2,6,c
  2881   0017A8  EFD8  F00B         	goto	u2661
  2882   0017AC  EFDA  F00B         	goto	u2660
  2883   0017B0                     u2661:
  2884   0017B0  EFE0  F00C         	goto	l3357
  2885   0017B4                     u2660:
  2886   0017B4                     l3327:
  2887                           
  2888                           ;MCAL/DIO/DIO_Prog.c: 395:     {;MCAL/DIO/DIO_Prog.c: 396:         Local_ErrorStatus = (
      +                          Std_ReturnType)0x00;
  2889   0017B4  0E00               	movlw	0
  2890   0017B6  6E3E               	movwf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,c
  2891                           
  2892                           ;MCAL/DIO/DIO_Prog.c: 397:     }
  2893   0017B8  EFFB  F00C         	goto	l3359
  2894   0017BC                     l3329:
  2895                           
  2896                           ;MCAL/DIO/DIO_Prog.c: 403:                 (((*((volatile LATA_t *)0xF89)).LATA_REGISTER
      +                          ) ^= (1 << Copy_PinInfo->Pin_Num));
  2897   0017BC  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2898   0017BE  6ED9               	movwf	fsr2l,c
  2899   0017C0  6ADA               	clrf	fsr2h,c
  2900   0017C2  30DF               	rrcf	223,w,c
  2901   0017C4  32E8               	rrcf	wreg,f,c
  2902   0017C6  32E8               	rrcf	wreg,f,c
  2903   0017C8  0B07               	andlw	7
  2904   0017CA  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2905   0017CC  0E01               	movlw	1
  2906   0017CE  6E3C               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2907   0017D0  2A3B               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2908   0017D2  EFED  F00B         	goto	u2674
  2909   0017D6                     u2675:
  2910   0017D6  90D8               	bcf	status,0,c
  2911   0017D8  363C               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2912   0017DA                     u2674:
  2913   0017DA  2E3B               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2914   0017DC  EFEB  F00B         	goto	u2675
  2915   0017E0  503C               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2916   0017E2  1A89               	xorwf	137,f,c	;volatile
  2917                           
  2918                           ;MCAL/DIO/DIO_Prog.c: 404:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2919   0017E4  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2920   0017E6  6ED9               	movwf	fsr2l,c
  2921   0017E8  6ADA               	clrf	fsr2h,c
  2922   0017EA  BEDF               	btfsc	indf2,7,c
  2923   0017EC  EFFA  F00B         	goto	u2681
  2924   0017F0  EFFD  F00B         	goto	u2680
  2925   0017F4                     u2681:
  2926   0017F4  0E01               	movlw	1
  2927   0017F6  EFFE  F00B         	goto	u2686
  2928   0017FA                     u2680:
  2929   0017FA  0E00               	movlw	0
  2930   0017FC                     u2686:
  2931   0017FC  0AFF               	xorlw	255
  2932   0017FE  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2933   001800  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2934   001802  6ED9               	movwf	fsr2l,c
  2935   001804  6ADA               	clrf	fsr2h,c
  2936   001806  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2937   001808  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2938   00180A  50DF               	movf	223,w,c
  2939   00180C  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2940   00180E  0B7F               	andlw	-129
  2941   001810  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2942   001812  6EDF               	movwf	223,c
  2943   001814                     l3331:
  2944                           
  2945                           ;MCAL/DIO/DIO_Prog.c: 405:                 Local_ErrorStatus = (Std_ReturnType)0x01;
  2946   001814  0E01               	movlw	1
  2947   001816  6E3E               	movwf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,c
  2948                           
  2949                           ;MCAL/DIO/DIO_Prog.c: 406:                 break;
  2950   001818  EFFB  F00C         	goto	l3359
  2951   00181C                     l3333:
  2952                           
  2953                           ;MCAL/DIO/DIO_Prog.c: 408:                 (((*((volatile LATB_t *)0xF8A)).LATB_REGISTER
      +                          ) ^= (1 << Copy_PinInfo->Pin_Num));
  2954   00181C  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2955   00181E  6ED9               	movwf	fsr2l,c
  2956   001820  6ADA               	clrf	fsr2h,c
  2957   001822  30DF               	rrcf	223,w,c
  2958   001824  32E8               	rrcf	wreg,f,c
  2959   001826  32E8               	rrcf	wreg,f,c
  2960   001828  0B07               	andlw	7
  2961   00182A  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2962   00182C  0E01               	movlw	1
  2963   00182E  6E3C               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  2964   001830  2A3B               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  2965   001832  EF1D  F00C         	goto	u2694
  2966   001836                     u2695:
  2967   001836  90D8               	bcf	status,0,c
  2968   001838  363C               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  2969   00183A                     u2694:
  2970   00183A  2E3B               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  2971   00183C  EF1B  F00C         	goto	u2695
  2972   001840  503C               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  2973   001842  1A8A               	xorwf	138,f,c	;volatile
  2974                           
  2975                           ;MCAL/DIO/DIO_Prog.c: 409:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  2976   001844  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2977   001846  6ED9               	movwf	fsr2l,c
  2978   001848  6ADA               	clrf	fsr2h,c
  2979   00184A  BEDF               	btfsc	indf2,7,c
  2980   00184C  EF2A  F00C         	goto	u2701
  2981   001850  EF2D  F00C         	goto	u2700
  2982   001854                     u2701:
  2983   001854  0E01               	movlw	1
  2984   001856  EF2E  F00C         	goto	u2706
  2985   00185A                     u2700:
  2986   00185A  0E00               	movlw	0
  2987   00185C                     u2706:
  2988   00185C  0AFF               	xorlw	255
  2989   00185E  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  2990   001860  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  2991   001862  6ED9               	movwf	fsr2l,c
  2992   001864  6ADA               	clrf	fsr2h,c
  2993   001866  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2994   001868  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  2995   00186A  50DF               	movf	223,w,c
  2996   00186C  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2997   00186E  0B7F               	andlw	-129
  2998   001870  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  2999   001872  6EDF               	movwf	223,c
  3000   001874  EF0A  F00C         	goto	l3331
  3001   001878                     l3337:
  3002                           
  3003                           ;MCAL/DIO/DIO_Prog.c: 413:                 (((*((volatile LATC_t *)0xF8B)).LATC_REGISTER
      +                          ) ^= (1 << Copy_PinInfo->Pin_Num));
  3004   001878  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3005   00187A  6ED9               	movwf	fsr2l,c
  3006   00187C  6ADA               	clrf	fsr2h,c
  3007   00187E  30DF               	rrcf	223,w,c
  3008   001880  32E8               	rrcf	wreg,f,c
  3009   001882  32E8               	rrcf	wreg,f,c
  3010   001884  0B07               	andlw	7
  3011   001886  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3012   001888  0E01               	movlw	1
  3013   00188A  6E3C               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  3014   00188C  2A3B               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  3015   00188E  EF4B  F00C         	goto	u2714
  3016   001892                     u2715:
  3017   001892  90D8               	bcf	status,0,c
  3018   001894  363C               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  3019   001896                     u2714:
  3020   001896  2E3B               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  3021   001898  EF49  F00C         	goto	u2715
  3022   00189C  503C               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  3023   00189E  1A8B               	xorwf	139,f,c	;volatile
  3024                           
  3025                           ;MCAL/DIO/DIO_Prog.c: 414:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  3026   0018A0  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3027   0018A2  6ED9               	movwf	fsr2l,c
  3028   0018A4  6ADA               	clrf	fsr2h,c
  3029   0018A6  BEDF               	btfsc	indf2,7,c
  3030   0018A8  EF58  F00C         	goto	u2721
  3031   0018AC  EF5B  F00C         	goto	u2720
  3032   0018B0                     u2721:
  3033   0018B0  0E01               	movlw	1
  3034   0018B2  EF5C  F00C         	goto	u2726
  3035   0018B6                     u2720:
  3036   0018B6  0E00               	movlw	0
  3037   0018B8                     u2726:
  3038   0018B8  0AFF               	xorlw	255
  3039   0018BA  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3040   0018BC  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3041   0018BE  6ED9               	movwf	fsr2l,c
  3042   0018C0  6ADA               	clrf	fsr2h,c
  3043   0018C2  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3044   0018C4  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3045   0018C6  50DF               	movf	223,w,c
  3046   0018C8  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3047   0018CA  0B7F               	andlw	-129
  3048   0018CC  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3049   0018CE  6EDF               	movwf	223,c
  3050   0018D0  EF0A  F00C         	goto	l3331
  3051   0018D4                     l3341:
  3052                           
  3053                           ;MCAL/DIO/DIO_Prog.c: 418:                 (((*((volatile LATD_t *)0xF8C)).LATD_REGISTER
      +                          ) ^= (1 << Copy_PinInfo->Pin_Num));
  3054   0018D4  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3055   0018D6  6ED9               	movwf	fsr2l,c
  3056   0018D8  6ADA               	clrf	fsr2h,c
  3057   0018DA  30DF               	rrcf	223,w,c
  3058   0018DC  32E8               	rrcf	wreg,f,c
  3059   0018DE  32E8               	rrcf	wreg,f,c
  3060   0018E0  0B07               	andlw	7
  3061   0018E2  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3062   0018E4  0E01               	movlw	1
  3063   0018E6  6E3C               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  3064   0018E8  2A3B               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  3065   0018EA  EF79  F00C         	goto	u2734
  3066   0018EE                     u2735:
  3067   0018EE  90D8               	bcf	status,0,c
  3068   0018F0  363C               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  3069   0018F2                     u2734:
  3070   0018F2  2E3B               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  3071   0018F4  EF77  F00C         	goto	u2735
  3072   0018F8  503C               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  3073   0018FA  1A8C               	xorwf	140,f,c	;volatile
  3074                           
  3075                           ;MCAL/DIO/DIO_Prog.c: 419:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  3076   0018FC  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3077   0018FE  6ED9               	movwf	fsr2l,c
  3078   001900  6ADA               	clrf	fsr2h,c
  3079   001902  BEDF               	btfsc	indf2,7,c
  3080   001904  EF86  F00C         	goto	u2741
  3081   001908  EF89  F00C         	goto	u2740
  3082   00190C                     u2741:
  3083   00190C  0E01               	movlw	1
  3084   00190E  EF8A  F00C         	goto	u2746
  3085   001912                     u2740:
  3086   001912  0E00               	movlw	0
  3087   001914                     u2746:
  3088   001914  0AFF               	xorlw	255
  3089   001916  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3090   001918  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3091   00191A  6ED9               	movwf	fsr2l,c
  3092   00191C  6ADA               	clrf	fsr2h,c
  3093   00191E  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3094   001920  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3095   001922  50DF               	movf	223,w,c
  3096   001924  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3097   001926  0B7F               	andlw	-129
  3098   001928  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3099   00192A  6EDF               	movwf	223,c
  3100   00192C  EF0A  F00C         	goto	l3331
  3101   001930                     l3345:
  3102                           
  3103                           ;MCAL/DIO/DIO_Prog.c: 423:                 if(Copy_PinInfo->Pin_Num > DIO_PIN2)
  3104   001930  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3105   001932  6ED9               	movwf	fsr2l,c
  3106   001934  6ADA               	clrf	fsr2h,c
  3107   001936  30DF               	rrcf	223,w,c
  3108   001938  32E8               	rrcf	wreg,f,c
  3109   00193A  32E8               	rrcf	wreg,f,c
  3110   00193C  0B07               	andlw	7
  3111   00193E  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3112   001940  0E02               	movlw	2
  3113   001942  643B               	cpfsgt	??_MCAL_DIO_TogglePinValue^0,c
  3114   001944  EFA6  F00C         	goto	u2751
  3115   001948  EFA8  F00C         	goto	u2750
  3116   00194C                     u2751:
  3117   00194C  EFAA  F00C         	goto	l3349
  3118   001950                     u2750:
  3119   001950  EFDA  F00B         	goto	l3327
  3120   001954                     l3349:
  3121                           
  3122                           ;MCAL/DIO/DIO_Prog.c: 428:                 (((*((volatile LATE_t *)0xF8D)).LATE_REGISTER
      +                          ) ^= (1 << Copy_PinInfo->Pin_Num));
  3123   001954  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3124   001956  6ED9               	movwf	fsr2l,c
  3125   001958  6ADA               	clrf	fsr2h,c
  3126   00195A  30DF               	rrcf	223,w,c
  3127   00195C  32E8               	rrcf	wreg,f,c
  3128   00195E  32E8               	rrcf	wreg,f,c
  3129   001960  0B07               	andlw	7
  3130   001962  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3131   001964  0E01               	movlw	1
  3132   001966  6E3C               	movwf	(??_MCAL_DIO_TogglePinValue+1)^0,c
  3133   001968  2A3B               	incf	??_MCAL_DIO_TogglePinValue^0,f,c
  3134   00196A  EFB9  F00C         	goto	u2764
  3135   00196E                     u2765:
  3136   00196E  90D8               	bcf	status,0,c
  3137   001970  363C               	rlcf	(??_MCAL_DIO_TogglePinValue+1)^0,f,c
  3138   001972                     u2764:
  3139   001972  2E3B               	decfsz	??_MCAL_DIO_TogglePinValue^0,f,c
  3140   001974  EFB7  F00C         	goto	u2765
  3141   001978  508D               	movf	141,w,c	;volatile
  3142   00197A  0B07               	andlw	7
  3143   00197C  6E3D               	movwf	(??_MCAL_DIO_TogglePinValue+2)^0,c
  3144   00197E  503C               	movf	(??_MCAL_DIO_TogglePinValue+1)^0,w,c
  3145   001980  1A3D               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,f,c
  3146   001982  508D               	movf	141,w,c	;volatile
  3147   001984  183D               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,w,c
  3148   001986  0BF8               	andlw	-8
  3149   001988  183D               	xorwf	(??_MCAL_DIO_TogglePinValue+2)^0,w,c
  3150   00198A  6E8D               	movwf	141,c	;volatile
  3151                           
  3152                           ;MCAL/DIO/DIO_Prog.c: 429:                 Copy_PinInfo->Pin_Value = ~(Copy_PinInfo->Pin
      +                          _Value);
  3153   00198C  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3154   00198E  6ED9               	movwf	fsr2l,c
  3155   001990  6ADA               	clrf	fsr2h,c
  3156   001992  BEDF               	btfsc	indf2,7,c
  3157   001994  EFCE  F00C         	goto	u2771
  3158   001998  EFD1  F00C         	goto	u2770
  3159   00199C                     u2771:
  3160   00199C  0E01               	movlw	1
  3161   00199E  EFD2  F00C         	goto	u2776
  3162   0019A2                     u2770:
  3163   0019A2  0E00               	movlw	0
  3164   0019A4                     u2776:
  3165   0019A4  0AFF               	xorlw	255
  3166   0019A6  6E3B               	movwf	??_MCAL_DIO_TogglePinValue^0,c
  3167   0019A8  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3168   0019AA  6ED9               	movwf	fsr2l,c
  3169   0019AC  6ADA               	clrf	fsr2h,c
  3170   0019AE  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3171   0019B0  323B               	rrcf	??_MCAL_DIO_TogglePinValue^0,f,c
  3172   0019B2  50DF               	movf	223,w,c
  3173   0019B4  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3174   0019B6  0B7F               	andlw	-129
  3175   0019B8  183B               	xorwf	??_MCAL_DIO_TogglePinValue^0,w,c
  3176   0019BA  6EDF               	movwf	223,c
  3177   0019BC  EF0A  F00C         	goto	l3331
  3178   0019C0                     l3357:
  3179   0019C0  503A               	movf	MCAL_DIO_TogglePinValue@Copy_PinInfo^0,w,c
  3180   0019C2  6ED9               	movwf	fsr2l,c
  3181   0019C4  6ADA               	clrf	fsr2h,c
  3182   0019C6  50DF               	movf	223,w,c
  3183   0019C8  0B07               	andlw	7
  3184                           
  3185                           ; Switch size 1, requested type "simple"
  3186                           ; Number of cases is 5, Range of values is 0 to 4
  3187                           ; switch strategies available:
  3188                           ; Name         Instructions Cycles
  3189                           ; simple_byte           16     9 (average)
  3190                           ;	Chosen strategy is simple_byte
  3191   0019CA  0A00               	xorlw	0	; case 0
  3192   0019CC  B4D8               	btfsc	status,2,c
  3193   0019CE  EFDE  F00B         	goto	l3329
  3194   0019D2  0A01               	xorlw	1	; case 1
  3195   0019D4  B4D8               	btfsc	status,2,c
  3196   0019D6  EF0E  F00C         	goto	l3333
  3197   0019DA  0A03               	xorlw	3	; case 2
  3198   0019DC  B4D8               	btfsc	status,2,c
  3199   0019DE  EF3C  F00C         	goto	l3337
  3200   0019E2  0A01               	xorlw	1	; case 3
  3201   0019E4  B4D8               	btfsc	status,2,c
  3202   0019E6  EF6A  F00C         	goto	l3341
  3203   0019EA  0A07               	xorlw	7	; case 4
  3204   0019EC  B4D8               	btfsc	status,2,c
  3205   0019EE  EF98  F00C         	goto	l3345
  3206   0019F2  EFDA  F00B         	goto	l3327
  3207   0019F6                     l3359:
  3208                           
  3209                           ;MCAL/DIO/DIO_Prog.c: 437:     return Local_ErrorStatus;
  3210   0019F6  503E               	movf	MCAL_DIO_TogglePinValue@Local_ErrorStatus^0,w,c
  3211   0019F8  0012               	return		;funcret
  3212   0019FA                     __end_of_MCAL_DIO_TogglePinValue:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _ISR *****************
  3216 ;; Defined at:
  3217 ;;		line 627 in file "MCAL/Interrupt/Interrupt_Prog.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		None
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		Interrupt level 2
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	intcode
  3245   000008                     __pintcode:
  3246                           	callstack 0
  3247   000008                     _ISR:
  3248                           	callstack 28
  3249                           
  3250                           ;incstack = 0
  3251   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3252   00000A                     
  3253                           ;MCAL/Interrupt/Interrupt_Prog.c: 630:         {;MCAL/Interrupt/Interrupt_Prog.c: 631:  
      +                                    EXTINT0_CallBack();
  3254   00000A  A2F2               	btfss	242,1,c	;volatile
  3255   00000C  EF0A  F000         	goto	i2u205_41
  3256   000010  EF0C  F000         	goto	i2u205_40
  3257   000014                     i2u205_41:
  3258   000014  EF0D  F000         	goto	i2l789
  3259   000018                     i2u205_40:
  3260   000018                     
  3261                           ;MCAL/Interrupt/Interrupt_Prog.c: 632:            (*((volatile INTCON_REG_t *)0xFF2)).IN
      +                          T0IF_BIT1 = 0;
  3262   000018  92F2               	bcf	242,1,c	;volatile
  3263   00001A                     i2l789:
  3264                           
  3265                           ;MCAL/Interrupt/Interrupt_Prog.c: 634:         { if((*((volatile INTCON3_REG_t *)0xFF0))
      +                          .INT1IF_BIT0) { EXTINT1_CallBack(); (*((volatile INTCON3_REG_t *)0xFF0)).INT1IF_BIT0 = 0
      +                          ; } }
  3266   00001A  A0F0               	btfss	240,0,c	;volatile
  3267   00001C  EF12  F000         	goto	i2u206_41
  3268   000020  EF14  F000         	goto	i2u206_40
  3269   000024                     i2u206_41:
  3270   000024  EF15  F000         	goto	i2l790
  3271   000028                     i2u206_40:
  3272   000028  90F0               	bcf	240,0,c	;volatile
  3273   00002A                     i2l790:
  3274                           
  3275                           ;MCAL/Interrupt/Interrupt_Prog.c: 635:         { if((*((volatile INTCON3_REG_t *)0xFF0))
      +                          .INT2IF_BIT1) { EXTINT2_CallBack(); (*((volatile INTCON3_REG_t *)0xFF0)).INT2IF_BIT1 = 0
      +                          ; } }
  3276   00002A  A2F0               	btfss	240,1,c	;volatile
  3277   00002C  EF1A  F000         	goto	i2u207_41
  3278   000030  EF1C  F000         	goto	i2u207_40
  3279   000034                     i2u207_41:
  3280   000034  EF1D  F000         	goto	i2l791
  3281   000038                     i2u207_40:
  3282   000038  92F0               	bcf	240,1,c	;volatile
  3283   00003A                     i2l791:
  3284                           
  3285                           ;MCAL/Interrupt/Interrupt_Prog.c: 636:         { if((*((volatile INTCON_REG_t *)0xFF2)).
      +                          RBIF_BIT0) { IOCB_CallBack(); (*((volatile INTCON_REG_t *)0xFF2)).RBIF_BIT0 = 0; } }
  3286   00003A  A0F2               	btfss	242,0,c	;volatile
  3287   00003C  EF22  F000         	goto	i2u208_41
  3288   000040  EF24  F000         	goto	i2u208_40
  3289   000044                     i2u208_41:
  3290   000044  EF25  F000         	goto	i2l792
  3291   000048                     i2u208_40:
  3292   000048  90F2               	bcf	242,0,c	;volatile
  3293   00004A                     i2l792:
  3294                           
  3295                           ;MCAL/Interrupt/Interrupt_Prog.c: 637:         { if((*((volatile INTCON_REG_t *)0xFF2)).
      +                          TMR0IF_BIT2) { TMR0_CallBack(); (*((volatile INTCON_REG_t *)0xFF2)).TMR0IF_BIT2 = 0; } }
  3296   00004A  A4F2               	btfss	242,2,c	;volatile
  3297   00004C  EF2A  F000         	goto	i2u209_41
  3298   000050  EF2C  F000         	goto	i2u209_40
  3299   000054                     i2u209_41:
  3300   000054  EF2D  F000         	goto	i2l793
  3301   000058                     i2u209_40:
  3302   000058  94F2               	bcf	242,2,c	;volatile
  3303   00005A                     i2l793:
  3304                           
  3305                           ;MCAL/Interrupt/Interrupt_Prog.c: 638:         { if((*((volatile PIR1_REG_t *)0xF9E)).TM
      +                          R1IF_BIT0) { TMR1_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).TMR1IF_BIT0 = 0; } }
  3306   00005A  A09E               	btfss	158,0,c	;volatile
  3307   00005C  EF32  F000         	goto	i2u210_41
  3308   000060  EF34  F000         	goto	i2u210_40
  3309   000064                     i2u210_41:
  3310   000064  EF35  F000         	goto	i2l794
  3311   000068                     i2u210_40:
  3312   000068  909E               	bcf	158,0,c	;volatile
  3313   00006A                     i2l794:
  3314                           
  3315                           ;MCAL/Interrupt/Interrupt_Prog.c: 639:         { if((*((volatile PIR1_REG_t *)0xF9E)).TM
      +                          R2IF_BIT1) { TMR2_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).TMR2IF_BIT1 = 0; } }
  3316   00006A  A29E               	btfss	158,1,c	;volatile
  3317   00006C  EF3A  F000         	goto	i2u211_41
  3318   000070  EF3C  F000         	goto	i2u211_40
  3319   000074                     i2u211_41:
  3320   000074  EF3D  F000         	goto	i2l795
  3321   000078                     i2u211_40:
  3322   000078  929E               	bcf	158,1,c	;volatile
  3323   00007A                     i2l795:
  3324                           
  3325                           ;MCAL/Interrupt/Interrupt_Prog.c: 640:         { if((*((volatile PIR1_REG_t *)0xF9E)).CC
      +                          P1IF_BIT2) { CCP1_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).CCP1IF_BIT2 = 0; } }
  3326   00007A  A49E               	btfss	158,2,c	;volatile
  3327   00007C  EF42  F000         	goto	i2u212_41
  3328   000080  EF44  F000         	goto	i2u212_40
  3329   000084                     i2u212_41:
  3330   000084  EF45  F000         	goto	i2l796
  3331   000088                     i2u212_40:
  3332   000088  949E               	bcf	158,2,c	;volatile
  3333   00008A                     i2l796:
  3334                           
  3335                           ;MCAL/Interrupt/Interrupt_Prog.c: 641:         { if((*((volatile PIR1_REG_t *)0xF9E)).SS
      +                          PIF_BIT3) { SSP_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).SSPIF_BIT3 = 0; } }
  3336   00008A  A69E               	btfss	158,3,c	;volatile
  3337   00008C  EF4A  F000         	goto	i2u213_41
  3338   000090  EF4C  F000         	goto	i2u213_40
  3339   000094                     i2u213_41:
  3340   000094  EF4D  F000         	goto	i2l797
  3341   000098                     i2u213_40:
  3342   000098  969E               	bcf	158,3,c	;volatile
  3343   00009A                     i2l797:
  3344                           
  3345                           ;MCAL/Interrupt/Interrupt_Prog.c: 642:         { if((*((volatile PIR1_REG_t *)0xF9E)).TX
      +                          IF_BIT4) { TX_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).TXIF_BIT4 = 0; } }
  3346   00009A  A89E               	btfss	158,4,c	;volatile
  3347   00009C  EF52  F000         	goto	i2u214_41
  3348   0000A0  EF54  F000         	goto	i2u214_40
  3349   0000A4                     i2u214_41:
  3350   0000A4  EF55  F000         	goto	i2l798
  3351   0000A8                     i2u214_40:
  3352   0000A8  989E               	bcf	158,4,c	;volatile
  3353   0000AA                     i2l798:
  3354                           
  3355                           ;MCAL/Interrupt/Interrupt_Prog.c: 643:         { if((*((volatile PIR1_REG_t *)0xF9E)).RC
      +                          IF_BIT5) { RC_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).RCIF_BIT5 = 0; } }
  3356   0000AA  AA9E               	btfss	158,5,c	;volatile
  3357   0000AC  EF5A  F000         	goto	i2u215_41
  3358   0000B0  EF5C  F000         	goto	i2u215_40
  3359   0000B4                     i2u215_41:
  3360   0000B4  EF5D  F000         	goto	i2l799
  3361   0000B8                     i2u215_40:
  3362   0000B8  9A9E               	bcf	158,5,c	;volatile
  3363   0000BA                     i2l799:
  3364                           
  3365                           ;MCAL/Interrupt/Interrupt_Prog.c: 644:         { if((*((volatile PIR1_REG_t *)0xF9E)).PS
      +                          PIF_BIT7) { PSP_CallBack(); (*((volatile PIR1_REG_t *)0xF9E)).PSPIF_BIT7 = 0; } }
  3366   0000BA  AE9E               	btfss	158,7,c	;volatile
  3367   0000BC  EF62  F000         	goto	i2u216_41
  3368   0000C0  EF64  F000         	goto	i2u216_40
  3369   0000C4                     i2u216_41:
  3370   0000C4  EF65  F000         	goto	i2l800
  3371   0000C8                     i2u216_40:
  3372   0000C8  9E9E               	bcf	158,7,c	;volatile
  3373   0000CA                     i2l800:
  3374                           
  3375                           ;MCAL/Interrupt/Interrupt_Prog.c: 645:         { if((*((volatile PIR2_REG_t *)0xFA1)).CC
      +                          P2IF_BIT0) { CCP2_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).CCP2IF_BIT0 = 0; } }
  3376   0000CA  A0A1               	btfss	161,0,c	;volatile
  3377   0000CC  EF6A  F000         	goto	i2u217_41
  3378   0000D0  EF6C  F000         	goto	i2u217_40
  3379   0000D4                     i2u217_41:
  3380   0000D4  EF6D  F000         	goto	i2l801
  3381   0000D8                     i2u217_40:
  3382   0000D8  90A1               	bcf	161,0,c	;volatile
  3383   0000DA                     i2l801:
  3384                           
  3385                           ;MCAL/Interrupt/Interrupt_Prog.c: 646:         { if((*((volatile PIR2_REG_t *)0xFA1)).TM
      +                          R3IF_BIT1) { TMR3_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).TMR3IF_BIT1 = 0; } }
  3386   0000DA  A2A1               	btfss	161,1,c	;volatile
  3387   0000DC  EF72  F000         	goto	i2u218_41
  3388   0000E0  EF74  F000         	goto	i2u218_40
  3389   0000E4                     i2u218_41:
  3390   0000E4  EF75  F000         	goto	i2l802
  3391   0000E8                     i2u218_40:
  3392   0000E8  92A1               	bcf	161,1,c	;volatile
  3393   0000EA                     i2l802:
  3394                           
  3395                           ;MCAL/Interrupt/Interrupt_Prog.c: 647:         { if((*((volatile PIR2_REG_t *)0xFA1)).HL
      +                          VDIF_BIT2) { HLVD_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).HLVDIF_BIT2 = 0; } }
  3396   0000EA  A4A1               	btfss	161,2,c	;volatile
  3397   0000EC  EF7A  F000         	goto	i2u219_41
  3398   0000F0  EF7C  F000         	goto	i2u219_40
  3399   0000F4                     i2u219_41:
  3400   0000F4  EF7D  F000         	goto	i2l803
  3401   0000F8                     i2u219_40:
  3402   0000F8  94A1               	bcf	161,2,c	;volatile
  3403   0000FA                     i2l803:
  3404                           
  3405                           ;MCAL/Interrupt/Interrupt_Prog.c: 648:         { if((*((volatile PIR2_REG_t *)0xFA1)).BC
      +                          LIF_BIT3) { BCL_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).BCLIF_BIT3 = 0; } }
  3406   0000FA  A6A1               	btfss	161,3,c	;volatile
  3407   0000FC  EF82  F000         	goto	i2u220_41
  3408   000100  EF84  F000         	goto	i2u220_40
  3409   000104                     i2u220_41:
  3410   000104  EF85  F000         	goto	i2l804
  3411   000108                     i2u220_40:
  3412   000108  96A1               	bcf	161,3,c	;volatile
  3413   00010A                     i2l804:
  3414                           
  3415                           ;MCAL/Interrupt/Interrupt_Prog.c: 649:         { if((*((volatile PIR2_REG_t *)0xFA1)).EE
      +                          IF_BIT4) { EE_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).EEIF_BIT4 = 0; } }
  3416   00010A  A8A1               	btfss	161,4,c	;volatile
  3417   00010C  EF8A  F000         	goto	i2u221_41
  3418   000110  EF8C  F000         	goto	i2u221_40
  3419   000114                     i2u221_41:
  3420   000114  EF8D  F000         	goto	i2l805
  3421   000118                     i2u221_40:
  3422   000118  98A1               	bcf	161,4,c	;volatile
  3423   00011A                     i2l805:
  3424                           
  3425                           ;MCAL/Interrupt/Interrupt_Prog.c: 650:         { if((*((volatile PIR2_REG_t *)0xFA1)).C2
      +                          IF_BIT5) { C2_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).C2IF_BIT5 = 0; } }
  3426   00011A  AAA1               	btfss	161,5,c	;volatile
  3427   00011C  EF92  F000         	goto	i2u222_41
  3428   000120  EF94  F000         	goto	i2u222_40
  3429   000124                     i2u222_41:
  3430   000124  EF95  F000         	goto	i2l806
  3431   000128                     i2u222_40:
  3432   000128  9AA1               	bcf	161,5,c	;volatile
  3433   00012A                     i2l806:
  3434                           
  3435                           ;MCAL/Interrupt/Interrupt_Prog.c: 651:         { if((*((volatile PIR2_REG_t *)0xFA1)).C1
      +                          IF_BIT6) { C1_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).C1IF_BIT6 = 0; } }
  3436   00012A  ACA1               	btfss	161,6,c	;volatile
  3437   00012C  EF9A  F000         	goto	i2u223_41
  3438   000130  EF9C  F000         	goto	i2u223_40
  3439   000134                     i2u223_41:
  3440   000134  EF9D  F000         	goto	i2l807
  3441   000138                     i2u223_40:
  3442   000138  9CA1               	bcf	161,6,c	;volatile
  3443   00013A                     i2l807:
  3444                           
  3445                           ;MCAL/Interrupt/Interrupt_Prog.c: 652:         { if((*((volatile PIR2_REG_t *)0xFA1)).OS
      +                          CFIF_BIT7) { OSCF_CallBack(); (*((volatile PIR2_REG_t *)0xFA1)).OSCFIF_BIT7 = 0; } }
  3446   00013A  AEA1               	btfss	161,7,c	;volatile
  3447   00013C  EFA2  F000         	goto	i2u224_41
  3448   000140  EFA4  F000         	goto	i2u224_40
  3449   000144                     i2u224_41:
  3450   000144  EFA5  F000         	goto	i2l809
  3451   000148                     i2u224_40:
  3452   000148  9EA1               	bcf	161,7,c	;volatile
  3453   00014A                     i2l809:
  3454   00014A  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3455   00014C  0011               	retfie		f
  3456   00014E                     __end_of_ISR:
  3457                           	callstack 0
  3458                           
  3459                           	psect	rparam
  3460   000000                     
  3461                           	psect	temp
  3462   000051                     btemp:
  3463                           	callstack 0
  3464   000051                     	ds	1
  3465   000000                     int$flags	set	btemp
  3466   000000                     wtemp8	set	btemp+1
  3467   000000                     ttemp5	set	btemp+1
  3468   000000                     ttemp6	set	btemp+4
  3469   000000                     ttemp7	set	btemp+8
  3470                           
  3471                           	psect	idloc
  3472                           
  3473                           ;Config register IDLOC0 @ 0x200000
  3474                           ;	unspecified, using default values
  3475   200000                     	org	2097152
  3476   200000  FF                 	db	255
  3477                           
  3478                           ;Config register IDLOC1 @ 0x200001
  3479                           ;	unspecified, using default values
  3480   200001                     	org	2097153
  3481   200001  FF                 	db	255
  3482                           
  3483                           ;Config register IDLOC2 @ 0x200002
  3484                           ;	unspecified, using default values
  3485   200002                     	org	2097154
  3486   200002  FF                 	db	255
  3487                           
  3488                           ;Config register IDLOC3 @ 0x200003
  3489                           ;	unspecified, using default values
  3490   200003                     	org	2097155
  3491   200003  FF                 	db	255
  3492                           
  3493                           ;Config register IDLOC4 @ 0x200004
  3494                           ;	unspecified, using default values
  3495   200004                     	org	2097156
  3496   200004  FF                 	db	255
  3497                           
  3498                           ;Config register IDLOC5 @ 0x200005
  3499                           ;	unspecified, using default values
  3500   200005                     	org	2097157
  3501   200005  FF                 	db	255
  3502                           
  3503                           ;Config register IDLOC6 @ 0x200006
  3504                           ;	unspecified, using default values
  3505   200006                     	org	2097158
  3506   200006  FF                 	db	255
  3507                           
  3508                           ;Config register IDLOC7 @ 0x200007
  3509                           ;	unspecified, using default values
  3510   200007                     	org	2097159
  3511   200007  FF                 	db	255
  3512                           
  3513                           	psect	config
  3514                           
  3515                           ; Padding undefined space
  3516   300000                     	org	3145728
  3517   300000  FF                 	db	255
  3518                           
  3519                           ;Config register CONFIG1H @ 0x300001
  3520                           ;	Oscillator Selection bits
  3521                           ;	FOSC = HS, HS oscillator
  3522                           ;	Fail-Safe Clock Monitor Enable bit
  3523                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3524                           ;	Internal/External Oscillator Switchover bit
  3525                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3526   300001                     	org	3145729
  3527   300001  02                 	db	2
  3528                           
  3529                           ;Config register CONFIG2L @ 0x300002
  3530                           ;	Power-up Timer Enable bit
  3531                           ;	PWRT = OFF, PWRT disabled
  3532                           ;	Brown-out Reset Enable bits
  3533                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3534                           ;	Brown Out Reset Voltage bits
  3535                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3536   300002                     	org	3145730
  3537   300002  19                 	db	25
  3538                           
  3539                           ;Config register CONFIG2H @ 0x300003
  3540                           ;	Watchdog Timer Enable bit
  3541                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3542                           ;	Watchdog Timer Postscale Select bits
  3543                           ;	WDTPS = 32768, 1:32768
  3544   300003                     	org	3145731
  3545   300003  1E                 	db	30
  3546                           
  3547                           ; Padding undefined space
  3548   300004                     	org	3145732
  3549   300004  FF                 	db	255
  3550                           
  3551                           ;Config register CONFIG3H @ 0x300005
  3552                           ;	CCP2 MUX bit
  3553                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3554                           ;	PORTB A/D Enable bit
  3555                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3556                           ;	Low-Power Timer1 Oscillator Enable bit
  3557                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3558                           ;	HFINTOSC Fast Start-up
  3559                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3560                           ;	MCLR Pin Enable bit
  3561                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3562   300005                     	org	3145733
  3563   300005  89                 	db	137
  3564                           
  3565                           ;Config register CONFIG4L @ 0x300006
  3566                           ;	Stack Full/Underflow Reset Enable bit
  3567                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3568                           ;	Single-Supply ICSP Enable bit
  3569                           ;	LVP = OFF, Single-Supply ICSP disabled
  3570                           ;	Extended Instruction Set Enable bit
  3571                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3572                           ;	Background Debugger Enable bit
  3573                           ;	DEBUG = 0x1, unprogrammed default
  3574   300006                     	org	3145734
  3575   300006  81                 	db	129
  3576                           
  3577                           ; Padding undefined space
  3578   300007                     	org	3145735
  3579   300007  FF                 	db	255
  3580                           
  3581                           ;Config register CONFIG5L @ 0x300008
  3582                           ;	Code Protection Block 0
  3583                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3584                           ;	Code Protection Block 1
  3585                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3586                           ;	Code Protection Block 2
  3587                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3588                           ;	Code Protection Block 3
  3589                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3590   300008                     	org	3145736
  3591   300008  0F                 	db	15
  3592                           
  3593                           ;Config register CONFIG5H @ 0x300009
  3594                           ;	Boot Block Code Protection bit
  3595                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3596                           ;	Data EEPROM Code Protection bit
  3597                           ;	CPD = OFF, Data EEPROM not code-protected
  3598   300009                     	org	3145737
  3599   300009  C0                 	db	192
  3600                           
  3601                           ;Config register CONFIG6L @ 0x30000A
  3602                           ;	Write Protection Block 0
  3603                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3604                           ;	Write Protection Block 1
  3605                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3606                           ;	Write Protection Block 2
  3607                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3608                           ;	Write Protection Block 3
  3609                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3610   30000A                     	org	3145738
  3611   30000A  0F                 	db	15
  3612                           
  3613                           ;Config register CONFIG6H @ 0x30000B
  3614                           ;	Configuration Register Write Protection bit
  3615                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3616                           ;	Boot Block Write Protection bit
  3617                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3618                           ;	Data EEPROM Write Protection bit
  3619                           ;	WRTD = OFF, Data EEPROM not write-protected
  3620   30000B                     	org	3145739
  3621   30000B  E0                 	db	224
  3622                           
  3623                           ;Config register CONFIG7L @ 0x30000C
  3624                           ;	Table Read Protection Block 0
  3625                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3626                           ;	Table Read Protection Block 1
  3627                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3628                           ;	Table Read Protection Block 2
  3629                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3630                           ;	Table Read Protection Block 3
  3631                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3632   30000C                     	org	3145740
  3633   30000C  0F                 	db	15
  3634                           
  3635                           ;Config register CONFIG7H @ 0x30000D
  3636                           ;	Boot Block Table Read Protection bit
  3637                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3638   30000D                     	org	3145741
  3639   30000D  40                 	db	64
  3640                           tosu	equ	0xFFF
  3641                           tosh	equ	0xFFE
  3642                           tosl	equ	0xFFD
  3643                           stkptr	equ	0xFFC
  3644                           pclatu	equ	0xFFB
  3645                           pclath	equ	0xFFA
  3646                           pcl	equ	0xFF9
  3647                           tblptru	equ	0xFF8
  3648                           tblptrh	equ	0xFF7
  3649                           tblptrl	equ	0xFF6
  3650                           tablat	equ	0xFF5
  3651                           prodh	equ	0xFF4
  3652                           prodl	equ	0xFF3
  3653                           indf0	equ	0xFEF
  3654                           postinc0	equ	0xFEE
  3655                           postdec0	equ	0xFED
  3656                           preinc0	equ	0xFEC
  3657                           plusw0	equ	0xFEB
  3658                           fsr0h	equ	0xFEA
  3659                           fsr0l	equ	0xFE9
  3660                           wreg	equ	0xFE8
  3661                           indf1	equ	0xFE7
  3662                           postinc1	equ	0xFE6
  3663                           postdec1	equ	0xFE5
  3664                           preinc1	equ	0xFE4
  3665                           plusw1	equ	0xFE3
  3666                           fsr1h	equ	0xFE2
  3667                           fsr1l	equ	0xFE1
  3668                           bsr	equ	0xFE0
  3669                           indf2	equ	0xFDF
  3670                           postinc2	equ	0xFDE
  3671                           postdec2	equ	0xFDD
  3672                           preinc2	equ	0xFDC
  3673                           plusw2	equ	0xFDB
  3674                           fsr2h	equ	0xFDA
  3675                           fsr2l	equ	0xFD9
  3676                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    32
    Data        11
    BSS         57
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     12      80
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    AD_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    BCL_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    C1_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    C2_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP2_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EE_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EXTINT0_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EXTINT1_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EXTINT2_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    HAL_LED_LEDBlink@Copy_LED	PTR struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    HAL_LED_LEDConfig@Copy_LED	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    HAL_Push_Button_BtnConfig@Copy_Btn	PTR const struct . size(1) Largest target is 1
		 -> Btn(COMRAM[1]), 

    HAL_Push_Button_ReadBtn@Copy_Btn	PTR struct . size(1) Largest target is 1
		 -> Btn(COMRAM[1]), 

    HAL_Push_Button_ReadBtn@Copy_BtnStatus	PTR unsigned char  size(1) Largest target is 1
		 -> Global_BtnRead(COMRAM[1]), 

    HLVD_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    IOCB_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    MCAL_DIO_ReadPinValue@Copy_PinInfo	PTR const struct . size(1) Largest target is 1
		 -> HAL_Push_Button_ReadBtn@Btn(COMRAM[1]), 

    MCAL_DIO_ReadPinValue@Copy_PinValue	PTR enum E228 size(1) Largest target is 1
		 -> HAL_KeyPad_KeyPadReadCharacter@Local_ScanColVal(COMRAM[1]), HAL_KeyPad_KeyPadReadNumber@Local_ScanColVal(COMRAM[1]), HAL_Push_Button_ReadBtn@Local_BtnStatus(COMRAM[1]), 

    MCAL_DIO_SetPinDirection@Copy_PinInfo	PTR const struct . size(1) Largest target is 1
		 -> HAL_LED_LEDArrayConfig@LED(COMRAM[1]), HAL_LED_LEDConfig@LED(COMRAM[1]), HAL_Push_Button_BtnConfig@Btn(COMRAM[1]), MCAL_Interrupt_EXTIntStatus@INT0(COMRAM[1]), 
		 -> MCAL_Interrupt_EXTIntStatus@INT1(COMRAM[1]), MCAL_Interrupt_EXTIntStatus@INT2(COMRAM[1]), 

    MCAL_DIO_SetPinValue@Copy_PinInfo	PTR struct . size(1) Largest target is 1
		 -> HAL_LED_LEDArrayPatternBlink@LED(COMRAM[1]), HAL_LED_LEDArrayPatternOff@LED(COMRAM[1]), HAL_LED_LEDArrayPatternOn@LED(COMRAM[1]), HAL_LED_LEDConfig@LED(COMRAM[1]), 
		 -> HAL_LED_LEDOff@LED(COMRAM[1]), HAL_LED_LEDOn@LED(COMRAM[1]), 

    MCAL_DIO_TogglePinValue@Copy_PinInfo	PTR struct . size(1) Largest target is 1
		 -> HAL_LED_LEDBlink@LED(COMRAM[1]), HAL_LED_LEDToggle@LED(COMRAM[1]), 

    OSCF_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    PSP_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    SSP_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR0_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR1_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR2_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TMR3_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TX_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 


Critical Paths under _main in COMRAM

    _main->_HAL_Push_Button_ReadBtn
    _HAL_Push_Button_ReadBtn->_MCAL_DIO_ReadPinValue
    _HAL_Push_Button_BtnConfig->_MCAL_DIO_SetPinDirection
    _HAL_LED_LEDConfig->_MCAL_DIO_SetPinValue
    _HAL_LED_LEDBlink->_MCAL_DIO_TogglePinValue

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8467
                   _HAL_LED_LEDBlink
                  _HAL_LED_LEDConfig
          _HAL_Push_Button_BtnConfig
            _HAL_Push_Button_ReadBtn
 ---------------------------------------------------------------------------------
 (1) _HAL_Push_Button_ReadBtn                              7     5      2    2436
                                              6 COMRAM     6     4      2
              _MCAL_DIO_ReadPinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_ReadPinValue                                6     4      2    1744
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _HAL_Push_Button_BtnConfig                            4     3      1    1357
                                              4 COMRAM     3     2      1
           _MCAL_DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (1) _HAL_LED_LEDConfig                                    4     3      1    3536
                                              7 COMRAM     3     2      1
           _MCAL_DIO_SetPinDirection
               _MCAL_DIO_SetPinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_SetPinValue                                 7     5      2    2110
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_SetPinDirection                             4     3      1    1116
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _HAL_LED_LEDBlink                                     6     5      1    1138
                                              5 COMRAM     5     4      1
            _MCAL_DIO_TogglePinValue
 ---------------------------------------------------------------------------------
 (2) _MCAL_DIO_TogglePinValue                              5     4      1     829
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HAL_LED_LEDBlink
     _MCAL_DIO_TogglePinValue
   _HAL_LED_LEDConfig
     _MCAL_DIO_SetPinDirection
     _MCAL_DIO_SetPinValue
   _HAL_Push_Button_BtnConfig
     _MCAL_DIO_SetPinDirection
   _HAL_Push_Button_ReadBtn
     _MCAL_DIO_ReadPinValue

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      39        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBIGSFRh          7E      0       0      37        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      C      50       1       85.1%
BITBIGSFRl          21      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      50      12        0.0%
DATA                 0      0      50       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Jul 09 06:01:20 2024

              __end_of_HAL_Push_Button_ReadBtn 1DAC                                             l25 1FDE  
                                           l99 1DEC                                            l202 1F22  
                                          l109 1E78                                            l222 1DAA  
                                          l139 1FCC                                            l261 177E  
                                          l336 1436                                            l194 1EBA  
                                          l372 1C2C                                            l388 19F8  
                                          _ISR 0008                                            _Btn 004F  
                                          _key 0046                                            wreg 0FE8  
          MCAL_DIO_ReadPinValue@Local_PinValue 003F                                           ?_ISR 003A  
                                         l3121 1438                                           l4001 13E8  
                                         l3201 1022                                           l3123 1458  
                                         l3211 108E                                           l3203 1042  
                                         l3141 1522                                           l3125 1460  
                                         l3213 10A2                                           l3221 10E0  
                                         l3205 1056                                           l3151 1584  
                                         l3127 1468                                           l3135 14C2  
                                         l3119 1438                                           l3231 1178  
                                         l3223 110A                                           l3215 10CC  
                                         l3207 105E                                           l3321 1780  
                                         l3161 160A                                           l3153 15B0  
                                         l3137 14EE                                           l3129 1494  
                                         l3241 11BE                                           l3225 1112  
                                         l3209 1066                                           l3331 1814  
                                         l3323 1780                                           l3163 1612  
                                         l3171 166C                                           l3139 14F6  
                                         l3147 1550                                           l3243 11E6  
                                         l3227 113A                                           l3411 1B6C  
                                         l3341 18D4                                           l3333 181C  
                                         l3325 17A0                                           l3181 16EC  
                                         l3173 1698                                           l3165 163E  
                                         l3149 157C                                           l3261 12A6  
                                         l3245 11FA                                           l3253 1238  
                                         l3229 114E                                           l3237 118C  
                                         l3501 1C6C                                           l3327 17B4  
                                         l3175 169C                                           l3159 15DE  
                                         l3271 130E                                           l3263 12D0  
                                         l3255 1262                                           l3247 1224  
                                         l3239 11B6                                           l3423 1BA4  
                                         l3407 1B32                                           l3511 1CB2  
                                         l3503 1C6E                                           l3345 1930  
                                         l3337 1878                                           l3329 17BC  
                                         l3193 1746                                           l3281 1382  
                                         l3273 1312                                           l3257 126A  
                                         l3425 1BD0                                           l3409 1B5C  
                                         l3441 1C2A                                           l3513 1CC2  
                                         l3521 1D12                                           l3505 1C7E  
                                         l3179 16C0                                           l3187 171A  
                                         l3195 177C                                           l3283 13C0  
                                         l3259 1292                                           l3451 1DE8  
                                         l3427 1BE0                                           l3419 1B80  
                                         l3371 1A3A                                           l3363 19FA  
                                         l3531 1D74                                           l3515 1CE0  
                                         l3523 1D26                                           l3507 1C9A  
                                         l3349 1954                                           l3357 19C0  
                                         l3541 1F24                                           l3277 1336  
                                         l3269 12E4                                           l3453 1DF0  
                                         l3445 1DAC                                           l3373 1A64  
                                         l3365 19FE                                           l3533 1D84  
                                         l3525 1D3A                                           l3517 1CEC  
                                         l3509 1C9E                                           l3359 19F6  
                                         l3551 1F64                                           l3543 1F28  
                                         l3279 136E                                           l3295 13FE  
                                         l3199 1022                                           l3463 1E54  
                                         l3455 1E26                                           l3447 1DAC  
                                         l3471 1E7A                                           l3383 1A96  
                                         l3375 1A74                                           l3439 1BF4  
                                         l3367 1A1E                                           l3527 1D4A  
                                         l3535 1D98                                           l3519 1CFC  
                                         l3561 1F90                                           l3545 1F2C  
                                         l3289 13D4                                           l3297 1434  
                                         l3457 1E28                                           l3449 1DC8  
                                         l3481 1EF4                                           l3473 1E7A  
                                         l3385 1AC0                                           l3377 1A84  
                                         l3369 1A32                                           l3529 1D68  
                                         l3537 1DAA                                           l3571 1FBC  
                                         l3563 1F9C                                           l3547 1F42  
                                         l3467 1E78                                           l3459 1E38  
                                         l3483 1EF6                                           l3475 1E96  
                                         l3395 1AE4                                           l3387 1AD0  
                                         l3379 1A8E                                           l3565 1F9C  
                                         l3557 1F74                                           l3549 1F62  
                                         l3485 1F06                                           l3477 1EB6  
                                         l3397 1B0E                                           l3493 1C2E  
                                         l3573 1FCE                                           l3567 1FB2  
                                         l3559 1F8C                                           l3479 1EBE  
                                         l3399 1B1E                                           l3495 1C32  
                                         l3575 1FEA                                           l3569 1FBA  
                                         l3489 1F22                                           l3497 1C36  
                                         l3577 1FFA                                           l3499 1C4C  
                                         l3993 10F4                                           l3995 11A0  
                                         l3997 124C                                           l3999 12F8  
                                         u3000 1E74                                           u3001 1E70  
                                         u3010 1E96                                           u3011 1E92  
                                         u3020 1EB6                                           u3100 1D3A  
                                         u3021 1EB2                                           u3101 1D36  
                                         u2310 1566                                           u3110 1D4A  
                                         u2311 1560                                           u3111 1D46  
                                         u2304 1540                                           u3040 1F1E  
                                         u3120 1D84                                           u2305 153C  
                                         u3041 1F1A                                           u3121 1D80  
                                         u2410 1730                                           u2250 1458  
                                         u2411 172A                                           u2251 1454  
                                         u3035 1F04                                           u3140 1F8C  
                                         u2404 170A                                           u2340 15F4  
                                         u2324 15A2                                           u2316 1568  
                                         u2420 1042                                           u3060 1C9A  
                                         u3141 1F88                                           u2405 1706  
                                         u2341 15EE                                           u2325 159E  
                                         u2421 103E                                           u3037 1F06  
                                         u3061 1C96                                           u3150 1FCC  
                                         u2334 15CE                                           u2430 1056  
                                         u3070 1CB2                                           u3151 1FC8  
                                         u3135 1F72                                           u2335 15CA  
                                         u2431 1052                                           u3071 1CAE  
                                         u3055 1C7C                                           u2416 1732  
                                         u2280 14D8                                           u2264 1486  
                                         u2600 1332                                           u2504 116C  
                                         u3080 1CC2                                           u3160 1FFA  
                                         u3137 1F74                                           u2281 14D2  
                                         u2265 1482                                           u2601 132E  
                                         u2505 1168                                           u3081 1CBE  
                                         u3057 1C7E                                           u3161 1FF6  
                                         u2370 1682                                           u2354 1630  
                                         u2346 15F6                                           u2274 14B2  
                                         u3090 1CFC                                           u2371 167C  
                                         u2355 162C                                           u2275 14AE  
                                         u2515 1186                                           u3091 1CF8  
                                         u2700 185A                                           u2380 16BC  
                                         u2364 165C                                           u2524 11DC  
                                         u2516 1188                                           u2444 1084  
                                         u2701 1854                                           u2381 16B8  
                                         u2365 1658                                           u2525 11D8  
                                         u2445 1080                                           u2294 1514  
                                         u2286 14DA                                           u2614 1354  
                                         u2295 1510                                           u2615 1350  
                                         u2535 11F4                                           u2455 109C  
                                         u2720 18B6                                           u2376 1684  
                                         u2544 1218                                           u2536 11F6  
                                         u2464 10C0                                           u2456 109E  
                                         u2721 18B0                                           u2625 137C  
                                         u2545 1214                                           u2465 10BC  
                                         u2714 1896                                           u2706 185C  
                                         u2650 17A0                                           u2394 16DE  
                                         u2634 13A0                                           u2626 137E  
                                         u2810 1A74                                           u2715 1892  
                                         u2651 179C                                           u2395 16DA  
                                         u2635 139C                                           u2555 1232  
                                         u2475 10DA                                           u2811 1A70  
                                         u2740 1912                                           u2660 17B4  
                                         u2564 1288                                           u2556 1234  
                                         u2484 1130                                           u2476 10DC  
                                         u2900 1B6C                                           u2820 1A84  
                                         u2804 1A58                                           u2741 190C  
                                         u2661 17B0                                           u2645 13CE  
                                         u2565 1284                                           u2485 112C  
                                         u2901 1B68                                           u2821 1A80  
                                         u2805 1A54                                           u2750 1950  
                                         u2734 18F2                                           u2726 18B8  
                                         u2646 13D0                                           u2910 1B7C  
                                         u2751 194C                                           u2735 18EE  
                                         u2575 12A0                                           u2495 1148  
                                         u2911 1B78                                           u2680 17FA  
                                         u2584 12C4                                           u2576 12A2  
                                         u2496 114A                                           u2920 1BA0  
                                         u2840 1AD0                                           u2681 17F4  
                                         u2585 12C0                                           u2921 1B9C  
                                         u2841 1ACC                                           u2770 19A2  
                                         u2746 1914                                           u2674 17DA  
                                         u2850 1AE0                                           u2834 1AB4  
                                         u2771 199C                                           u2675 17D6  
                                         u2595 12DE                                           u2851 1ADC  
                                         u2835 1AB0                                           u2764 1972  
                                         u2596 12E0                                           u2940 1BE0  
                                         u2780 1A1E                                           u2765 196E  
                                         u2941 1BDC                                           u2781 1A1A  
                                         u2694 183A                                           u2686 17FC  
                                         u2950 1BF0                                           u2934 1BC4  
                                         u2870 1B1E                                           u2790 1A32  
                                         u2695 1836                                           u3807 1FA6  
                                         u2951 1BEC                                           u2935 1BC0  
                                         u2871 1B1A                                           u2791 1A2E  
                                         u2776 19A4                                           u2960 1DC8  
                                         u2880 1B2E                                           u2864 1B02  
                                         u2961 1DC4                                           u2881 1B2A  
                                         u2865 1AFE                                           u2970 1DE8  
                                         u2971 1DE4                                           u2990 1E50  
                                         u2894 1B50                                           u2991 1E4C  
                                         u2895 1B4C                                           u2985 1E36  
                                         u2987 1E38                                           u3787 1CCC  
                                         u3797 1D54                           _MCAL_DIO_SetPinValue 1022  
                                         _led1 0050                                           _main 1FCE  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr1l 0FE1                                           fsr2l 0FD9  
                                         btemp 0051                                           start 014E  
                       ?_MCAL_DIO_ReadPinValue 003A                      _HAL_Push_Button_BtnConfig 1E7A  
                                 ___param_bank 0000                                          ??_ISR 003A  
                                 _SSP_CallBack 0019                                          ?_main 003A  
                                        i2l800 00CA                                          i2l801 00DA  
                                        i2l802 00EA                                          i2l803 00FA  
                                        i2l804 010A                                          i2l805 011A  
                                        i2l806 012A                                          i2l807 013A  
                                        i2l809 014A                                          i2l790 002A  
                                        i2l791 003A                                          i2l792 004A  
                                        i2l793 005A                                          i2l794 006A  
                                        i2l795 007A                                          i2l796 008A  
                                        i2l797 009A                                          i2l789 001A  
                                        i2l798 00AA                                          i2l799 00BA  
                                        _PORTB 0F81                                  _HLVD_CallBack 000B  
                        ?_MCAL_DIO_SetPinValue 003A                                          tablat 0FF5  
                                        ttemp5 0052                                          ttemp6 0055  
                                        ttemp7 0059                                          status 0FD8  
                                        wtemp8 0052                                __initialization 200A  
                                  _TX_CallBack 0017                                   __end_of_main 200A  
                      _MCAL_DIO_TogglePinValue 1780              HAL_Push_Button_BtnConfig@Copy_Btn 003E  
                                       ??_main 0046                                  __activetblptr 0003  
__end_of_Local_KeyPadLayout@KeyPad_Config$F177 1011          _Local_KeyPadLayout@KeyPad_Config$F177 1001  
                                       i2l3061 0028                                         i2l3071 0078  
                                       i2l3063 0038                                         i2l3081 00C8  
                                       i2l3073 0088                                         i2l3065 0048  
                                       i2l3057 000A                                         i2l3091 0118  
                                       i2l3083 00D8                                         i2l3075 0098  
                                       i2l3067 0058                                         i2l3059 0018  
                                       i2l3093 0128                                         i2l3085 00E8  
                                       i2l3077 00A8                                         i2l3069 0068  
                                       i2l3095 0138                                         i2l3087 00F8  
                                       i2l3079 00B8                                         i2l3097 0148  
                                       i2l3089 0108                                  _CCP1_CallBack 001B  
                                 _BCL_CallBack 0009                                  _CCP2_CallBack 000F  
                                       clear_0 2030                         HAL_LED_LEDToggle@F2845 0035  
                                       isa$std 0001                      HAL_LED_LEDConfig@Copy_LED 0041  
                                 __pdataCOMRAM 0046                                   __mediumconst 0000  
                                       tblptrh 0FF7                                         tblptrl 0FF6  
                                       tblptru 0FF8                         ??_MCAL_DIO_SetPinValue 003C  
                                   __accesstop 0060                        __end_of__initialization 2036  
                                ___rparam_used 0001                      ??_MCAL_DIO_TogglePinValue 003B  
                               __pcstackCOMRAM 003A             MCAL_DIO_ReadPinValue@Copy_PinValue 003B  
     MCAL_DIO_TogglePinValue@Local_ErrorStatus 003E                          HAL_LED_LEDBlink@F2851 0034  
                             _HAL_LED_LEDBlink 1F24                     __end_of_Local_KeyPadLayout 1021  
             MCAL_Interrupt_EXTIntStatus@F3091 002B               MCAL_Interrupt_EXTIntStatus@F3087 002D  
             MCAL_Interrupt_EXTIntStatus@F3089 002C                        ??_MCAL_DIO_ReadPinValue 003C  
                     HAL_LED_LEDBlink@Copy_LED 003F                      ?_MCAL_DIO_SetPinDirection 003A  
                      _HAL_Push_Button_ReadBtn 1C2E              HAL_LED_LEDArrayPatternBlink@F2878 0030  
                 HAL_Push_Button_ReadBtn@F2823 002E                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 1000  
                                      __pcinit 200A                                        __ramtop 1000  
       MCAL_DIO_ReadPinValue@Local_ErrorStatus 003E                                        __ptext0 1FCE  
                                      __ptext1 1C2E                                        __ptext2 19FA  
                                      __ptext3 1E7A                                        __ptext4 1DAC  
                                      __ptext5 1022                                        __ptext6 1438  
                                      __ptext7 1F24                                        __ptext8 1780  
         MCAL_DIO_SetPinDirection@Copy_PinInfo 003A                           end_of_initialization 2036  
              HAL_LED_LEDArrayPatternOff@F2870 0031                                        postdec1 0FE5  
                                      postinc0 0FEE          MCAL_DIO_SetPinValue@Local_ErrorStatus 0040  
                    ??_HAL_Push_Button_ReadBtn 0042                                  _OSCF_CallBack 0001  
                     __end_of_HAL_LED_LEDBlink 1FCE                                    _C1_CallBack 0003  
                                  _C2_CallBack 0005                                  __pidataCOMRAM 2040  
                          start_initialization 200A                                    __end_of_ISR 014E  
                            _HAL_LED_LEDConfig 1DAC                             ?_HAL_LED_LEDConfig 0041  
                           _Local_KeyPadLayout 1011               __end_of_MCAL_DIO_SetPinDirection 1780  
                          ??_HAL_LED_LEDConfig 0042                  __end_of_MCAL_DIO_ReadPinValue 1C2E  
             MCAL_DIO_SetPinValue@Copy_PinInfo 003A                      __end_of_HAL_LED_LEDConfig 1E7A  
                                  __pbssCOMRAM 0001                                    _AD_CallBack 0013  
                     ?_MCAL_DIO_TogglePinValue 003A                                      __pintcode 0008  
                             _EXTINT0_CallBack 0029                           HAL_LED_LEDConfig@LED 0043  
                             _EXTINT1_CallBack 0027            MCAL_DIO_TogglePinValue@Copy_PinInfo 003A  
                             _EXTINT2_CallBack 0025          HAL_Push_Button_ReadBtn@Copy_BtnStatus 0041  
                       HAL_LED_LEDConfig@F2830 0038                                    __smallconst 1000  
                  HAL_LED_LEDArrayConfig@F2857 0033                     ?_HAL_Push_Button_BtnConfig 003E  
                   HAL_Push_Button_ReadBtn@Btn 0044                                  _TMR0_CallBack 0021  
               HAL_LED_LEDArrayPatternOn@F2864 0032                                  _TMR1_CallBack 001F  
                                  _EE_CallBack 0007                                  _TMR2_CallBack 001D  
                                     i2u210_40 0068                                       i2u210_41 0064  
                                     i2u211_40 0078                                       i2u211_41 0074  
                                     i2u220_40 0108                                       i2u212_40 0088  
                                     i2u220_41 0104                                       i2u212_41 0084  
                                     i2u221_40 0118                                       i2u213_40 0098  
                                     i2u205_40 0018                                       i2u221_41 0114  
                                     i2u213_41 0094                                       i2u205_41 0014  
                                     i2u222_40 0128                                       i2u214_40 00A8  
                                     i2u206_40 0028                                       i2u222_41 0124  
                                     i2u214_41 00A4                                       i2u206_41 0024  
                                     i2u223_40 0138                                       i2u215_40 00B8  
                                     i2u207_40 0038                                       i2u223_41 0134  
                                     i2u215_41 00B4                                       i2u207_41 0034  
                                     i2u224_40 0148                                       i2u216_40 00C8  
                                     i2u208_40 0048                                       i2u224_41 0144  
                                     i2u216_41 00C4                                       i2u208_41 0044  
                                     i2u217_40 00D8                                       i2u209_40 0058  
                                     i2u217_41 00D4                                       i2u209_41 0054  
                                     i2u218_40 00E8                                       i2u218_41 00E4  
                                     i2u219_40 00F8                                       i2u219_41 00F4  
                                _TMR3_CallBack 000D                                 _Global_BtnRead 004E  
                     _MCAL_DIO_SetPinDirection 1438                __end_of_MCAL_DIO_TogglePinValue 19FA  
            __end_of_HAL_Push_Button_BtnConfig 1F24                                      copy_data0 201E  
              HAL_Push_Button_ReadBtn@Copy_Btn 0040                              ?_HAL_LED_LEDBlink 003F  
                           ??_HAL_LED_LEDBlink 0040                                       __Hrparam 0000  
                                     __Lrparam 0000                 HAL_Push_Button_BtnConfig@F2816 002F  
    MCAL_DIO_SetPinDirection@Local_ErrorStatus 003D                            HAL_LED_LEDBlink@LED 0043  
                          HAL_LED_LEDOff@F2840 0036              MCAL_DIO_SetPinValue@Copy_PinValue 003B  
            MCAL_DIO_ReadPinValue@Copy_PinInfo 003A            HAL_LED_LEDBlink@Local_BlinkingTimes 0042  
                                 _ReturnStatus 0039                                       isa$xinst 0000  
                                     int$flags 0051                   __end_of_MCAL_DIO_SetPinValue 1438  
                     ?_HAL_Push_Button_ReadBtn 0040                             HAL_LED_LEDOn@F2835 0037  
                                     intlevel2 0000                                    _RC_CallBack 0015  
                                _IOCB_CallBack 0023                          _MCAL_DIO_ReadPinValue 19FA  
                 HAL_Push_Button_BtnConfig@Btn 0040                    ??_HAL_Push_Button_BtnConfig 003F  
                                 _PSP_CallBack 0011                     ??_MCAL_DIO_SetPinDirection 003B  
       HAL_Push_Button_ReadBtn@Local_BtnStatus 0045  
